{"version":3,"sources":["Components/Dashboard/Editor/EditorHeader.js","services/auth.js","Components/Dashboard/Editor/SideBar.js","routers/EditorRoutes.js","routers/PublicRoute.js","Components/Layouts/Header.js","Components/Layouts/Pages/Team.js","Components/Layouts/Pages/About.js","Components/Layouts/Pages/Contact.js","Components/Layouts/Pages/NewsItem.js","Components/Layouts/Pages/Sectors.js","Components/Layouts/Pages/PortfolioItems.js","Components/Layouts/Pages/Portfolio.js","Components/Layouts/Pages/Pvc.js","Components/Layouts/Pages/Signin.js","Components/Layouts/Pages/Signup.js","Components/Layouts/Pages/Stones.js","Components/Layouts/Pages/Fabmine.js","Components/Layouts/Pages/Main.js","Components/Layouts/Pages/EditorLogin.js","Components/Layouts/Pages/EditorReg.js","Components/Layouts/Header2.js","Components/Layouts/Pages/ItemProduct.js","Components/Layouts/Pages/Products.js","Components/Layouts/Pages/ItemService.js","Components/Layouts/Pages/Services.js","Components/Layouts/Pages/NotFoundPage.js","Components/Dashboard/Editor/Upload.js","Components/Dashboard/Editor/Dashboard.js","Components/Dashboard/Editor/Slide.js","Components/Dashboard/Editor/ManageSector.js","Components/Dashboard/Editor/Quote.js","Components/Dashboard/Editor/Setting.js","Components/Dashboard/Editor/MyUpload.js","Components/Dashboard/Editor/Financ.js","Components/Dashboard/Editor/Portfolio.js","Components/Dashboard/Editor/OurTeam.js","Components/Dashboard/Editor/News.js","Components/Dashboard/Editor/About.js","Components/Dashboard/Editor/Sectors.js","Components/Dashboard/Editor/Message.js","Components/Dashboard/Editor/ProductpopUp.js","Components/Dashboard/Editor/ServicepopUp.js","Components/Dashboard/Editor/FatchService.js","Components/Dashboard/Editor/FatchProduct.js","Components/Dashboard/Editor/ProductService.js","routers/AppRouters.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","margin","spacing","small","width","height","large","PersistentDrawerLeft","props","classes","style","AppBar","position","Toolbar","IconButton","color","aria-label","onClick","toggleDrawer","edge","src","className","marginLeft","Typography","align","user","name","marginTop","getUser","window","sessionStorage","getItem","JSON","parse","setUser","setItem","stringify","isLoggedIn","list","fullList","gray","SwipeableTemporaryDrawer","SwipeableDrawer","open","onClose","onOpen","role","onKeyDown","List","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","callback","EditorRoutes","Component","component","rest","useState","setOpen","event","type","key","id","padding","PublicRoute","Heaher","state","collapsed","site","handleTogglerClick","setState","_this","this","fetch","then","res","json","info","catch","error","console","log","overlay","backgroundColor","dark","expand","fixed","scrolling","transparent","isOpen","navbar","left","active","href","right","hint","containerClass","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","Gallery","team","length","additionalTransfrom","arrows","autoPlay","autoPlaySpeed","centerMode","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","map","member","index","minHeight","maxWidth","alt","_id","image","Rating","value","rating","precision","readOnly","description","React","TabsDefault","activeItem","we","undefined","mission","values","data","toggle","tab","e","method","find","item","title","result","md","disabled","textAlign","tabId","email","setEmail","email1","setEmail1","phone","setPhone","officeHours","setOfficeHours","address","setAddress","address1","setAddress1","customeremail","setCustomerEmail","customername","setCustomerName","customerdescription","setCustomerDescription","customerrating","contactText","setContactText","contactDesc","setContactDesc","setting","setSetting","nameerror","setNameerror","emailerror","setEmailerror","descriptionerror","setDescriptionerror","useEffect","socialarray","mixdata","i","push","aa","fontWeight","icon","size","paddingRight","float","onSubmit","preventDefault","FormData","append","body","alert","label","onChange","target","TabPanel","children","other","hidden","aria-labelledby","Box","p","flexGrow","palette","background","paper","Sectors","setValue","news","setNews","optionData","setOptionData","category","setCategory","mix","setMix","categorydata","sector","optionItems_category","Tab","zIndex","boxShadow","Tabs","newValue","indicatorColor","textColor","variant","scrollButtons","filter","NewsItem","modal","detail","Portfolio","portfolio","setPortfolio","FormDialog","handleClose","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","DialogActions","Button","outline","bottom","Fabmine","whatsapp","setWhatsapp","Fab","Main","siteText","siteDesc","quoteText","quoteLink","siteImg","slide","images","firstimage","slideImages","slideArray","item_quote","quotomap","n","duration","delay","xl","About","marginBottom","Contact","borderRadius","EditorLogin","handleSubmit","pass","emailnotfound","passwordincorrect","headers","password","jwt_decode","token","captchaDemo","reset","execute","htmlFor","EditorReg","setName","setPass","passerror","setPasserror","message_success","setMessage_success","message","sect","detailModal","setDetailModal","cat","setCat","sub","setSub","bra","setBra","mod","setMod","it","subCategory","model","brand","fontSize","discount","borderBottom","substring","marginRight","price","visible","onCancel","footer","soldByObject","soldBy","soldbyswt","portionn","portion","portionValue","portionswt","measurement","unit","lenght","depth","Products","fetchProductsHandler","page","products","productCount","total","fetchProductsByCategory","onChangeCategory","onChangeSubCategory","onChangeBrand","clearHandler","onPageChange","currentPage","subcategorydata","branddata","brandmodeldata","MenuItem","optionItems_subcategory","optionItems_brand","placeholder","product","ItemProduct","current","pageSize","defaultPageSize","Services","fetchServicesHandler","services","serviceCount","ItemService","Avatar","imageUrl","defaultV","loading","componentDidUpdate","P_props","beforeUpload","file","isJpgOrPng","isLt2M","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","handleChange","handleImage","originFileObj","status","uploadButton","listType","showUploadList","action","FormPage","setId","setSiteName","setSiteDesc","setSiteText","setSiteImg","setQuoteText","setQuoteLink","defaultSiteImg","setDefaultSiteImg","successMsg","setSuccessMsg","encType","InputLabel","far","confirm","Modal","Slide","setTitle","setImage","setSlide","edittitle","setEditTitle","editimage","seteditImage","setVisible","defaultimage","setDefaultImage","descModal","setdescModal","descModalDetails","fetchSlideData","showDeleteConfirm","onOk","deleteHandler","editableArrary","editable","edit","divider","tablecontainer","maxHeight","ManageSector","setSector","manageSector","setManageSector","setEditSector","addNewDepartmentVisible","setAddNewDepartmentVisible","addNewCategoryVisible","setAddNewCategoryVisible","addNewSubcategoryVisible","setAddNewSubcategoryVisible","addNewModelVisible","setAddNewModelVisible","addNewBrandVisible","setAddNewBrandVisible","editDepartmentVisible","setEditDepartmentVisible","editCategoryVisible","setEditCategoryVisible","editSubcategoryVisible","setEditSubcategoryVisible","editModelVisible","setEditModelVisible","editBrandVisible","setEditBrandVisible","parentId","setParentId","editParentId","setEditParentId","grandparentId","setGrandparentId","editGrandparentId","setEditGrandparentId","setProduct","fetchManageSectorData","paddingLeft","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","usingdep","department","usingsubcategory","showDeleteDepartmentConfirm","editDepartment","dep","item1","usingcat","showDeleteCategoryConfirm","editCategory","item2","showDeleteSubcategoryConfirm","manageSector1","editableArrary1","editSubcategory","usingmod","showDeleteBrandConfirm","editBrand","showDeleteModelConfirm","editModel","FormControl","Select","inputProps","Quote","setDescription","quote","setQuote","editname","setEditName","editdes","setEditDes","setdescModalDetails","submitHandler","fetchQuoteData","rows","Setting","des","setDes","fetchSettingData","Dragger","Upload","MyUpload","accept","fileList","slice","success","InboxOutlined","container","gridTemplateColumns","gridGap","paper1","indigo","paper2","teal","paper3","pink","container1","Financ","newVisible","setNewVisible","setOS","editOS","setEditOS","Date","emission","setEmission","editEmission","setEditEmission","setStatus","editStatus","setEditStatus","client","setClient","editClient","setEditClient","paymentType","setPaymentType","editPaymentType","setEditPaymentType","collectPaymentType","setCollectPaymentType","collectAmount","setCollectAmount","amount","setAmount","editAmount","setEditAmount","received","setReceived","editReceived","setEditReceived","setBalance","editBalance","setEditBalance","lastPayment","setLastPayment","editLastPayment","setEditLastPayment","editOrderDetail","setEditOrderDetail","editWorkDetail","setEditWorkDetail","finance","setFinance","totalAmount","setTotalAmount","totalReceived","setTotalReceived","totalCollect","setTotalCollect","visible1","setVisible1","visibleEdit","setVisibleEdit","from","setFrom","setTo","setPage","rowsPerPage","setRowsPerPage","setOSError","setStatusError","clientError","setClientError","paymentTypeError","setPaymentTypeError","amountError","setAmountError","receivedError","setRecivedError","image1Error","setImage1Error","image2Error","setImage2Error","searchval","setSearchval","count","setCount","image1","setImage1","setDefaultImage1","image2","setImage2","setDefaultImage2","setHistory","collectHistory","setCollectHistory","receipt","setReceipt","fetchFinanceData","handleChangePage","newPage","handleChangeRowsPerPage","handleEditEmission","date","handleEditLastPayment","formatNumber","num","toFixed","replace","pad","d","toString","sortedArray","sort","a","b","created_at","valueOf","Number","Grid","xs","Paper","paddingTop","utils","DateFnsUtils","justify","disableToolbar","format","array","fin","includes","os","KeyboardButtonProps","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","blue","emissiondate","lastPaymentdate","editlink","balance","imgName1","imgName2","history","edit1","edit2","hover","tabIndex","getDate","getMonth","getFullYear","stat","cl","pt","paymentDate","setDetail","portfolios","setPortfolios","editsector","editdetail","setEditdetail","fetchPortfolioData","OurTeam","setRating","teams","setTeams","editrating","setEditrating","fetchTeamData","parseFloat","News","fetchNewsData","setValues","defaultValues","defaultChecked","Message","setMessage","editEmail","setEditEmail","fetchMessageData","ProductpopUp","showProModal","provisible","handleCancel","nameError","priceError","discountError","onChangeSoldBy","checked","onChangeVolume","volumeswt","onChangeWeight","weightswt","volumeValue","weightValue","soldby","measurementswt","barcode","swch","portionName","departmentdata","defaultValue","prefix","ServicepopUp","showSerModal","servisible","FetchService","handleEdit","descModalHandleCancel","FetchProducts","weight","a11yProps","LinkTab","ProductService","setProducts","setServices","createHistory","AppRouter","path","exact","EditorDasboard","EditorSlide","Finance","NotFoundPage","createMuiTheme","main","secondary","red","render","document","getElementById"],"mappings":"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","file":"static/js/main.61031b0a.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\nexport default function PersistentDrawerLeft(props) {\n  const classes = useStyles();\n  \n  return (\n    <div style={{ display: 'flex' }}>\n      <AppBar\n        position=\"fixed\"\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.toggleDrawer(true)}\n            edge=\"start\"\n          >\n            <MenuIcon />\n          </IconButton>\n          {/* <Typography variant=\"h6\" noWrap>\n            Ribeiro Ababamentos\n          </Typography> */}\n          \n          <Avatar src=\"/broken-image.jpg\" className={classes.small} style={{marginLeft:'85%'}}/>\n          <Typography align='right'>&nbsp;&nbsp;{props.user.name}</Typography>\n\n        </Toolbar>\n      </AppBar>\n\n      <main>\n        <div style={{ marginTop: '50px', }}></div>\n      </main>\n    </div>\n  );\n}\n","export const isBrowser = () => typeof window !== \"undefined\"\nexport const getUser = () =>\n  isBrowser() && window.sessionStorage.getItem(\"gatsbyUser\")\n    ? JSON.parse(window.sessionStorage.getItem(\"gatsbyUser\"))\n    : {}\nexport const setUser = user =>\n  window.sessionStorage.setItem(\"gatsbyUser\", JSON.stringify(user))\n\nexport const isLoggedIn = () => {\n  const user = getUser();\n  return !!user.name\n}\nexport const logout = callback => {\n  setUser({})\n  callback()\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { logout } from \"../../../services/auth\";\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport GroupIcon from '@material-ui/icons/Group';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport HelpIcon from '@material-ui/icons/Help';\nimport BrushIcon from '@material-ui/icons/Brush';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\nimport SettingIcon from '@material-ui/icons/Settings';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  gray:{\n    color: 'rgba(0, 0, 0, 0.54)'\n  }\n});\n\nexport default function SwipeableTemporaryDrawer(props) {\n  const classes = useStyles();\n\n  const sideList = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={props.toggleDrawer(false)}\n      onKeyDown={props.toggleDrawer(false)}\n    >\n      <List>\n      <Link to='/'>\n          <ListItem button >\n            <ListItemIcon><HomeIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Back To Site\"} />\n          </ListItem>\n        </Link>\n        <Divider />\n        <Link to='/editor-message'>\n          <ListItem button >\n            <ListItemIcon><InboxIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\"Inbox\"} />\n          </ListItem>\n        </Link>\n        <Link to='/editor-dasboard'>\n          <ListItem button >\n            <ListItemIcon><DashboardIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" BasicInfo\"} />\n          </ListItem>\n        </Link>\n        <Link to='/editor-slide'>\n          <ListItem button >\n            <ListItemIcon><InsertPhotoIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Home Image\"} />\n          </ListItem>\n        </Link>\n        <Link to='/editor-managesector'>\n          <ListItem button >\n            <ListItemIcon><LayersIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Sector Management\"} />\n          </ListItem>\n        </Link>\n        <Link to='/editor-portfolio'>\n          <ListItem button >\n            <ListItemIcon><AssignmentIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Portfolio\"} />\n          </ListItem>\n        </Link>\n        <Link to='/editor-ourteam'>\n          <ListItem button >\n            <ListItemIcon><GroupIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Team\"} />\n          </ListItem>\n        </Link>\n        <Link to='/editor-news'>\n          <ListItem button >\n            <ListItemIcon><AnnouncementIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" News\"} />\n          </ListItem>\n        </Link>\n        <Link to='/editor-about'>\n          <ListItem button >\n            <ListItemIcon><HelpIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" About\"} />\n          </ListItem>\n        </Link>\n        <Link to='/editor-quote'>\n          <ListItem button >\n            <ListItemIcon><BrushIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Quotes\"} />\n          </ListItem>\n        </Link>\n        <Link to='/editor-sectors'>\n          <ListItem button >\n            <ListItemIcon><SettingsEthernetIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Sectors\"} />\n          </ListItem>\n        </Link>        \n        <Link to='/editor-product-service'>\n          <ListItem button >\n            <ListItemIcon><SettingsEthernetIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Product/Service\"} />\n          </ListItem>\n        </Link>\n        <Link to='/editor-setting'>\n          <ListItem button >\n            <ListItemIcon><SettingIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Other Settings\"} />\n          </ListItem>\n        </Link>\n        <Divider />\n        <Link to='/editor-finance'>\n          <ListItem button >\n            <ListItemIcon><AttachMoneyIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Finance\"} />\n          </ListItem>\n        </Link>\n        <Divider />\n        <Link to='/editor-login'>\n          <ListItem button onClick={() => {\n            logout(() => {\n              \n            });\n          }}>\n            <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n            <ListItemText className={classes.gray} primary={\" Logout\"} />\n          </ListItem>\n        </Link>\n      </List>\n      \n\n    </div>\n  );\n\n\n  return (\n    <div>\n      <SwipeableDrawer\n        open={props.open}\n        onClose={props.toggleDrawer(false)}\n        onOpen={props.toggleDrawer(true)}\n      >\n        {sideList()}\n      </SwipeableDrawer>\n\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from '../Components/Dashboard/Editor/EditorHeader';\nimport SideBar from '../Components/Dashboard/Editor/SideBar';\nimport { isLoggedIn, getUser } from '../services/auth';\nimport { Redirect } from 'react-router-dom';\nconst EditorRoutes = ({ component: Component, ...rest }) => {\n    const [open, setOpen] = useState(false);\n    const toggleDrawer = (open) => event => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setOpen(open);\n    };\n    if (!isLoggedIn()) {\n         return <Redirect to='editor-login' />\n    }\n    return (\n\n        <Route {...rest} component={(props) => (\n            <div id='editor-dashboard'>\n                <SideBar open={open} toggleDrawer={toggleDrawer} />\n                <Header open={open} user={getUser()} toggleDrawer={toggleDrawer} />\n                <main style={{ padding: '30px', }}>\n                    <Component {...props} />\n                </main>\n            </div>\n        )} />\n    )\n}\nexport default EditorRoutes;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\n\nconst PublicRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} component={(props) => (\n\n        <div >\n            \n            <Component {...props} />\n        </div>\n    )} />\n);\nexport default PublicRoute;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport {\n    MDBNavbar,\n    MDBNavbarBrand,\n    MDBNavbarNav,\n    MDBNavItem,\n    MDBNavbarToggler,\n    MDBCollapse,\n    MDBInput,\n    MDBContainer,\n    MDBFormInline,\n\n} from \"mdbreact\";\nexport default class Heaher extends Component {\n    state = {\n        collapsed: false,\n        site: ''\n    };\n    componentDidMount() {\n        let _this = this;\n        fetch('/basic')\n            .then(res => res.json())\n            .then((res) => {\n                if (!!res.info) {\n                    const { site = '', } = res.info;\n                    _this.setState({ site });\n                }\n            })\n            .catch(error => {\n                console.log('Please check your connection..!');\n            })\n    }\n    handleTogglerClick = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    };\n    render() {\n        const overlay = (\n            <div\n                id=\"sidenav-overlay\"\n                style={{ backgroundColor: \"transparent\" }}\n                onClick={this.handleTogglerClick}\n            />\n        );\n        return (\n            <Router>\n                <div id=\"colorlib-page\">\n                    <div id=\"container-wrap\">\n                        <MDBNavbar\n                            color=\"primary-color\"\n                            dark\n                            expand=\"md\"\n                            fixed=\"top\"\n                            scrolling\n                            transparent\n                        >\n                            <MDBContainer>\n                                <MDBNavbarBrand>\n                                    <strong className=\"white-text\">{this.state.site}</strong>\n                                </MDBNavbarBrand>\n                                <MDBNavbarToggler onClick={this.handleTogglerClick} />\n                                <MDBCollapse isOpen={this.state.collapsed} navbar>\n                                    <MDBNavbarNav left>\n                                        <MDBNavItem active>\n                                            <AnchorLink className=\"nav-link Ripple-parent\" href='#apppage'>Home</AnchorLink >\n                                        </MDBNavItem>\n                                        <MDBNavItem>\n                                            <AnchorLink className=\"nav-link Ripple-parent\" href='#about'>About us</AnchorLink >\n                                        </MDBNavItem>\n                                        <MDBNavItem>\n                                            <AnchorLink className=\"nav-link Ripple-parent\" href='#portfolio'>Portfolio</AnchorLink >\n                                        </MDBNavItem>\n                                        <MDBNavItem>\n                                            <AnchorLink className=\"nav-link Ripple-parent\" href='#sectors'>Sectors</AnchorLink >\n                                        </MDBNavItem>\n                                        <MDBNavItem>\n                                            <AnchorLink className=\"nav-link Ripple-parent\" href='#quote'>Free Quote</AnchorLink >\n                                        </MDBNavItem>\n                                        <MDBNavItem>\n                                            <AnchorLink className=\"nav-link Ripple-parent\" href='#contact'>Contact Us</AnchorLink >\n                                        </MDBNavItem>\n                                        <MDBNavItem>\n                                            <a className=\"nav-link Ripple-parent\" href='/products'>Products</a >\n                                        </MDBNavItem>\n                                        <MDBNavItem>\n                                            <a className=\"nav-link Ripple-parent\" href='/services'>Services</a >\n                                        </MDBNavItem>\n                                    </MDBNavbarNav>\n                                    <MDBNavbarNav right>\n                                        <MDBNavItem>\n                                            <MDBFormInline >\n                                                <div className=\"md-form my-0\">\n                                                    <MDBInput hint=\"Bucsa\" type=\"text\" containerClass=\"mt-0 mb-3\" />\n                                                </div>\n                                            </MDBFormInline>\n                                        </MDBNavItem>\n                                    </MDBNavbarNav>\n                                </MDBCollapse>\n                            </MDBContainer>\n                        </MDBNavbar>\n                        {this.state.collapsed && overlay}\n                    </div>\n                </div>\n            </Router>\n        )\n    }\n\n};","import React from 'react';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport Rating from '@material-ui/lab/Rating';\n\nconst responsive = {\n    superLargeDesktop: {\n        // the naming can be any, depends on you.\n        breakpoint: { max: 4000, min: 3000 },\n        items: 5,\n    },\n    desktop: {\n        breakpoint: { max: 3000, min: 1024 },\n        items: 3,\n    },\n    tablet: {\n        breakpoint: { max: 1024, min: 464 },\n        items: 2,\n    },\n    mobile: {\n        breakpoint: { max: 464, min: 0 },\n        items: 1,\n    },\n};\n\nexport default class Gallery extends React.Component {\n    render() {\n        return (\n            <>\n                {\n                    this.props.team.length &&\n                    <Carousel\n                        additionalTransfrom={0}\n                        arrows\n                        responsive={responsive}\n                        autoPlay={true}\n                        autoPlaySpeed={3000}\n                        centerMode={false}\n                        className=\"\"\n                        containerClass=\"container-with-dots\"\n                        dotListClass=\"\"\n                        draggable\n                        focusOnSelect={true}\n                        infinite\n                        itemClass=\"\"\n                        keyBoardControl\n                        minimumTouchDrag={80}\n                        renderButtonGroupOutside={true}\n                        renderDotsOutside={false}\n                    >\n                        {\n                            this.props.team.map((member, index) => (\n                                <div key={index} className='card' style={{width: '95%', margin:'20px auto',minHeight:'500px'}}>\n                                    <img\n                                        style={{ maxWidth: '100%','borderRadius': '5px 5px 0 0' }}\n                                        alt={member._id}\n                                        src={`/${member.image}`}\n                                    />\n                                    <div className=\"card-body\">\n                                        <div className=\"card-title\">\n                                            {member.name}\n                                        </div >\n                                        <div className=\"card-text\">\n                                            <div>\n                                                <Rating name='rating' value={member.rating} precision={0.5} readOnly={true} />\n                                            </div>\n                                            {member.description}\n                                        </div >\n                                    </div>\n                                </div>\n                            ))\n                        }\n                    </Carousel>\n                }\n\n            </>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { MDBContainer, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink, MDBRow, MDBCol } from \"mdbreact\";\nimport Team from './Team';\nclass TabsDefault extends Component {\n\n    state = {\n        activeItem: \"1\",\n        we: undefined,\n        mission: undefined,\n        values: undefined,\n        team: [],\n        data: []\n    };\n\n    componentDidMount() {\n        let _this = this;\n        fetch('/mix', {\n            method: 'GET',\n        }).then(res => res.json())\n            .then((res) => {\n                if (!!res.info) {\n                    let we = res.info.find(item => item.title === 'How We Are');\n                    let mission = res.info.find(item => item.title === 'Our Mission');\n                    let values = res.info.find(item => item.title === 'Our Values');\n                    _this.setState({ we, mission, values });\n                }\n            })\n        fetch(`/team`)\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ team: res.result });\n            })\n            .catch(error => {\n                console.log('Please check your connection..!');\n            })\n    }\n    toggle = tab => e => {\n        if (this.state.activeItem !== tab) {\n            this.setState({\n                activeItem: tab\n            });\n        }\n    };\n    render() {\n        return (\n            <Router>\n                <MDBContainer id='about'>\n                    <MDBRow><h3 style={{ margin: '50px auto 10px' }}>About Us</h3></MDBRow>\n                    <MDBRow style={{ minHeight: '400px', }}>\n                        <MDBCol\n                            md=\"3\"\n                            className=\"text-md-left mt-xl-5 mb-5\"\n                        >\n                            <MDBNav className=\"flex-column\" style={{ maxWidth: '185px' }}>\n                                <MDBNavItem>\n                                    <MDBNavLink disabled to=\"#!\" style={{ backgroundColor: '#00982d', color: 'white', textAlign: 'center' }}>About Us</MDBNavLink>\n                                </MDBNavItem>\n                                <MDBNavItem className={(this.state.activeItem === \"1\") ? 'custom-active-link' : ''} >\n                                    <MDBNavLink to=\"#!\" onClick={this.toggle(\"1\")} role=\"tab\" className=\"flex-column-tab\" >\n                                        Who We are</MDBNavLink>\n                                </MDBNavItem>\n                                <MDBNavItem className={this.state.activeItem === \"2\" ? 'custom-active-link' : ''}>\n                                    <MDBNavLink to=\"#!\" onClick={this.toggle(\"2\")} role=\"tab\" className=\"flex-column-tab\" >\n                                        Our Mission</MDBNavLink>\n                                </MDBNavItem>\n                                <MDBNavItem className={this.state.activeItem === \"3\" ? 'custom-active-link' : ''}>\n                                    <MDBNavLink to=\"#!\" onClick={this.toggle(\"3\")} role=\"tab\" className=\"flex-column-tab\" >\n                                        Our Values</MDBNavLink>\n                                </MDBNavItem>\n                                <MDBNavItem className={this.state.activeItem === \"4\" ? 'custom-active-link' : ''}>\n                                    <MDBNavLink to=\"#!\" onClick={this.toggle(\"4\")} role=\"tab\" className=\"flex-column-tab\" >\n                                        Our Team</MDBNavLink>\n                                </MDBNavItem>\n                            </MDBNav>\n                        </MDBCol>\n                        <MDBCol md=\"9\" className=\" mt-xl-5 mb-5\" >\n\n\n                            <MDBTabContent style={{ minHeight: '400px' }} activeItem={this.state.activeItem} >\n\n                                <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n                                    <MDBRow>\n                                        <MDBCol md={4}>\n                                            {(!!this.state.we) ? <img alt='' src={`/${this.state.we.image}`} style={{ width: '100%' }} /> : ''}\n\n                                        </MDBCol>\n                                        <MDBCol md={8}>\n                                            <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                                                {(!!this.state.we) ? this.state.we.description : ''}\n                                            </p>\n                                        </MDBCol>\n                                    </MDBRow>\n                                </MDBTabPane>\n\n                                <MDBTabPane tabId=\"2\" role=\"tabpanel\">\n                                    <MDBRow>\n                                    <MDBCol md={4}>\n                                            {(!!this.state.mission) ? <img alt='' src={`/${this.state.mission.image}`} style={{ width: '100%' }} /> : ''}\n\n                                        </MDBCol>\n                                        <MDBCol md={8}>\n                                            <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                                                {(!!this.state.mission) ? this.state.mission.description : ''}\n                                            </p>\n                                        </MDBCol>\n                                    </MDBRow>\n                                </MDBTabPane>\n                                <MDBTabPane tabId=\"3\" role=\"tabpanel\">\n                                    <MDBRow>\n                                    <MDBCol md={4}>\n                                            {(!!this.state.values) ? <img alt='' src={`/${this.state.values.image}`} style={{ width: '100%' }} /> : ''}\n\n                                        </MDBCol>\n                                        <MDBCol md={8}>\n                                            <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                                                {(!!this.state.values) ? this.state.values.description : ''}\n                                            </p>\n                                        </MDBCol>\n                                    </MDBRow>\n                                </MDBTabPane>\n                                <MDBTabPane tabId=\"4\" role=\"tabpanel\" >\n                                    <Team team={this.state.team} />\n\n                                </MDBTabPane>\n                            </MDBTabContent>\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n            </Router>\n        );\n    }\n}\nexport default TabsDefault;","/* eslint-disable no-unused-vars */\nimport React,{ useEffect, useState } from 'react'\nimport { MDBContainer, MDBRow, MDBCol, MDBIcon, MDBBtn, MDBCard, MDBInput } from \"mdbreact\";\nimport './page.css';\nconst color = {\n    color:'#979798'\n};\nexport default (props) => {\n    const [email, setEmail] = useState('');\n    const [email1, setEmail1] = useState('');\n    const [phone, setPhone] = useState('');\n    const [officeHours, setOfficeHours] = useState('');\n    const [address, setAddress] = useState('');\n    const [address1, setAddress1] = useState('');\n\n    const [customeremail, setCustomerEmail] = useState('');\n    const [customername, setCustomerName] = useState('');\n    const [customerdescription, setCustomerDescription] =useState('');\n    const [customerrating, setCustomerRating] = useState('');\n\n    const [contactText, setContactText] = useState('');\n    const [contactDesc, setContactDesc] = useState('');\n    const [setting, setSetting] = useState('');\n    const [nameerror, setNameerror] = useState('');\n    const [emailerror, setEmailerror] = useState('');\n    const [descriptionerror, setDescriptionerror] = useState('');\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let data = new FormData();\n        data.append('email', customeremail);\n        data.append('description', customerdescription);\n        data.append('name', customername);\n        data.append('rating',customerrating);\n        if(!customeremail){\n            setEmailerror(\"Please enter your email!\");\n        }\n        if(!customername){\n            setNameerror(\"Please enter your name!\");\n        }\n        if(!customerdescription){\n            setDescriptionerror(\"Please enter some description!\");\n        }\n        if(customeremail !== ''&& customerdescription !== '' && customername !== ''){\n            fetch('/message', {\n            method: 'POST',\n            body: data\n        }).then(res => res.json())\n            .then((res) => {               \n                alert(\"Message sent successfully!\");\n                setCustomerEmail('');\n                setCustomerName('');\n                setCustomerDescription('');\n            })\n        }\n        \n    }\n    useEffect(() => {\n        fetch('/basic')\n        .then(res => res.json())\n            .then((res) => {\n                if (!!res.info) {\n                    const {\n                        email = '',\n                        email1 = '',\n                        phone = '',\n                        officeHours = '',\n                        address = '',\n                        address1 = '',\n                        contactText = '',\n                        contactDesc = '',\n                    } = res.info;\n                    setEmail(email);\n                    setEmail1(email1);\n                    setPhone(phone);\n                    setOfficeHours(officeHours);\n                    setAddress(address);\n                    setAddress1(address1);\n                    setContactText(contactText);\n                    setContactDesc(contactDesc);\n                }\n            })\n        fetch('/setting')\n        .then(res => res.json())\n            .then((res) => {\n                let socialarray =[];\n                if(!!res.result){\n                    let mixdata = res.result;\n                    for (var i = mixdata.length - 1; i >= 0; i--) {\n                        if(mixdata[i].title === 'sociallink') socialarray.push(mixdata[i]);\n                    }\n                }\n                // eslint-disable-next-line jsx-a11y/alt-text\n                let aa= socialarray.map((data)=><li className=\"list-inline-item\"><a href={data.description}><img src={data.image}/></a></li>);\n                setSetting(aa);\n            })\n    }, []);\n    return (\n    <div id='contact' className='contact-us '>\n        <div className='block-title text-center'>\n            <MDBContainer>\n                <h2>Contact <span style={{fontWeight:'bold'}}>Us</span></h2>\n                <MDBRow >   <p id=\"contact-us-p\">{contactText}</p></MDBRow>\n            </MDBContainer>\n        </div>\n        <div >\n            <MDBContainer>\n                <MDBRow >\n                    <MDBCol md=\"4\" className=\"mt-xl-5 mb-5\" >\n                        <MDBCard>\n                          <span> <MDBIcon icon=\"map-marker-alt\" size=\"2x\" style={{width: '62px',textAlign: 'center'}} className=\"contact-us-icons\" />\n                            <div className='contact-steps' >\n                                <h6 className=\"contact-us-h6\">Address</h6>\n                                <p style={color}>{address}<br/>{address1}</p>\n                                \n                            </div>\n                          </span>\n                        </MDBCard>\n                    </MDBCol>\n                    <MDBCol md=\"4\" className=\" mt-xl-5 mb-5\">\n                        <MDBCard>\n                           <span> \n                            <MDBIcon icon=\"envelope\" size=\"2x\" className=\"contact-us-icons\"  />\n                            <div className='contact-steps'>\n                                <h6 className=\"contact-us-h6\">Email</h6>\n                                <p style={color}>{email}<br/>{email1}</p>\n                            </div>\n                           </span>\n                        </MDBCard>\n                    </MDBCol>\n                    <MDBCol md=\"4\" className=\"mt-xl-5 mb-5\">\n                        <MDBCard>\n                          <span>\n                            <MDBIcon icon=\"phone\" size=\"2x\" className=\"contact-us-icons\"  />\n                            <div className='contact-steps'>\n                                <h6 className=\"contact-us-h6\">Phone</h6>\n                                <p style={color}>{phone}<br/>{officeHours}</p>\n                            </div>\n                          </span>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow >\n                    <MDBCol md=\"4\" className=\"text-md-left mt-xl-5 mb-5\">\n                        <h3>Get in Touch</h3>\n                        <hr/>\n                        <p style={{ color:'#979798' , paddingRight:'10px' ,}} >\n                            {contactDesc}\n                        </p>\n                        <ul className=\"list-inline text-center list-unstyled\" style={{float:'left',}}>\n                            {setting}\n                            \n                        </ul>\n                    </MDBCol>\n                    <MDBCol md=\"8\" className=\"text-md-left mt-xl-5 mb-5\">\n                        <form onSubmit={handleSubmit}>\n                            <MDBRow style={{marginTop:'-2%'}}>\n                                <MDBCol md=\"6\">\n                                    <div className=\"md-form mb-0\">\n                                        <MDBInput type=\"text\" id=\"contact-name\" label=\"Your name\" \n                                         value={customername}\n                                            onChange={(e) => {\n                                                setCustomerName(e.target.value);\n                                                setNameerror('');\n                                             }}\n                                        />\n                                        <p style={{color:'red'}}>{nameerror}</p>\n                                    </div>\n                                </MDBCol>\n                                <MDBCol md=\"6\">\n                                    <div className=\"md-form mb-0\">\n                                        <MDBInput\n                                            type=\"text\"\n                                            id=\"contact-email\"\n                                            label=\"Your email\"\n                                            value={customeremail}\n                                            onChange={(e) => {\n                                                setCustomerEmail(e.target.value);\n                                                setEmailerror('');\n                                             }}\n                                        />\n                                        <p style={{color:'red'}}>{emailerror}</p>\n                                    </div>\n                                </MDBCol>\n                            </MDBRow>\n                            <MDBRow>\n                                <MDBCol md=\"12\">\n                                    <div className=\"md-form mb-0\">\n                                        <MDBInput\n                                            type=\"textarea\"\n                                            id=\"contact-message\"\n                                            label=\"Your message\"\n                                            value={customerdescription}\n                                            onChange={(e) => {\n                                                setCustomerDescription(e.target.value);\n                                                setDescriptionerror('');\n                                             }}\n                                        />\n                                        <p style={{color:'red'}}>{descriptionerror}</p>\n                                    </div>\n                                </MDBCol>\n                            </MDBRow>\n                            <MDBRow>\n                                <MDBCol md=\"12\">\n                                    <MDBBtn id=\"snd-msg\" color=\"success\" type=\"submit\">Send Message</MDBBtn>\n                                </MDBCol>\n                            </MDBRow>\n                            \n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        </div>\n\n    </div>);\n}","import React from \"react\";\nexport default ({ item }) => (\n    <div className='card'>\n        <img\n            style={{ maxWidth: '100%' }}\n            alt={item._id}\n            src={`/${item.image}`}\n        />\n        <div className=\"card-body\">\n            <div className=\"card-title\">\n                {item.title}\n            </div >\n            <div className=\"card-text\">\n                {item.description}\n            </div >\n        </div>\n    </div>\n)","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport NewsItem from './NewsItem';\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\n\nimport './page.css';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function Sectors() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [news, setNews] = React.useState([]);\n  const [optionData, setOptionData] = React.useState('');\n  const [category, setCategory] = React.useState([]);\n  const [mix, setMix] = React.useState([]);\n  React.useEffect(() => {\n    fetch('/managesector', {\n          method: 'GET',\n        }).then(res => res.json())\n          .then((res) => {\n            if (!!res.result) {\n            let data = res.result;      \n            let categorydata = [];\n            for (var i = 0; i < data.length; i++) {\n              if(data[i].sector === 'Category') categorydata.push(data[i]);\n            }\n            setCategory(categorydata);\n            let optionItems_category = categorydata.map((data) =>\n                    <Tab label={data.title}/>\n                );\n            setOptionData(optionItems_category);\n        }\n    });\n    fetch('/mix', {\n      method: 'GET',\n    }).then(res => res.json())\n      .then((res) => {\n        if (!!res.info) {\n          \n          let aa= res.info\n          setMix(aa);\n\n        }\n      })\n    fetch(`/news`)\n      .then(res => res.json())\n      .then(res => {\n        setNews(res.result)\n      })\n      .catch(() => {\n        console.log('Please check your connection..!');\n      })\n  }, []);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div id='sectors'>\n      <div className={classes.root} >\n        <h3 style={{ textAlign: 'center' }}>Sectors</h3>\n        <div >\n          <AppBar position=\"static\" style={{ zIndex: '0', color: \"#0dc835\", width: '32%', margin: 'auto', background: 'transparent', marginTop: '3%', boxShadow: 'none' }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              aria-label=\"scrollable auto tabs example\"\n              id=\"textcolor\"\n            >\n              {optionData}\n            </Tabs>\n          </AppBar>\n        </div>\n        <TabPanel value={value} index={0}>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md={4}>\n                {(category.length>0 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[0].title}`).map((item)=>(\n                      <img alt = '111' src={`/${item.image}`} style={{width: '100%'}} />\n                    ))\n                  \n                  :''}\n              </MDBCol>\n              <MDBCol md={8}>\n                <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                {(category.length>0 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[0].title}`).map((item)=>(\n                      item.description\n                    ))\n                  \n                  :''}\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow><h4>{(category.length > 0) ? `${category[0].title}` :''} News</h4></MDBRow>\n          </MDBContainer>\n\n          <div className='team-main'>\n            <MDBContainer>\n              <MDBRow>\n                {(category.length>0 && mix.length > 0)?\n                  news.filter((item) => item.sector === `${category[0].title}`).map((item) => (\n                    <MDBCol key={item._id} md={4} style={{ minHeight: '270px', }}>\n                      <NewsItem item={item} />\n                    </MDBCol>\n                  ))\n                :''}\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md={4}>\n                {(category.length>1 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[1].title}`).map((item)=>(\n                      <img alt = '111' src={`/${item.image}`} style={{width: '100%'}} />\n                    ))\n                  \n                  :''}\n              </MDBCol>\n              <MDBCol md={8}>\n                <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                {(category.length>1 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[1].title}`).map((item)=>(\n                      item.description\n                    ))\n                  \n                  :''}\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow><h4>{(category.length > 1) ? `${category[1].title}` :''} News</h4></MDBRow>\n          </MDBContainer>\n\n          <div className='team-main'>\n            <MDBContainer>\n              <MDBRow>\n                {(category.length>1 && mix.length > 0)?\n                  news.filter((item) => item.sector === `${category[1].title}`).map((item) => (\n                    <MDBCol key={item._id} md={4} style={{ minHeight: '270px', }}>\n                      <NewsItem item={item} />\n                    </MDBCol>\n                  ))\n                :''}\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n                    <MDBContainer>\n            <MDBRow>\n              <MDBCol md={4}>\n                {(category.length>2 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[2].title}`).map((item)=>(\n                      <img alt = '111' src={`/${item.image}`} style={{width: '100%'}} />\n                    ))\n                  \n                  :''}\n              </MDBCol>\n              <MDBCol md={8}>\n                <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                {(category.length>2 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[2].title}`).map((item)=>(\n                      item.description\n                    ))\n                  \n                  :''}\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow><h4>{(category.length > 2) ? `${category[2].title}` :''} News</h4></MDBRow>\n          </MDBContainer>\n\n          <div className='team-main'>\n            <MDBContainer>\n              <MDBRow>\n                {(category.length>2 && mix.length > 0)?\n                  news.filter((item) => item.sector === `${category[2].title}`).map((item) => (\n                    <MDBCol key={item._id} md={4} style={{ minHeight: '270px', }}>\n                      <NewsItem item={item} />\n                    </MDBCol>\n                  ))\n                :''}\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md={4}>\n                {(category.length>3 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[3].title}`).map((item)=>(\n                      <img alt = '111' src={`/${item.image}`} style={{width: '100%'}} />\n                    ))\n                  \n                  :''}\n              </MDBCol>\n              <MDBCol md={8}>\n                <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                {(category.length>3 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[3].title}`).map((item)=>(\n                      item.description\n                    ))\n                  \n                  :''}\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow><h4>{(category.length > 3) ? `${category[3].title}` :''} News</h4></MDBRow>\n          </MDBContainer>\n\n          <div className='team-main'>\n            <MDBContainer>\n              <MDBRow>\n                {(category.length>3 && mix.length > 0)?\n                  news.filter((item) => item.sector === `${category[3].title}`).map((item) => (\n                    <MDBCol key={item._id} md={4} style={{ minHeight: '270px', }}>\n                      <NewsItem item={item} />\n                    </MDBCol>\n                  ))\n                :''}\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md={4}>\n                {(category.length>4 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[4].title}`).map((item)=>(\n                      <img alt = '111' src={`/${item.image}`} style={{width: '100%'}} />\n                    ))\n                  \n                  :''}\n              </MDBCol>\n              <MDBCol md={8}>\n                <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                {(category.length>4 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[4].title}`).map((item)=>(\n                      item.description\n                    ))\n                  \n                  :''}\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow><h4>{(category.length > 4) ? `${category[4].title}` :''} News</h4></MDBRow>\n          </MDBContainer>\n\n          <div className='team-main'>\n            <MDBContainer>\n              <MDBRow>\n                {(category.length>4 && mix.length > 0)?\n                  news.filter((item) => item.sector === `${category[4].title}`).map((item) => (\n                    <MDBCol key={item._id} md={4} style={{ minHeight: '270px', }}>\n                      <NewsItem item={item} />\n                    </MDBCol>\n                  ))\n                :''}\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md={4}>\n                {(category.length>5 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[5].title}`).map((item)=>(\n                      <img alt = '111' src={`/${item.image}`} style={{width: '100%'}} />\n                    ))\n                  \n                  :''}\n              </MDBCol>\n              <MDBCol md={8}>\n                <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                {(category.length>5 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[5].title}`).map((item)=>(\n                      item.description\n                    ))\n                  \n                  :''}\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow><h4>{(category.length > 5) ? `${category[5].title}` :''} News</h4></MDBRow>\n          </MDBContainer>\n\n          <div className='team-main'>\n            <MDBContainer>\n              <MDBRow>\n                {(category.length>5 && mix.length > 0)?\n                  news.filter((item) => item.sector === `${category[5].title}`).map((item) => (\n                    <MDBCol key={item._id} md={4} style={{ minHeight: '270px', }}>\n                      <NewsItem item={item} />\n                    </MDBCol>\n                  ))\n                :''}\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={6}>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md={4}>\n                {(category.length>6 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[6].title}`).map((item)=>(\n                      <img alt = '111' src={`/${item.image}`} style={{width: '100%'}} />\n                    ))\n                  \n                  :''}\n              </MDBCol>\n              <MDBCol md={8}>\n                <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                {(category.length>6 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[6].title}`).map((item)=>(\n                      item.description\n                    ))\n                  \n                  :''}\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow><h4>{(category.length > 6) ? `${category[6].title}` :''} News</h4></MDBRow>\n          </MDBContainer>\n\n          <div className='team-main'>\n            <MDBContainer>\n              <MDBRow>\n                {(category.length>6 && mix.length > 0)?\n                  news.filter((item) => item.sector === `${category[6].title}`).map((item) => (\n                    <MDBCol key={item._id} md={4} style={{ minHeight: '270px', }}>\n                      <NewsItem item={item} />\n                    </MDBCol>\n                  ))\n                :''}\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={7}>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md={4}>\n                {(category.length>7 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[7].title}`).map((item)=>(\n                      <img alt = '111' src={`/${item.image}`} style={{width: '100%'}} />\n                    ))\n                  \n                  :''}\n              </MDBCol>\n              <MDBCol md={8}>\n                <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                {(category.length>7 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[7].title}`).map((item)=>(\n                      item.description\n                    ))\n                  \n                  :''}\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow><h4>{(category.length > 7) ? `${category[7].title}` :''} News</h4></MDBRow>\n          </MDBContainer>\n\n          <div className='team-main'>\n            <MDBContainer>\n              <MDBRow>\n                {(category.length>7 && mix.length > 0)?\n                  news.filter((item) => item.sector === `${category[7].title}`).map((item) => (\n                    <MDBCol key={item._id} md={4} style={{ minHeight: '270px', }}>\n                      <NewsItem item={item} />\n                    </MDBCol>\n                  ))\n                :''}\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={8}>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md={4}>\n                {(category.length>8 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[8].title}`).map((item)=>(\n                      <img alt = '111' src={`/${item.image}`} style={{width: '100%'}} />\n                    ))\n                  \n                  :''}\n              </MDBCol>\n              <MDBCol md={8}>\n                <p className=\"mt-2\" style={{ textAlign: 'left' }}>\n                {(category.length>8 && mix.length > 0)?\n                    mix.filter((item)=>item.title === `${category[8].title}`).map((item)=>(\n                      item.description\n                    ))\n                  \n                  :''}\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow><h4>{(category.length > 8) ? `${category[8].title}` :''} News</h4></MDBRow>\n          </MDBContainer>\n\n          <div className='team-main'>\n            <MDBContainer>\n              <MDBRow>\n                {(category.length>8 && mix.length > 0)?\n                  news.filter((item) => item.sector === `${category[8].title}`).map((item) => (\n                    <MDBCol key={item._id} md={4} style={{ minHeight: '270px', }}>\n                      <NewsItem item={item} />\n                    </MDBCol>\n                  ))\n                :''}\n              </MDBRow>\n            </MDBContainer>\n          </div>\n        </TabPanel>\n      </div>\n    </div>\n  );\n}","import React from \"react\";\nimport { MDBContainer, MDBModal, MDBModalBody, MDBModalHeader } from 'mdbreact';\nexport default ({ item }) => {\n    const [modal, toggle] = React.useState(false);\n    return (\n        <div>\n            <MDBContainer style={{ zIndex: '9999'}}>\n                <img\n                    style={{ maxWidth: '100%', height: '200px' }}\n                    onClick={() => { toggle(!modal) }}\n                    alt={item._id}\n                    src={`/${item.image}`}\n                />\n                <MDBModal isOpen={modal} toggle={() => { toggle(!modal) }} size=\"lg\">\n                    <MDBModalHeader toggle={() => { toggle(!modal) }}>Sector {item.sector}</MDBModalHeader>\n                    <MDBModalBody >\n                        <div >\n                            <img\n                                style={{ maxWidth: '100%' }}\n                                alt={item._id}\n                                src={`/${item.image}`}\n                            />\n                            <div >\n                                {item.detail}\n                            </div >\n                        </div>\n                    </MDBModalBody>\n                </MDBModal>\n            </MDBContainer>\n        </div>\n    )\n}","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Item from './PortfolioItems';\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\n\nimport './page.css';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function Portfolio() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const [portfolio, setPortfolio] = React.useState([]);\n    const [optionData, setOptionData] = React.useState('');\n    const [category, setCategory] = React.useState([]);\n    React.useEffect(() => {\n        fetch(`/portfolio`)\n            .then(res => res.json())\n            .then(res => {\n                setPortfolio(res.result)\n            })\n            .catch(error => {\n                console.log('Please check your connection..!');\n            })\n        fetch('/managesector', {\n          method: 'GET',\n        }).then(res => res.json())\n          .then((res) => {\n            if (!!res.result) {\n            let data = res.result;      \n            let categorydata = [];\n            for (var i = 0; i < data.length ; i++) {\n              if(data[i].sector === 'Category') categorydata.push(data[i]);\n            }\n            setCategory(categorydata);\n            let optionItems_category = categorydata.map((data) =>\n                    <Tab label={data.title} id={data._id} />\n                );\n            setOptionData(optionItems_category);\n        }\n      });\n    }, []);\n    \n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <MDBContainer id='portfolio'>\n            <div className={classes.root} style={{ textAlign: 'center', margin: '0' }}>\n                <h3>Portfolio</h3>\n                <div>\n\n                    <AppBar position=\"static\" style={{ color: \"#0dc835\", width: '60%', margin: 'auto', background: 'transparent', marginTop: '3%', boxShadow: 'none', zIndex:'0' }}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                            aria-label=\"scrollable auto tabs example\"\n                            id=\"textcolor\"\n                        >\n                            <Tab label=\"All\" {...a11yProps(0)} />\n                            {optionData}\n                        </Tabs>\n                    </AppBar>\n                </div>\n\n                <TabPanel value={value} index={0}>\n                    <MDBContainer>\n                        <MDBRow>\n                            {\n                                portfolio.map((item) => (\n                                    <MDBCol  key={item._id} md={4} style={{ minHeight: '240px',}}>\n                                        <Item item={item} />\n                                    </MDBCol>\n                                ))\n                            }\n                        </MDBRow>\n                    </MDBContainer>\n\n\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <MDBRow>\n                        {(category.length > 0)?\n                            portfolio.filter((item) => item.sector === `${category[0].title}`).map((item) => (\n                                <MDBCol  key={item._id} md={4} style={{ minHeight: '240px',}}>\n                                    <Item item={item} />\n                                </MDBCol>\n                            ))\n                        :''}\n                    </MDBRow>\n                </TabPanel>\n                <TabPanel value={value} index={2}>\n                    <MDBRow>\n                        {(category.length > 1)?\n                            portfolio.filter((item) => item.sector === `${category[1].title}`).map((item) => (\n                                <MDBCol  key={item._id} md={4} style={{ minHeight: '240px',}}>\n                                    <Item item={item} />\n                                </MDBCol>\n                            ))\n                        :''}\n                    </MDBRow>\n                </TabPanel>\n                <TabPanel value={value} index={3}>\n                    <MDBRow>\n                        {(category.length > 2)?\n                            portfolio.filter((item) => item.sector === `${category[2].title}`).map((item) => (\n                                <MDBCol  key={item._id} md={4} style={{ minHeight: '240px',}}>\n                                    <Item item={item} />\n                                </MDBCol>\n                            ))\n                        :''}\n                    </MDBRow>\n                </TabPanel>\n                <TabPanel value={value} index={4}>\n                    <MDBRow>\n                        {(category.length > 3)?\n                            portfolio.filter((item) => item.sector === `${category[3].title}`).map((item) => (\n                                <MDBCol  key={item._id} md={4} style={{ minHeight: '240px',}}>\n                                    <Item item={item} />\n                                </MDBCol>\n                            ))\n                        :''}\n                    </MDBRow>\n                </TabPanel>\n                <TabPanel value={value} index={5}>\n                    <MDBRow>\n                        {(category.length > 4)?\n                            portfolio.filter((item) => item.sector === `${category[4].title}`).map((item) => (\n                                <MDBCol  key={item._id} md={4} style={{ minHeight: '240px',}}>\n                                    <Item item={item} />\n                                </MDBCol>\n                            ))\n                        :''}\n                    </MDBRow>\n                </TabPanel>\n                <TabPanel value={value} index={6}>\n                    <MDBRow>\n                        {(category.length > 5)?\n                            portfolio.filter((item) => item.sector === `${category[5].title}`).map((item) => (\n                                <MDBCol  key={item._id} md={4} style={{ minHeight: '240px',}}>\n                                    <Item item={item} />\n                                </MDBCol>\n                            ))\n                        :''}\n                    </MDBRow>\n                </TabPanel>\n                <TabPanel value={value} index={7}>\n                    <MDBRow>\n                        {(category.length > 6)?\n                            portfolio.filter((item) => item.sector === `${category[6].title}`).map((item) => (\n                                <MDBCol  key={item._id} md={4} style={{ minHeight: '240px',}}>\n                                    <Item item={item} />\n                                </MDBCol>\n                            ))\n                        :''}\n                    </MDBRow>\n                </TabPanel>\n                <TabPanel value={value} index={8}>\n                    <MDBRow>\n                        {(category.length > 7)?\n                            portfolio.filter((item) => item.sector === `${category[7].title}`).map((item) => (\n                                <MDBCol  key={item._id} md={4} style={{ minHeight: '240px',}}>\n                                    <Item item={item} />\n                                </MDBCol>\n                            ))\n                        :''}\n                    </MDBRow>\n                </TabPanel>\n\n            </div>\n        </MDBContainer>\n    );\n}\n","import React from 'react'\n\nexport default props =>\n    <div>\n        Conteudo inferior aqui\n    </div>\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { MDBBtn } from \"mdbreact\";\n\nexport default function FormDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div> \n      <MDBBtn color=\"white\" onClick={handleClickOpen}>\n      Fazer Login\n      </MDBBtn>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Fazer Login</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Favor informar seus dados de acesso para logar no painel do Cliente\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Cadastrado\"\n            type=\"email\"\n            fullWidth\n          />\n            <TextField\n            margin=\"dense\"\n            id=\"name 2\"\n            label=\"Senha\"\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Sair\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Acessar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { MDBBtn } from \"mdbreact\";\n\nexport default function FormDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div> \n      <MDBBtn outline color=\"white\" onClick={handleClickOpen} >\n        Cadastre-se\n      </MDBBtn>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Fazer Login</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Favor informar seus dados de acesso para logar no painel do Cliente\n          </DialogContentText>\n                  <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name 1\"\n            label=\"Nome\"\n            type=\"name\"\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"name 2\"\n            label=\"Sobre Nome\"\n            type=\"name\"\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"name 3\"\n            label=\"Genero\"\n            type=\"name\"\n            fullWidth\n          />\n         <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Seu Email\"\n            type=\"email\"\n            fullWidth\n          />\n         <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name 4\"\n            label=\"Usuário\"\n            type=\"name\"\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"name 5\"\n            label=\"Senha\"\n            type=\"password\"\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"name 6\"\n            label=\"Repetir Senha\"\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Sair\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Acessar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default props =>\n    <div>\n        Conteudo inferior aqui\n    </div>\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n        position: 'fixed',\r\n        width: '50px',\r\n        height: '50px',\r\n        bottom: '30px',\r\n        left: '50px',\r\n        'z-index': 100,\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Fabmine() {\r\n  const classes = useStyles();\r\n  const [whatsapp, setWhatsapp] = useState('');\r\n  useEffect(() => {\r\n        fetch('/basic', {\r\n            method: 'GET',\r\n        }).then(res => res.json())\r\n            .then((res) => {\r\n                if (!!res.info) {\r\n                    const {\r\n                        whatsapp = '',\r\n                    } = res.info;\r\n                    setWhatsapp(whatsapp);\r\n                }\r\n\r\n            })\r\n    }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab color=\"primary\" aria-label=\"add\" size=\"width:50px\" href={whatsapp}>\r\n        <WhatsAppIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\nimport {\n  MDBMask,\n  MDBRow,\n  MDBCol,\n  MDBView,\n  MDBContainer,\n  MDBFormInline,\n  MDBAnimation,\n  MDBIcon, \n  MDBBtn\n} from \"mdbreact\";\nimport Header from '../Header';\nimport { About, Contact, Portfolio, Sectors, Signup, Signin, Fabmine } from '../Pages';\nimport { TinyButton as ScrollUpButton } from \"react-scroll-up-button\";\nimport BackgroundSlideshow from 'react-background-slider'\nimport './page.css';\n\nclass Main extends Component {\n  state = {\n    data: [],\n    siteText:'',\n    siteDesc:'',\n    quoteText:'',\n    quoteLink:'',\n    siteImg:'',\n    slide:[],\n    images:[],\n    image:'',\n    firstimage:{},\n    slideImages:[],\n    slideArray:[],\n    item_quote: ''\n  };\n\n  constructor(props) {\n    super(props);\n\n    let slideArray = [];\n    for (var i = 0; i < 100; i++) {\n      slideArray.push('');\n    }\n    this.state = {\n      slideArray: slideArray\n    };\n  }\n\n  componentDidMount() {\n    let _this = this;\n    fetch('/mix', {\n      method: 'GET',\n    }).then(res => res.json())\n      .then((res) => {\n        if (!!res.info) {\n          _this.setState({ data: res.info });\n        }\n      })\n    fetch('/basic', {\n      method: 'GET',\n    }).then(res => res.json())\n      .then((res) => {\n        if (!!res.info) {\n          let siteText = res.info.siteText;\n          let siteDesc = res.info.siteDesc;\n          let siteImg = res.info.siteImg;     \n          let quoteText = res.info.quoteText;\n          let quoteLink = res.info.quoteLink;    \n          _this.setState({ siteText, siteDesc, siteImg, quoteLink, quoteText });\n        }\n      })\n\n    fetch(`/quote`)\n      .then(res => res.json())\n      .then(res => {\n          if(!!res.result){\n            let quotearray = res.result;\n            let quotomap = quotearray.map((data)=><MDBRow><p>{data.description}</p><a href={data.name}>{data.name}</a>\n              <hr style={{backgroundColor:'#f0f0f0',width:'100%',height:'1px'}}/></MDBRow>);\n            _this.setState({item_quote: quotomap});\n          }\n      })\n      .catch(error => {\n          console.log('Please check your connection..!');\n      })\n\n    fetch('/slide', {\n      method: 'GET',\n    }).then(res => res.json())\n      .then((res) => {\n        if (!!res.result) {\n          _this.setState({slideImages:res.result});\n\n          let slideArray = this.state.slideArray;\n          for (var n = 0; n < 100;) {\n            for (var i = res.result.length - 1; i >= 0; i--) {\n              slideArray[n] = res.result[i].image;\n              n++;\n            }\n          }\n          \n          _this.setState({slideArray:slideArray});\n        }\n      })\n  }\n\n  render() {\n    let slideArray = this.state.slideArray;\n    \n    return (\n      <div id=\"apppage\">\n        <Header />\n        <MDBView>\n          <BackgroundSlideshow duration={5} images={slideArray} />\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n            <MDBContainer>\n              <MDBRow>\n                <MDBCol md=\"6\" className=\"white-text text-center text-md-left mt-xl-5 mb-5\">\n                  <MDBAnimation type=\"fadeInLeft\" delay=\".5s\">\n                    <h1 className=\"h1-responsive font-weight-bold mt-sm-5\">\n                      {this.state.siteText}\n                    </h1>\n                    <hr className=\"hr-light\" />\n                    <h6 className=\"mb-4\">\n                      {this.state.siteDesc}\n                    </h6>\n                    <MDBFormInline>\n                      <Signin />\n                      <Signup />\n                    </MDBFormInline>\n                  </MDBAnimation>\n                </MDBCol>\n\n                <MDBCol md=\"6\" xl=\"5\" className=\"mt-xl-5\">\n                  <MDBAnimation type=\"fadeInRight\" delay=\".3s\">\n                    <img\n                      src={this.state.siteImg}\n                      alt=\"\"\n                      className=\"img-fluid\"\n                    />\n                  </MDBAnimation>\n                </MDBCol>\n              </MDBRow>\n            </MDBContainer>\n          </MDBMask>\n        </MDBView>\n\n        <div id=\"colorlib-main\">\n          \n          <About data={this.state.data} />\n          <Portfolio />\n          <Sectors data={this.state.data} />\n            <div id='quote' className='quotes text-center' >\n              <div className='block-title'>\n                  <MDBContainer>\n                      <h2>Free Quote</h2>\n                      {this.state.item_quote}\n                  </MDBContainer>\n              </div>\n              <div className='quotes-block'>\n                  <MDBContainer>\n                      <div className='quotes-block-title'>\n                          <h2>Work Process</h2>\n                          <hr style={{backgroundColor:'#fb3e3e',width:'45px',height:'1px'}}/>\n                      </div>\n                      <div className='quotes-block-content'>\n                      <MDBRow>   <p className='quotes-block-content-p'>{this.state.quoteText}</p></MDBRow>\n                          <MDBRow style={{marginTop:'5%'}} >\n                              <MDBCol md=\"4\" className=\"text-md-center mt-xl-5 mb-5\">\n                                  <div className='quotes-steps'>\n                                      <MDBIcon icon=\"pen-fancy\" className=\"red-text pr-3\" size=\"3x\" style={{marginBottom:'5%'}} />\n                                      <h3>Tell us what you need</h3>\n                                      <p>the big oxmax advised her not to do so.</p>\n                                  </div>\n                              </MDBCol>\n                              <MDBCol md=\"4\" className=\"text-md-center mt-xl-5 mb-5\">\n                                  <MDBIcon icon=\"id-card\" className=\"red-text pr-3\" size=\"3x\" style={{marginBottom:'5%'}}/>\n                                  <h4>Get Free quotes</h4>\n                                  <p>Little Blind Text didn't listen.</p>\n                              </MDBCol>\n                              <MDBCol md=\"4\" className=\"text-md-center mt-xl-5 mb-5\">\n                                  <MDBIcon icon=\"bullseye\" className=\"red-text pr-3\" size=\"3x\" style={{marginBottom:'5%'}}/>\n                                  <h3>Deliver high quailty product</h3>\n                                  <p>When she reached the first hills.</p>\n                              </MDBCol>\n                          </MDBRow>\n                          <MDBBtn  color=\"danger\" href={this.state.quoteLink}>Get Started <MDBIcon icon=\"arrow-right\" className=\"ml-1\" /></MDBBtn>\n                      </div>\n                  </MDBContainer>\n              </div>\n            </div>\n          <Contact />\n          \n        </div>\n\n        <ScrollUpButton\n          style={{ background: '#71c11c', padding: '12px 18px', borderRadius: '50%', width: '50px', height: '50px' }}\n        />\n        <div className = 'fabmine'>\n        <Fabmine\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard } from 'mdbreact';\nimport { Link, Redirect  } from 'react-router-dom';\nimport { isLoggedIn, setUser } from \"../../../services/auth\";\nimport jwt_decode from \"jwt-decode\";\n\nconst style = {\n    padding: '50px',\n    margin: '70px auto 0',\n    maxWidth: '400px',\n    width: '100%'\n  }\n\nclass EditorLogin extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      user:{},\n      email:'',\n      pass:'',\n\n      passwordincorrect:'',\n      emailnotfound:''\n    };\n  }\n  \n    componentDidMount() {\n    if (this.captchaDemo) {\n        console.log(\"started, just a second...\")\n        this.captchaDemo.reset();\n        this.captchaDemo.execute();\n    }\n  }\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    const _this = this;\n    const {email, pass} = this.state;\n    if(this.state.email === ''){\n      this.setState({emailnotfound:\"Please enter your email!\"});\n    }\n    if(this.state.pass === ''){\n      this.setState({passwordincorrect:\"Please enter your password!\"});\n    }\n    if(this.state.email !== '' && this.state.pass !== ''){\n          fetch('/auth/login', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            email,\n            password : pass \n          })\n        }).then(res => res.json())\n        .then((res) => {\n\n          if(!res.passwordincorrect && !res.emailnotfound ){\n            let user = jwt_decode(res.token);\n            const { id, name } = user;\n            setUser({ \n              id,\n              name,\n              token : res.token\n            });\n            _this.setState({user});\n          }else{\n            this.setState({emailnotfound:res.emailnotfound});\n            this.setState({passwordincorrect:res.passwordincorrect});\n          }\n        })\n      }\n  }\n  render(){\n    if (isLoggedIn()) {\n      return <Redirect to='/editor-dasboard' />\n    }\n    return (\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"12\">\n            <MDBCard style={style}>\n              <form onSubmit={this.handleSubmit}>\n                <p className=\"h4 text-center mb-4\" style={{ color: '#2bbbad', }}>Sign in</p>\n                <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\n                  Your email\n              </label>\n                <input\n                  type=\"email\"\n                  id=\"defaultFormLoginEmailEx\"\n                  className=\"form-control\"\n                  value={this.state.email}\n                  onChange= {(e)=> { \n                    let email = e.target.value;\n                    this.setState({ email });\n                    this.setState({emailnotfound:''});\n                   }}\n                />\n                <p style={{color:'red'}}>{this.state.emailnotfound}</p>\n                <br />\n                <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n                  Your password\n              </label>\n                <input\n                  type=\"password\"\n                  id=\"defaultFormLoginPasswordEx\"\n                  className=\"form-control\"\n                  value={this.state.pass}\n                  onChange= {(e)=> { \n                    let pass = e.target.value;\n                    this.setState({ pass });\n                    this.setState({passwordincorrect:''});\n                   }}\n                />\n                <p style={{color:'red'}}>{this.state.passwordincorrect}</p>\n                <MDBRow style={{ marginTop: '20px', }}>\n                  <MDBCol md=\"6\">\n                    <MDBBtn type=\"submit\">Login</MDBBtn>\n                  </MDBCol>\n                  <MDBCol md=\"6\" className=\"text-right\">\n                    <MDBBtn ><Link to=\"/\" style={{ color: '#fff', }}>Home</Link></MDBBtn>\n                  </MDBCol>\n                </MDBRow>\n              </form>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n \n};\n\nexport default EditorLogin;\n","import React, {useState} from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard } from 'mdbreact';\n\nconst EditorReg = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [nameerror, setNameerror] = useState('');\n  const [emailerror, setEmailerror] = useState('');\n  const [passerror, setPasserror] = useState('');\n  const [message_success, setMessage_success] = useState('');\n  const style = {\n    padding: '50px',\n    margin: '70px auto 0',\n    maxWidth: '400px',\n    width: '100%'\n  }\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    if(name === ''){\n      setNameerror(\"Please enter your name!\");\n    }\n    if(email === ''){\n      setEmailerror(\"Please enter your email!\");\n    }\n    if(pass === ''){\n      setPasserror(\"Please enter your password\");\n    }\n    if(name !== '' && email !== '' && pass !== ''){\n          fetch('/auth/register', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              name , email, password : pass \n            })\n          }).then(res => res.json())\n          .then((res) => {\n            if(res.message === 'Email is Already Register!'){\n              setEmailerror('Email is already exist!');\n              setEmail('');\n            }\n            if(res.message === 'User Successfully Added!'){\n              setMessage_success(\"Successfully added!\");\n            }\n          })\n    }\n\n  }\n  return (\n    <MDBContainer>\n      <MDBRow>\n        <MDBCol md=\"12\">\n          <MDBCard style={style}>\n            <form onSubmit={handleSubmit}>\n              <p className=\"h4 text-center mb-4\" style={{ color: '#2bbbad', }}>Sign Up</p>\n              <p style={{color:'green'}}>{message_success}</p>\n              <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\n                Your Name\n            </label>\n              <input\n                type=\"text\"\n                name='name'\n                id=\"defaultFormLoginEmailEx\"\n                value={name}\n                onChange= {(e)=> { setName(e.target.value); setNameerror(''); }}\n                className=\"form-control\"\n              />\n              <p style={{color:'red'}}>{nameerror}</p>\n              <br />\n              <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\n                Your email\n            </label>\n              <input\n                type=\"email\"\n                name='email'\n                id=\"defaultFormLoginEmailEx\"\n                value={email}\n                onChange= {(e)=> { setEmail(e.target.value); setEmailerror(''); }}\n                className=\"form-control\"\n              />\n              <p style={{color:'red'}}>{emailerror}</p>\n              <br />\n              <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n                Your password\n            </label>\n              <input\n                type=\"password\"\n                name='pass'\n                id=\"defaultFormLoginPasswordEx\"\n                value={pass}\n                onChange= {(e)=> { setPass(e.target.value); setPasserror(''); }}\n                className=\"form-control\"\n              />\n              <p style={{color:'red'}}>{passerror}</p>\n              <div className='text-center' style={{ marginTop: '20px', }}>\n                <MDBBtn type=\"submit\">Sign Up</MDBBtn>\n              </div>\n            </form>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default EditorReg;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBInput, MDBContainer, MDBFormInline } from \"mdbreact\";\n\nexport default class Heaher extends Component {\n    state = {\n        collapsed: false,\n        site: ''\n    };\n    componentDidMount() {\n        let _this = this;\n        fetch('/basic')\n            .then(res => res.json())\n            .then((res) => {\n                if (!!res.info) {\n                    const { site = '', } = res.info;\n                    _this.setState({ site });\n                }\n            })\n            .catch(error => {\n                console.log('Please check your connection..!');\n            })\n    }\n    handleTogglerClick = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    };\n    render() {\n        const overlay = (\n            <div\n                id=\"sidenav-overlay\"\n                style={{ backgroundColor: \"transparent\" }}\n                onClick={this.handleTogglerClick}\n            />\n        );\n        return (\n            <Router>\n                <div id=\"colorlib-page\">\n                    <div id=\"container-wrap\">\n                        <MDBNavbar\n                            color=\"primary-color\"\n                            dark\n                            expand=\"md\"\n                            fixed=\"top\"\n                            scrolling\n                        >\n                            <MDBContainer>\n                                <MDBNavbarBrand>\n                                    <strong className=\"white-text\">{this.state.site}</strong>\n                                </MDBNavbarBrand>\n                                <MDBNavbarToggler onClick={this.handleTogglerClick} />\n                                <MDBCollapse isOpen={this.state.collapsed} navbar>\n                                    <MDBNavbarNav left>\n                                        <MDBNavItem>\n                                            <a className=\"nav-link Ripple-parent\" href='/'>Home</a >\n                                        </MDBNavItem>\n                                        <MDBNavItem>\n                                            <a className=\"nav-link Ripple-parent\" href='/products'>Products</a >\n                                        </MDBNavItem>\n                                        <MDBNavItem>\n                                            <a className=\"nav-link Ripple-parent\" href='/services'>Services</a >\n                                        </MDBNavItem>\n                                    </MDBNavbarNav>\n                                    <MDBNavbarNav right>\n                                        <MDBNavItem>\n                                            <MDBFormInline >\n                                                <div className=\"md-form my-0\">\n                                                    <MDBInput hint=\"Bucsa\" type=\"text\" containerClass=\"mt-0 mb-3\" />\n                                                </div>\n                                            </MDBFormInline>\n                                        </MDBNavItem>\n                                    </MDBNavbarNav>\n                                </MDBCollapse>\n                            </MDBContainer>\n                        </MDBNavbar>\n                        {this.state.collapsed && overlay}\n                    </div>\n                </div>\n            </Router>\n        )\n    }\n\n};","import React from \"react\";\nimport {\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBContainer,\n  MDBRow,\n  MDBCol\n\n} from \"mdbreact\";\nimport { Modal } from \"antd\";\n\nexport default ({ item, sect}) => {\n  const [detailModal, setDetailModal] = React.useState(false);\n  const [cat, setCat] = React.useState('');\n  const [sub, setSub] = React.useState('');\n  const [bra, setBra] = React.useState('');\n  const [mod, setMod] = React.useState('');\n  const showModelHandler = () => {\n    let cat = sect.filter(it=>it.sector==='Category'&&it._id===item.category);\n    setCat(cat[0].title);\n    let sub = sect.filter(it=>it.sector==='Subcategory'&&it._id===item.subCategory);\n    setSub(sub[0].title);\n    let bra = sect.filter(it=>it._id===item.model);\n    setBra(bra[0].title);\n    let mod = sect.filter(it=>it._id===item.brand);\n    setMod(mod[0].title);\n    setDetailModal(true);\n    console.log(item);\n    console.log(sect);\n  };\n    // fetch('/managesector', {\n    //         method: 'GET',\n    //     }).then(res => res.json())\n    //         .then((res) => {\n    //             if (!!res.result) {\n    //                 //this.setState({dat:res.result});\n    //                 setDat(res.result);\n    //                 console.log(res.result);\n    //             }\n    //   });\n  const detailModalHandleCancel = () => {\n    setDetailModal(false);\n  };\n\n  return (\n    <>\n\n      <div\n        className=\"card\"\n        onClick={showModelHandler}\n        style={{ marginTop: \"6%\" }}\n      >\n        <img\n          style={{ maxWidth: \"100%\", borderRadius: \"5px 5px 0px 0px\", height: 200 }}\n          alt={item._id}\n          src={`/${item.image}`}\n\n        />\n        <p style={{ fontSize: '25px', color: 'red', position: 'absolute', marginLeft: '265px' }}><b>{item.discount}<span style={{ fontSize: '25px', color: 'red' }}>%</span></b></p>\n        <div className=\"card-body\">\n          <div className=\"card-title\">{item.name}</div>\n          <div className=\"card-text\" style={{ borderBottom: \"1px solid #e8e8e8\", height: \"100px\" }}>{item.description.substring(0, 300)}</div>\n        </div>\n\n        <p style={{ textAlign: 'right', marginRight: '3%' }}><b>$ {item.price}</b></p>\n      </div>\n\n      <Modal\n        title=\"Product Details\"\n        visible={detailModal}\n        onCancel={detailModalHandleCancel}\n        footer={null}\n        width=\"1000px\"\n      // maxWidth=\"1000px\"\n      >\n        <MDBContainer>\n          <MDBRow style={{ textAlign: 'left' }}>\n            <MDBCol md=\"6\">\n\n              <h3 style={{ fontWeight: '700'}}><b>{item.name}</b></h3>\n              <h6><b>$ {item.price}</b></h6>\n              <div style={{height: \"200px\", marginTop: \"3%\"  }}>{item.description}</div>\n\n             \n             <h6><b>Sold By:&nbsp;&nbsp;&nbsp;&nbsp;{item.soldByObject.soldBy}/{item.soldByObject.soldbyswt}</b></h6>\n             <h6><b>Portion:</b></h6>\n             &nbsp;&nbsp;&nbsp;&nbsp;{item.portionn.portion}:&nbsp;&nbsp;&nbsp;&nbsp;{item.portionn.portionValue}&nbsp;&nbsp;{item.portionn.portionswt}\n             \n             <h6><b>Measurement:</b></h6>\n             &nbsp;&nbsp;&nbsp;&nbsp;height:&nbsp;&nbsp;{item.measurement.height}&nbsp;&nbsp;{item.measurement.unit}\n             &nbsp;&nbsp;&nbsp;&nbsp;width:&nbsp;&nbsp;{item.measurement.width}&nbsp;&nbsp;{item.measurement.unit}\n             &nbsp;&nbsp;&nbsp;&nbsp;length:&nbsp;&nbsp;{item.measurement.lenght}&nbsp;&nbsp;{item.measurement.unit}\n             &nbsp;&nbsp;&nbsp;&nbsp;depth:&nbsp;&nbsp;{item.measurement.depth}&nbsp;&nbsp;{item.measurement.unit}\n             <div><br/></div>\n              {/*<table class=\"table\">\n                              \n                              <thead>\n                               \n                              </thead>\n                              <tbody>\n                                <tr >\n                                 <td style={{borderTopStyle:'none'}}></td>\n                                  <td style={{borderTopStyle:'none'}}>{item.soldByObject.soldBy}</td>\n                                  <td style={{borderTopStyle:'none'}}>{item.soldByObject.soldBy}</td>\n                                  <th style={{ borderLeft: '2px solid #e8e8e8',borderTopStyle:'none' }}>Sold By</th>\n                                </tr>\n                                <tr>\n                                 \n                                  <td>{item.portionn.portion}</td>\n                                  <td>{item.portionn.portionValue}</td>\n                                  <td>{item.portionn.portionswt}</td>\n                                  <th style={{ borderLeft: '2px solid #e8e8e8' }}>Portion</th>\n                                </tr>\n                                <tr>\n                                 \n                                  <td>{item.measurement.unit}</td>\n                                  <td>{item.measurement.height}H,\n                                      {\" \"}\n                                    {item.measurement.width}w\n                                    </td>\n                                    <td>\n                                    {item.measurement.lenght}L, {\" \"}\n                                    {item.measurement.depth}D\n                                        </td>\n                                  <th style={{ borderLeft: '2px solid #e8e8e8' }}>Measurement</th>\n                                </tr >\n                              </tbody>\n                            </table>*/}\n              \n             \n            </MDBCol>\n            <MDBCol md=\"6\">\n              <img width={\"100%\"} height={\"260px\"} alt={item.name} src={`/${item.image}`} />\n              <MDBTable style={{marginTop:'3%'}}>\n                <MDBTableHead>\n                  <tr>\n                    <th><b>Category</b></th>\n                    <th><b>SubCategory</b></th>\n                    <th><b>Brand</b></th>\n                    <th><b>Model</b></th>\n                    \n                    \n                  </tr>\n                </MDBTableHead>\n                <MDBTableBody>\n                  <tr>\n                    <td>{cat}</td>\n                    <td>{sub}</td>\n                    \n                    <td>{bra}</td>\n                    <td>{mod}</td>\n                    \n                  </tr>\n                </MDBTableBody>\n              </MDBTable>\n\n            </MDBCol>\n\n          </MDBRow>\n        </MDBContainer>\n      </Modal>\n    </>\n  );\n};","import React from 'react';\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { Select, Empty, Button, Pagination } from 'antd';\nimport { Contact,Fabmine } from './index';\nimport Header2 from '../Header2';\nimport ItemProduct from './ItemProduct';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nclass Products extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            productCount: '',\n            currentPage: 1,\n            data:[]\n        }\n    }\n    componentDidMount() {\n        fetch('/managesector', {\n                method: 'GET',\n            }).then(res => res.json())\n                .then((res) => {\n                    if (!!res.result) {\n                        this.setState({data:res.result});\n                    }\n          });\n            this.fetchProductsHandler();\n    }\n\n    fetchProductsHandler = (page) => {\n        let data = {\n            page: page || 1\n        };\n        fetch(\"/product/get\", {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ products: res.result[0].data, productCount: res.result[0].total[0].value });\n            })\n            .catch(error => {\n                console.log(\"Please check your internet connection..!\", error);\n            });\n    }\n    fetchProductsByCategory = (data) => {\n        fetch(\"/product/category\", {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ products: res.result });\n            })\n            .catch(error => {\n                console.log(\"Please check your internet connection..!\", error);\n            });\n    }\n    onChangeCategory = (value) => {\n        let data = {\n            category: value\n        }\n        fetch(\"/product/category\", {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ products: res.result });\n            })\n            .catch(error => {\n                console.log(\"Please check your internet connection..!\", error);\n            });\n    }\n    onChangeSubCategory = (value) => {\n        let data = {\n            subCategory: value\n        }\n        fetch(\"/product/sub-category\", {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ products: res.result });\n            })\n            .catch(error => {\n                console.log(\"Please check your internet connection..!\", error);\n            });\n    }\n\n    onChangeBrand = (value) => {\n        let data = {\n            model: value\n        }\n        fetch(\"/product/brand\", {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ products: res.result });\n            })\n            .catch(error => {\n                console.log(\"Please check your internet connection..!\", error);\n            });\n    }\n\n    clearHandler = () => {\n        this.fetchProductsHandler();\n        \n    }\n\n    onPageChange = (page) => {\n        this.fetchProductsHandler(page);\n        this.setState({ currentPage: page });\n    }\n\n\n    render() {\n        const { products } = this.state;\n        let data = this.state.data;      \n        let categorydata = [];\n        let subcategorydata = [];\n        let branddata = [];\n        let brandmodeldata = [];\n        for (var i = data.length - 1; i >= 0; i--) {\n          if(data[i].sector === 'Category') categorydata.push(data[i]);\n          if(data[i].sector === 'Subcategory') subcategorydata.push(data[i]);\n          if(data[i].sector === 'Brand') branddata.push(data[i]);\n          if(data[i].sector === 'Model') brandmodeldata.push(data[i]);\n        }\n        let optionItems_category = categorydata.map((data) =>\n                <MenuItem value={data._id}>{data.title}</MenuItem>\n            );\n        let optionItems_subcategory = subcategorydata.map((data) =>\n                <MenuItem value={data._id}>{data.title}</MenuItem>\n            );\n        let optionItems_brand = branddata.map((data) =>\n                <MenuItem value={data._id}>{data.title}</MenuItem>\n            );\n        return (\n            <>\n                <Header2 />\n\n                <div className='container products'>\n                    <div className='filters'>\n                        <Select\n                            style={{ width: 200 }}\n                            placeholder=\"Select a Category\"\n                            onChange={this.onChangeCategory}\n                        >\n                            {optionItems_category}\n                        </Select>\n                        <Select\n                            style={{ width: 200 }}\n                            placeholder=\"Select a Sub-Category\"\n                            onChange={this.onChangeSubCategory}\n                        >\n                            {optionItems_subcategory}\n                        </Select>\n                        <Select\n                            style={{ width: 200 }}\n                            placeholder=\"Select Brand\"\n                            onChange={this.onChangeBrand}\n                        >\n                            {optionItems_brand}\n                        </Select>\n                        <Button onClick={this.clearHandler}>Clear</Button>\n                    </div>\n                    <section className='product-wrapper'>\n                        {\n                            products.length && data.length?\n                                products.map(product => (\n                                    <div className='item product' key={product._id}>\n                                        <div className='team-main'>\n                                            <MDBContainer>\n                                                <MDBRow>\n                                                    <MDBCol key={product._id} style={{ minHeight: '250px', }} >\n                                                        <ItemProduct item={product} sect={data}/>\n                                                    </MDBCol>\n                                                </MDBRow>\n                                            </MDBContainer>\n                                        </div>\n                                    </div>\n                                ))\n\n                                :\n                                <Empty />\n                        }\n                    </section>\n                    {\n                        products.length ?\n                            <Pagination current={this.state.currentPage} pageSize={9} defaultPageSize={9} onChange={this.onPageChange} total={this.state.productCount} />\n                            : null\n                    }\n                </div>\n                        <Fabmine\n        />\n                <Contact />\n            </>\n        )\n    }\n}\n\n\nexport default Products;\n","import React from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol\n   \n  } from \"mdbreact\";\nimport { Modal } from \"antd\";\n\nexport default ({ item }) => {\n  const [detailModal, setDetailModal] = React.useState(false);\n\n  const showModelHandler = () => {\n    setDetailModal(true);\n  };\n  const detailModalHandleCancel = () => {\n    setDetailModal(false);\n  };\n\n  return (\n    <>\n      <div className=\"card\"\n       onClick={showModelHandler}\n       style={{marginTop:\"6%\"}}\n       >\n        <img\n          style={{ maxWidth: \"100%\",borderRadius: \"5px 5px 0px 0px\", height: 200  }}\n          alt={item._id}\n          src={`/${item.image}`}\n        />\n       \n        <div className=\"card-body\">\n          <div className=\"card-title\">{item.name}</div>\n          <div className=\"card-text\" style={{borderBottom:\"1px solid #e8e8e8\",height:\"100px\"}}>{item.description.substring(0, 300)}</div>\n        </div>\n        <p style={{textAlign:'right',marginRight:'3%'}}><b>$ {item.price}</b></p>\n      </div>\n      <Modal\n        title=\"Service Details\"\n        visible={detailModal}\n        onCancel={detailModalHandleCancel}\n        footer={null}\n        width=\"800px\"\n        // maxWidth=\"600px\"image\n      >\n           <MDBContainer>\n           <MDBRow style={{ textAlign: 'left' }} >\n            \n        <MDBCol md=\"6\">\n       \n        <h3 style={{ fontWeight: '700'}}><b>{item.name}</b></h3>\n        <h6><b>$ {item.price}</b></h6>\n        <div style={{height: \"200px\", marginTop: \"3%\"  }}>{item.description}</div>\n              <h6><b>Type: {item.type}</b></h6>\n        </MDBCol>\n        <MDBCol md=\"6\">\n        <img width={\"100%\"} height={\"260px\"} alt={item.name} src={`/${item.image}`} />\n      \n        </MDBCol>\n        </MDBRow>\n        </MDBContainer>\n       \n      </Modal>\n    </>\n  );\n};","import React from 'react';\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport {Pagination } from 'antd';\nimport { Contact,Fabmine } from './index';\nimport Header2 from '../Header2';\nimport ItemService from './ItemService';\n\nclass Services extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            services: [],\n            serviceCount: '',\n            currentPage: 1\n        }\n       \n    }\n    componentDidMount() {\n        this.fetchServicesHandler();\n    }\n\n    fetchServicesHandler = (page) => {\n        let data = {\n            page: page || 1\n        };\n        fetch(\"/service/get\", {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ services: res.result[0].data, serviceCount: res.result[0].total[0].value });\n            })\n            .catch(error => {\n                console.log(\"Please check your internet connection..!\", error);\n            });\n    }\n    onPageChange = (page) => {\n        this.fetchServicesHandler(page);\n        this.setState({ currentPage: page });\n    }\n\n    render() {\n        const { services } = this.state;\n        return (\n            <>\n                <Header2 />\n                <div className='container services'>\n                    <section className='product-wrapper'>\n                        {\n                            services.length &&\n                            services.map(product => (\n                                <div className='item product' key={product._id}>\n                                    <div className='team-main'>\n                                        <MDBContainer>\n                                            <MDBRow>\n                                                <MDBCol key={product._id} style={{ minHeight: '250px', }}>\n                                                    <ItemService item={product} />\n                                                </MDBCol>\n                                            </MDBRow>\n                                        </MDBContainer>\n                                    </div>\n                                </div>\n                            ))\n                        }\n                    </section>\n                    {\n                        services.length ?\n                            <Pagination current={this.state.currentPage} pageSize={9} defaultPageSize={9} onChange={this.onPageChange} total={this.state.serviceCount} />\n                            : null\n                    }\n                </div>\n                <Fabmine />\n                <Contact />\n            </>\n        )\n    }\n}\n\n\nexport default Services;","import React from 'react'\n\nexport default props =>\n    <div>\n        <h1>Page not found.</h1>\n    </div>\n","import React from 'react';\nimport { Upload, Icon, message } from 'antd';\n\n\nexport default class Avatar extends React.Component {\n  state = {\n    imageUrl: !!this.props.defaultV ? this.props.defaultV : undefined,\n    loading: false,\n  };\n\n  componentDidUpdate = (P_props) => {\n    if(P_props.defaultV !== this.props.defaultV){\n      this.setState({imageUrl: this.props.defaultV})\n    }\n  };\n  \n\n  beforeUpload = (file) => {\n\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/ico';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG/ICO file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n  }\n\n  getBase64 = (img, callback) => {\n\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  handleChange = info => {\n    this.props.handleImage(info.file.originFileObj);\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl,\n          loading: false,\n        }),\n      );\n    }\n  };\n\n  render() {\n    //console.log('this.props.def', this.props.defaultV);\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const { imageUrl } = this.state;\n    return (\n      <Upload\n        name=\"avatar\"\n        type='file'\n        listType=\"picture-card\"\n        className=\"avatar-uploader\"\n        showUploadList={false}\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n        beforeUpload={this.beforeUpload}\n        onChange={this.handleChange}\n      >\n        {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n      </Upload>\n    );\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport './editor.css';\nimport Upload from './Upload'\nconst FormPage = () => {\n    const [id, setId] = useState('');\n    const [site, setSiteName] = useState('');\n    const [email, setEmail] = useState('');\n    const [email1, setEmail1] = useState('');\n    const [phone, setPhone] = useState('');\n    const [officeHours, setOfficeHours] = useState('');\n    const [address, setAddress] = useState('');\n    const [address1, setAddress1] = useState('');\n    const [siteDesc,setSiteDesc] = useState('');\n    const [contactText, setContactText] = useState('');\n    const [contactDesc,setContactDesc] = useState('');\n    const [siteText, setSiteText] = useState('');\n    const [siteImg, setSiteImg] = useState('');\n    const [quoteText, setQuoteText] = useState('');\n    const [quoteLink, setQuoteLink] = useState('');\n    const [whatsapp, setWhatsapp] = useState('');\n    const [defaultSiteImg, setDefaultSiteImg] = useState(undefined);\n    const [successMsg, setSuccessMsg] = useState('');\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let data = new FormData();\n        data.append('id',id);\n        data.append('site',site);\n        data.append('email',email);\n        data.append('email1',email1);\n        data.append('phone',phone);\n        data.append('officeHours',officeHours);\n        data.append('address',address);\n        data.append('address1',address1);\n        data.append('siteText',siteText);\n        data.append('siteDesc',siteDesc);\n        data.append('contactText',contactText);\n        data.append('contactDesc',contactDesc);\n        data.append('quoteText', quoteText);\n        data.append('quoteLink', quoteLink);\n        data.append('whatsapp', whatsapp);\n        if(siteImg !==''){\n            data.append('file', siteImg);\n        }       \n        \n            fetch('/basic', {\n            method: 'POST',\n            body: data\n        })\n            .then(res => {\n                if (res.status === 201) {\n                    setSuccessMsg(\"Successfully saved!\");\n                    //alert(\"Successfully saved!\");\n                    console.log(res);\n                }\n            })\n            .catch(error => {\n                alert(\"Failed!\")\n                console.log('Please check your connection');\n            })\n        \n    }\n    \n    useEffect(() => {\n        fetch('/basic', {\n            method: 'GET',\n        }).then(res => res.json())\n            .then((res) => {\n                if (!!res.info) {\n                    const {\n                        _id: id = '',\n                        site = '',\n                        email = '',\n                        email1 = '',\n                        phone = '',\n                        officeHours = '',\n                        address = '',\n                        address1 = '',\n                        siteText = '',\n                        siteDesc = '',\n                        contactText = '',\n                        contactDesc = '',\n                        quoteText = '',\n                        quoteLink = '',\n                        whatsapp = '',\n                        siteImg = ''\n                    } = res.info;\n                    setId(id);\n                    setSiteName(site);\n                    setEmail(email);\n                    setEmail1(email1);\n                    setPhone(phone);\n                    setOfficeHours(officeHours);\n                    setAddress(address);\n                    setAddress1(address1);\n                    setDefaultSiteImg(siteImg);\n                    setSiteText(siteText);\n                    setSiteDesc(siteDesc);\n                    setContactText(contactText);\n                    setContactDesc(contactDesc);\n                    setQuoteText(quoteText);\n                    setWhatsapp(whatsapp);\n                    setQuoteLink(quoteLink);\n                }\n\n            })\n    }, []);\n    const handleImage = (file) => {\n        setSuccessMsg('');\n        setSiteImg(file);\n    }\n    return (\n        <MDBContainer>\n            <form className='basic-form' onSubmit={handleSubmit} encType='multipart/form-data'>\n                <p className=\"h4 text-center mb-4\">Basic Information</p>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{ margin: 'auto' }}>\n                        <MDBInput\n                            label=\"Site name\"\n                            type=\"text\"\n                            value={site}\n                            onChange={(e) => {\n                                let site = e.target.value;\n                                setSiteName(site);\n                                setSuccessMsg('');\n                            }}\n                        />\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{ margin: 'auto' }}>\n                        <MDBInput\n                            label=\"Site Text\"\n                            type=\"text\"\n                            value={siteText}\n                            onChange={(e) => {\n                                let siteText = e.target.value;\n                                setSiteText(siteText);\n                                setSuccessMsg('');\n                            }}\n                        />\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{ margin: 'auto' }}>\n                        <MDBInput\n                            label=\"Site Description\"\n                            type=\"textarea\"\n                            value={siteDesc}\n                            onChange={(e) => {\n                                let siteDesc = e.target.value;\n                                setSiteDesc(siteDesc);\n                                setSuccessMsg('');\n                            }}\n                        />\n                        \n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{ margin: 'auto' }}>\n                        \n                        <InputLabel htmlFor=\"siteImg\" style={{ width: '100%', textAlign: 'left' }}>Site Image</InputLabel>\n                        <Upload name=\"siteImg\" handleImage={handleImage} defaultV={`/${defaultSiteImg}`}/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <MDBInput\n                            label=\"Primary Email\"\n                            type=\"text\"\n                            value={email}\n                            onChange={(e) => {\n                                let email = e.target.value;\n                                setEmail(email);\n                                setSuccessMsg('');\n                            }}\n                        />\n                    </MDBCol>\n                    <MDBCol md=\"6\">\n                        <MDBInput\n                            label=\"Secondary Email\"\n                            type=\"text\"\n                            value={email1}\n                            onChange={(e) => {\n                                let email1 = e.target.value;\n                                setEmail1(email1);\n                                setSuccessMsg('');\n                            }}\n                        />\n\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <MDBInput\n                            label=\"Primary Phone\"\n                            type=\"text\"\n                            value={phone}\n                            onChange={(e) => {\n                                let phone = e.target.value;\n                                setPhone(phone);\n                                setSuccessMsg('');\n                            }}\n                        />\n\n                    </MDBCol>\n                    <MDBCol md=\"6\">\n                        <MDBInput\n                            label=\"Office hours\"\n                            type=\"text\"\n                            value={officeHours}\n                            onChange={(e) => {\n                                let officeHours = e.target.value;\n                                setOfficeHours(officeHours);\n                                setSuccessMsg('');\n                            }}\n                        />\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <MDBInput\n                            label=\"Address\"\n                            type=\"text\"\n                            value={address}\n                            onChange={(e) => {\n                                let address = e.target.value;\n                                setAddress(address);\n                                setSuccessMsg('');\n                            }}\n                        />\n\n                    </MDBCol>\n                    <MDBCol md=\"6\">\n                        <MDBInput\n                            label=\"Address 2\"\n                            type=\"text\"\n                            value={address1}\n                            onChange={(e) => {\n                                let address1 = e.target.value;\n                                setAddress1(address1);\n                                setSuccessMsg('');\n                            }}\n                        />\n\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{ margin: 'auto' }}>\n                        <MDBInput\n                            label=\"Work Process Text\"\n                            type=\"textarea\"\n                            value={quoteText}\n                            onChange={(e) => {\n                                let quoteText = e.target.value;\n                                setQuoteText(quoteText);\n                                setSuccessMsg('');\n                            }}\n                        />\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{ margin: 'auto' }}>\n                        <MDBInput\n                            label=\"Get Started Link\"\n                            type=\"text\"\n                            value={quoteLink}\n                            onChange={(e) => {\n                                let quoteLink = e.target.value;\n                                setQuoteLink(quoteLink);\n                                setSuccessMsg('');\n                            }}\n                        />\n                        \n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{ margin: 'auto' }}>\n                        <MDBInput\n                            label=\"Contact Text\"\n                            type=\"textarea\"\n                            value={contactText}\n                            onChange={(e) => {\n                                let contactText = e.target.value;\n                                setContactText(contactText);\n                                setSuccessMsg('');\n                            }}\n                        />\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{ margin: 'auto' }}>\n                        <MDBInput\n                            label=\"Contact Description\"\n                            type=\"textarea\"\n                            value={contactDesc}\n                            onChange={(e) => {\n                                let contactDesc = e.target.value;\n                                setContactDesc(contactDesc);\n                                setSuccessMsg('');\n                            }}\n                        />\n                        \n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{ margin: 'auto' }}>\n                        <MDBInput\n                            label=\"Whatsapp Address\"\n                            type=\"text\"\n                            value={whatsapp}\n                            onChange={(e) => {\n                                let whatsapp = e.target.value;\n                                setWhatsapp(whatsapp);\n                                setSuccessMsg('');\n                            }}\n                        />\n                        \n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{textAlign:'center'}}>\n                        <p style={{textAlign:'center',backgroundColor:'green', color:'white'}} >{successMsg}</p>\n                    </MDBCol>\n                </MDBRow>\n                <div className=\"text-center mt-4\">\n                    <MDBBtn color=\"info\" outline type=\"submit\">\n                        Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n                    </MDBBtn>\n                </div>\n            </form>\n\n        </MDBContainer>\n    );\n};\n\nexport default FormPage;","import React, { useState, useEffect } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport './editor.css';\r\nimport { Modal } from 'antd';\r\nimport Upload from './Upload';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst Slide = () => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [slide, setSlide] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [edittitle, setEditTitle] = useState('');\r\n    const [editimage, seteditImage] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n    const [defaultimage, setDefaultImage] = useState(undefined);\r\n\r\n    const [descModal, setdescModal] = useState(false);\r\n    const [descModalDetails] = useState('');\r\n    const [successMsg, setSuccessMsg] = useState('');\r\n    useEffect(() => {\r\n        fetchSlideData();\r\n    }, []);\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('title', title);\r\n        data.append('file', image);\r\n        if(!image || !title){\r\n            alert(\"Please enter title and image!\");\r\n        }else{\r\n            fetch('/slide', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchSlideData();\r\n                    setSuccessMsg(\"Successfully saved!\");\r\n                }\r\n            })\r\n            .catch(() => {\r\n                console.log('Please check your connection');\r\n            })\r\n        }        \r\n    }\r\n    const descModalHandleCancel = () => {\r\n        setdescModal(false)\r\n    }\r\n    const handleImage = (file) => {\r\n        setSuccessMsg('');\r\n        setImage(file);\r\n    }\r\n    const imageSelectedEditHandler = (file) => {\r\n        seteditImage(file)\r\n    }\r\n    const fetchSlideData = () => {\r\n\r\n        setImage('');\r\n\r\n        setTitle('');\r\n        fetch(`/slide`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setSlide(res.result)\r\n            })\r\n            .catch(() => {\r\n                console.log('Please check your internet connection..!');\r\n            })\r\n    }\r\n    const edit = (id) => {\r\n        let editableArrary = slide.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', title = '', image = '' } = editable;\r\n        setId(_id);\r\n        setEditTitle(title);\r\n        setDefaultImage(image);\r\n        setVisible(!visible);\r\n    }\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        let data = new FormData();\r\n        data.append('title', edittitle);\r\n        if(edittitle === ''){\r\n            alert('Please enter the title!');\r\n        }\r\n        if (editimage !== '') {\r\n            data.append('file', editimage);\r\n        } else {\r\n            data.append('file', image);\r\n        }\r\n            fetch(`/slide/${id}`, {\r\n            method: 'PATCH',\r\n            body: data,\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                setId('');\r\n\r\n                setEditTitle('');\r\n\r\n                seteditImage('');\r\n                setVisible(!visible);\r\n                fetchSlideData();\r\n            }\r\n        })\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n        fetch(`/slide/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'content-type': 'application/json' }\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchSlideData();\r\n                }\r\n            })\r\n    }\r\n    const showDeleteConfirm = (id) => {\r\n        confirm({\r\n            title: 'Do you Want to delete this item?',\r\n            onOk() {\r\n                deleteHandler(id);\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel', id);\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <MDBContainer className=\"text-center\">\r\n            <p className=\"h4 text-center mb-4\">Dashboard Background Images</p>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                                    <form onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                        <MDBRow>\r\n                                            <MDBCol md=\"12\">\r\n                                                <MDBInput\r\n                                                    label=\"Title\"\r\n                                                    type=\"text\"\r\n                                                    value={title}\r\n                                                    onChange={(e) => {\r\n                                                        setTitle(e.target.value);\r\n                                                        setSuccessMsg('');\r\n                                                    }}\r\n                                                />\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                \r\n                                        \r\n                                        <MDBRow>\r\n                                            <MDBCol md=\"12\">\r\n                                                <InputLabel htmlFor=\"backgroundimage\" style={{ width: '100%', textAlign: 'left' }}>Image</InputLabel>\r\n                                                <Upload name=\"backgroundimage\" handleImage={handleImage} />\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                        <MDBRow>\r\n                                            <MDBCol md=\"12\" style={{textAlign:'center'}}>\r\n                                                <p style={{textAlign:'center',backgroundColor:'green', color:'white'}} >{successMsg}</p>\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                        <div className=\"text-center mt-4\">\r\n                                            <MDBBtn color=\"info\" outline type=\"submit\">\r\n                                                Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\r\n                                            </MDBBtn>\r\n                                        </div>\r\n                                    </form>\r\n                                </MDBCol>\r\n                <MDBCol md=\"6\">\r\n                    <MDBTable style={{ marginTop: '25px', }}>\r\n                        <MDBTableHead >\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Title</th>\r\n       \r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {\r\n                                slide.length ?\r\n                                    slide.map(item => {\r\n                                        return (\r\n                                            <tr key={item._id}>\r\n                                                <td>\r\n                                                    <img\r\n                                                        width={50}\r\n                                                        alt={item.title}\r\n                                                        src={`/${item.image}`}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>{item.title}</td>\r\n                                                \r\n                                                <td>\r\n                                                    <DeleteForeverIcon onClick={() => showDeleteConfirm(item._id)} />\r\n                                                    <EditIcon onClick={() => edit(item._id)} />\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                    : null\r\n                            }\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Edit\"\r\n                onOk={handleEdit}\r\n                onCancel={() => { setVisible(!visible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Title\"\r\n                                type=\"text\"\r\n                                value={edittitle}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setEditTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <Upload handleImage={imageSelectedEditHandler} defaultV={`/${defaultimage}`} />\r\n                            {/* <input\r\n                                type='file'\r\n                                onChange={imageSelectedEditHandler}\r\n                            /> */}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Description\"\r\n                visible={descModal}\r\n                footer={null}\r\n                onCancel={descModalHandleCancel}\r\n            >\r\n                <p>{descModalDetails.description}</p>\r\n            </Modal>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default Slide;","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol,MDBInput} from 'mdbreact';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport './editor.css';\r\nimport { Modal } from 'antd';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst { confirm } = Modal;\r\nconst useStyles = makeStyles(theme => ({\r\n    divider: {\r\n      margin: theme.spacing(2, 0),\r\n    },\r\n    root: {\r\n        width: '100%',\r\n      },\r\n    tablecontainer: {\r\n        maxHeight: 600,\r\n      },\r\n  }));\r\n\r\nconst ManageSector = () => {\r\n    const classes = useStyles();\r\n\r\n    const [sector, setSector] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [manageSector, setManageSector] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [editsector, setEditSector] = useState('');\r\n    const [edittitle, setEditTitle] = useState('');\r\n    const [addNewDepartmentVisible, setAddNewDepartmentVisible]=useState(false);\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n    const [addNewSubcategoryVisible, setAddNewSubcategoryVisible]=useState(false);\r\n    const [addNewModelVisible, setAddNewModelVisible]=useState(false);\r\n    const [addNewBrandVisible, setAddNewBrandVisible]=useState(false);\r\n    const [editDepartmentVisible, setEditDepartmentVisible]=useState(false);\r\n    const [editCategoryVisible, setEditCategoryVisible]=useState(false);\r\n    const [editSubcategoryVisible, setEditSubcategoryVisible]=useState(false);\r\n    const [editModelVisible, setEditModelVisible]=useState(false);\r\n    const [editBrandVisible, setEditBrandVisible]=useState(false);\r\n\r\n    const [parentId, setParentId]=useState('0');\r\n    const [editParentId, setEditParentId]=useState('0');\r\n    const [grandparentId,setGrandparentId]=useState('0');\r\n    const [editGrandparentId, setEditGrandparentId]=useState('0');\r\n    const [product, setProduct]=useState('');\r\n    useEffect(() => {\r\n        fetchManageSectorData();\r\n        fetchProductsHandler();\r\n    }, []);\r\n\r\n    const addNewDepartmentHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('title', title);\r\n        data.append('sector', 'Department');\r\n        data.append('parentId','0');\r\n        fetch('/managesector', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchManageSectorData();\r\n                    setAddNewDepartmentVisible(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your connection');\r\n            })\r\n    }\r\n    const addNewCategoryHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('title', title);\r\n        data.append('sector', 'Category');\r\n        data.append('parentId',parentId);\r\n        fetch('/managesector', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchManageSectorData();\r\n                    setAddNewCategoryVisible(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your connection');\r\n            })\r\n    }\r\n    \r\n    const addNewSubcategoryHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('title', title);\r\n        data.append('sector', 'Subcategory');\r\n        data.append('parentId',parentId);\r\n        fetch('/managesector', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchManageSectorData();\r\n                    setAddNewSubcategoryVisible(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your connection');\r\n            })\r\n    }\r\n    const fetchManageSectorData = () => {\r\n        setSector('');\r\n        setTitle('');\r\n        setParentId('0');\r\n        fetch(`/managesector`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setManageSector(res.result)\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your internet connection..!');\r\n            })\r\n    }\r\n    const addNewBrandHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('title', title);\r\n        data.append('sector', 'Brand');\r\n        data.append('parentId','0');\r\n        fetch('/managesector', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchManageSectorData();\r\n                    setAddNewBrandVisible(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your connection');\r\n            })\r\n    }\r\n    const addNewModelHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('title', title);\r\n        data.append('sector', 'Model');\r\n        data.append('parentId',parentId);\r\n        fetch('/managesector', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchManageSectorData();\r\n                    setAddNewModelVisible(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your connection');\r\n            })\r\n    }\r\n    const editDepartment = (id) => {\r\n        let editableArrary = manageSector.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', title = '', sector = '' } = editable;\r\n        setId(_id);\r\n        setEditSector(sector);\r\n        setEditTitle(title);\r\n        setEditDepartmentVisible(!editDepartmentVisible);\r\n    }\r\n    const editCategory = (id) => {\r\n        let editableArrary = manageSector.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', title = '', sector = '', parentId='' } = editable;\r\n        setId(_id);\r\n        setEditSector(sector);\r\n        setEditTitle(title);\r\n        setEditParentId(parentId);\r\n        setEditCategoryVisible(!editCategoryVisible);\r\n    }\r\n    const editSubcategory = (id) => {\r\n        let manageSector1=manageSector;\r\n        let editableArrary = manageSector.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', title = '', sector = '', parentId='' } = editable;\r\n        let editableArrary1 = manageSector1.filter(item => item._id === parentId);\r\n        console.log(editableArrary1[0].parentId);\r\n        const idd='0';\r\n        if(editableArrary1.length!==0){\r\n            setEditGrandparentId(editableArrary1[0].parentId);\r\n        }else{\r\n            setEditGrandparentId(idd);\r\n        }\r\n        setId(_id);\r\n        setEditSector(sector);\r\n        setEditTitle(title);\r\n        setEditParentId(parentId);\r\n\r\n        setEditSubcategoryVisible(!editSubcategoryVisible);\r\n    }\r\n    const editBrand = (id) => {\r\n        let editableArrary = manageSector.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', title = '', sector = '' } = editable;\r\n        setId(_id);\r\n        setEditSector(sector);\r\n        setEditTitle(title);\r\n        setEditBrandVisible(!editBrandVisible);\r\n    }\r\n    const editModel = (id) => {\r\n        let editableArrary = manageSector.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', title = '', sector = '', parentId='' } = editable;\r\n        setId(_id);\r\n        setEditSector(sector);\r\n        setEditTitle(title);\r\n        setEditParentId(parentId);\r\n        setEditModelVisible(!editModelVisible);\r\n    }\r\n\r\n    const editDepartmentHandler = (e) => {\r\n        e.preventDefault()\r\n        let data = new FormData();\r\n        data.append('title', edittitle);\r\n        data.append('sector', 'Department');\r\n        data.append('parentId','0');\r\n        fetch(`/managesector/${id}`, {\r\n            method: 'PATCH',\r\n            body: data,\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                setId('');\r\n                setEditSector('');\r\n                setEditTitle('');\r\n                setEditDepartmentVisible(!editDepartmentVisible);\r\n                fetchManageSectorData();\r\n            }\r\n        })\r\n    }\r\n    const editCategoryHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('title', edittitle);\r\n        data.append('sector', 'Category');\r\n        data.append('parentId',editParentId);\r\n        fetch(`/managesector/${id}`, {\r\n            method: 'PATCH',\r\n            body: data,\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                setId('');\r\n                setEditSector('');\r\n                setEditTitle('');\r\n                setEditParentId('0');\r\n                setEditCategoryVisible(!editCategoryVisible);\r\n                fetchManageSectorData();\r\n            }\r\n        })\r\n    }\r\n    const editSubcategoryHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('title', edittitle);\r\n        data.append('sector', 'Subcategory');\r\n        data.append('parentId',editParentId);\r\n        fetch(`/managesector/${id}`, {\r\n            method: 'PATCH',\r\n            body: data,\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                setId('');\r\n                setEditSector('');\r\n                setEditTitle('');\r\n                setEditParentId('0');\r\n                setEditGrandparentId('0');\r\n                setEditSubcategoryVisible(!editSubcategoryVisible);\r\n                fetchManageSectorData();\r\n            }\r\n        })\r\n    }\r\n    const editBrandHandler = (e) => {\r\n        e.preventDefault()\r\n        let data = new FormData();\r\n        data.append('title', edittitle);\r\n        data.append('sector', 'Brand');\r\n        data.append('parentId','0');\r\n        fetch(`/managesector/${id}`, {\r\n            method: 'PATCH',\r\n            body: data,\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                setId('');\r\n                setEditSector('');\r\n                setEditTitle('');\r\n                setEditBrandVisible(!editBrandVisible);\r\n                fetchManageSectorData();\r\n            }\r\n        })\r\n    }\r\n    const editModelHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('title', edittitle);\r\n        data.append('sector', 'Model');\r\n        data.append('parentId',editParentId);\r\n        fetch(`/managesector/${id}`, {\r\n            method: 'PATCH',\r\n            body: data,\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                setId('');\r\n                setEditSector('');\r\n                setEditTitle('');\r\n                setEditParentId('0');\r\n                setEditModelVisible(!editModelVisible);\r\n                fetchManageSectorData();\r\n            }\r\n        })\r\n    }\r\n    const deleteHandler = (id) => {\r\n        fetch(`/managesector/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'content-type': 'application/json' }\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchManageSectorData();\r\n                }\r\n            })\r\n    }\r\n    const fetchProductsHandler = () => {\r\n        fetch(`/product`)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            setProduct(res.result);\r\n          })\r\n          .catch(error => {\r\n            console.log(\"Please check your internet connection..!\", error);\r\n          });\r\n    };\r\n    \r\n    const showDeleteDepartmentConfirm = (id) => {\r\n        confirm({\r\n            title: 'Do you want to delete this department?',\r\n            onOk() {\r\n                let usingdep = product.filter(item=>item.department===id);\r\n                let usingsubcategory = manageSector.filter(item=>item.sector==='Category'&&item.parentId===id);\r\n                if(usingdep.length>0||usingsubcategory.length>0){\r\n                    alert(\"This department is in use. Please delete all dependencies and try again!\");\r\n                }else{\r\n                    deleteHandler(id);\r\n                }\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel', id);\r\n            },\r\n        });\r\n    }\r\n    const showDeleteCategoryConfirm = (id) => {\r\n        confirm({\r\n            title: 'Do you want to delete this category?',\r\n            onOk() {\r\n                let usingcat = product.filter(item=>item.category===id);\r\n                let usingsubcategory = manageSector.filter(item=>item.sector==='Subcategory' && item.parentId===id);\r\n                if(usingcat.length>0||usingsubcategory.length>0){\r\n                    alert(\"This category is in use. Please delete all dependencies and try again!\");\r\n                }else{\r\n                    deleteHandler(id);\r\n                }\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel', id);\r\n            },\r\n        });\r\n    }\r\n    const showDeleteSubcategoryConfirm = (id) => {\r\n        confirm({\r\n            title: 'Do you want to delete this sub_category?',\r\n            onOk() {\r\n                let usingsubcat = product.filter(item=>item.subCategory===id);\r\n                if(usingsubcat.length>0){\r\n                    alert(\"This sub_category is in use. Please delete all dependencies and try again!\");\r\n                }else{\r\n                    deleteHandler(id);\r\n                }\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel', id);\r\n            },\r\n        });\r\n    }\r\n    const showDeleteBrandConfirm = (id) => {\r\n        confirm({\r\n            title: 'Do you want to delete this item?',\r\n            onOk() {\r\n                let usingmod = product.filter(item=>item.model===id);\r\n                let usingsubcategory = manageSector.filter(item=>item.sector==='Model'&&item.parentId===id);\r\n                if(usingmod.length>0||usingsubcategory.length>0){\r\n                    alert(\"This item is in use. Please delete all dependencies and try again!\");\r\n                }else{\r\n                    deleteHandler(id);\r\n                }\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel', id);\r\n            },\r\n        });\r\n    }\r\n    const showDeleteModelConfirm = (id) => {\r\n        confirm({\r\n            title: 'Do you want to delete this item?',\r\n            onOk() {\r\n                let usingbra = product.filter(item=>item.brand===id);\r\n                if(usingbra.length>0){\r\n                    alert(\"This item is in use. Please delete all dependencies and try again!\");\r\n                }else{\r\n                    deleteHandler(id);\r\n                }\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel', id);\r\n            },\r\n        });\r\n    }\r\n    const addNewDepartment=()=>{\r\n        setAddNewDepartmentVisible(true);\r\n    }\r\n    const addNewCategory=()=>{\r\n        setAddNewCategoryVisible(true);\r\n    }\r\n    const addNewModel=()=>{\r\n        setAddNewModelVisible(true);\r\n    }\r\n    const addNewBrand=()=>{\r\n        setAddNewBrandVisible(true);\r\n    }\r\n    const addNewSubcategory=()=>{\r\n        setAddNewSubcategoryVisible(true);\r\n    }\r\n    return (\r\n        <MDBContainer className=\"text-center\">\r\n            <p className=\"h4 text-center mb-4\">Sector Management</p>\r\n\r\n            <MDBRow>\r\n                <MDBCol md=\"4\">\r\n                    <MDBRow>\r\n                        <label style={{fontWeight:'bold'}}>&nbsp;&nbsp;&nbsp;&nbsp;Department List</label>\r\n                    </MDBRow>\r\n                    <MDBRow style={{paddingLeft:'75%'}}>\r\n                        <a style={{color:'blue'}} onClick={addNewDepartment}>+add new</a>\r\n                    </MDBRow>\r\n                    <TableContainer className={classes.tablecontainer}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    \r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Level</TableCell>\r\n                                    <TableCell>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Department').map(item => {\r\n                                            return (\r\n                                                <TableRow key={item._id}>\r\n\r\n                                                    <TableCell>{item.title}</TableCell>\r\n                                                    <TableCell>{item.sector}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <DeleteForeverIcon onClick={() => showDeleteDepartmentConfirm(item._id)} />\r\n                                                        <EditIcon onClick={() => editDepartment(item._id)} />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                    <MDBRow>\r\n                        <label style={{fontWeight:'bold'}}>&nbsp;&nbsp;&nbsp;&nbsp;Category List</label>\r\n                    </MDBRow>\r\n                    <MDBRow style={{paddingLeft:'75%'}}>\r\n                        <a style={{color:'blue'}} onClick={addNewCategory}>+add new</a>\r\n                    </MDBRow>\r\n                    <TableContainer className={classes.tablecontainer}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    \r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Department</TableCell>\r\n                                    <TableCell>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Category').map(item => {\r\n                                            let dep=manageSector.filter(item1=>item1.sector==='Department'&& item1._id===item.parentId);\r\n                                            return (\r\n                                                <TableRow key={item._id}>\r\n\r\n                                                    <TableCell>{item.title}</TableCell>\r\n                                                    <TableCell>{dep[0].title}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <DeleteForeverIcon onClick={() => showDeleteCategoryConfirm(item._id)} />\r\n                                                        <EditIcon onClick={() => editCategory(item._id)} />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                    <MDBRow>\r\n                        <label style={{fontWeight:'bold'}}>&nbsp;&nbsp;&nbsp;&nbsp;Subcategory List</label>\r\n                    </MDBRow>\r\n                    <MDBRow style={{paddingLeft:'75%'}}>\r\n                        <a style={{color:'blue'}} onClick={addNewSubcategory}>+add new</a>\r\n                    </MDBRow>\r\n                    <TableContainer className={classes.tablecontainer}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    \r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Category</TableCell>\r\n                                    <TableCell>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Subcategory').map(item => {\r\n                                            let cat=manageSector.filter(item2=>item2.sector==='Category'&&item2._id===item.parentId);\r\n                                            return (\r\n                                                <TableRow key={item._id}>\r\n\r\n                                                    <TableCell>{item.title}</TableCell>\r\n                                                    <TableCell>{cat[0].title}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <DeleteForeverIcon onClick={() => showDeleteSubcategoryConfirm(item._id)} />\r\n                                                        <EditIcon onClick={() => editSubcategory(item._id)} />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow>\r\n                <divider></divider>\r\n            </MDBRow>\r\n            <MDBRow>\r\n                <MDBCol md=\"4\">\r\n                    <MDBRow>\r\n                        <label style={{fontWeight:'bold'}}>&nbsp;&nbsp;&nbsp;&nbsp;Brand List</label>\r\n                    </MDBRow>\r\n                    <MDBRow style={{paddingLeft:'75%'}}>\r\n                        <a style={{color:'blue'}} onClick={addNewBrand}>+add new</a>\r\n                    </MDBRow>\r\n                    <TableContainer className={classes.tablecontainer}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    \r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Level</TableCell>\r\n                                    <TableCell>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Brand').map(item => {\r\n                                            return (\r\n                                                <TableRow key={item._id}>\r\n\r\n                                                    <TableCell>{item.title}</TableCell>\r\n                                                    <TableCell>{item.sector}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <DeleteForeverIcon onClick={() => showDeleteBrandConfirm(item._id)} />\r\n                                                        <EditIcon onClick={() => editBrand(item._id)} />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                    <MDBRow>\r\n                        <label style={{fontWeight:'bold'}}>&nbsp;&nbsp;&nbsp;&nbsp;Model List</label>\r\n                    </MDBRow>\r\n                    <MDBRow style={{paddingLeft:'75%'}}>\r\n                        <a style={{color:'blue'}} onClick={addNewModel}>+add new</a>\r\n                    </MDBRow>\r\n                    <TableContainer className={classes.tablecontainer}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    \r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Brand</TableCell>\r\n                                    <TableCell>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Model').map(item => {\r\n                                            let dep=manageSector.filter(item1=>item1.sector==='Brand'&& item1._id===item.parentId);\r\n                                            return (\r\n                                                <TableRow key={item._id}>\r\n\r\n                                                    <TableCell>{item.title}</TableCell>\r\n                                                    <TableCell>{dep[0].title}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <DeleteForeverIcon onClick={() => showDeleteModelConfirm(item._id)} />\r\n                                                        <EditIcon onClick={() => editModel(item._id)} />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            \r\n            <Modal\r\n                visible={addNewDepartmentVisible}\r\n                title=\"Add new department\"\r\n                onOk={addNewDepartmentHandler}\r\n                onCancel={() => { setAddNewDepartmentVisible(!addNewDepartmentVisible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Department Name\"\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    \r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={editDepartmentVisible}\r\n                title=\"Edit Department\"\r\n                onOk={editDepartmentHandler}\r\n                onCancel={() => { setEditDepartmentVisible(!editDepartmentVisible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Department Name\"\r\n                                type=\"text\"\r\n                                value={edittitle}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setEditTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={addNewCategoryVisible}\r\n                title=\"Add new Category\"\r\n                onOk={addNewCategoryHandler}\r\n                onCancel={() => { setAddNewCategoryVisible(!addNewCategoryVisible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md={12}>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"ca\" style={{ width: '100%', textAlign: 'left' }}>Department</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={parentId}\r\n                                    onChange={(e) => {\r\n                                        setParentId(e.target.value);\r\n\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'ca',\r\n                                        id: 'ca',\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Department').map(item => {\r\n                                            return (\r\n                                                <MenuItem value={item._id}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Category Name\"\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    \r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={editCategoryVisible}\r\n                title=\"Edit Category\"\r\n                onOk={editCategoryHandler}\r\n                onCancel={() => { setEditCategoryVisible(!editCategoryVisible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBCol md={12}>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"caa\" style={{ width: '100%', textAlign: 'left' }}>Department</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={editParentId}\r\n                                    onChange={(e) => {\r\n                                        setEditParentId(e.target.value);\r\n\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'caa',\r\n                                        id: 'caa',\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Department').map(item => {\r\n                                            return (\r\n                                                <MenuItem value={item._id}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                    \r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Category Name\"\r\n                                type=\"text\"\r\n                                value={edittitle}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setEditTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={addNewSubcategoryVisible}\r\n                title=\"Add new Subcategory\"\r\n                onOk={addNewSubcategoryHandler}\r\n                onCancel={() => { setAddNewSubcategoryVisible(!addNewSubcategoryVisible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md={12}>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"ca1\" style={{ width: '100%', textAlign: 'left' }}>Department</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={grandparentId}\r\n                                    onChange={(e) => {\r\n                                        setGrandparentId(e.target.value);\r\n\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'ca1',\r\n                                        id: 'ca1',\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Department').map(item => {\r\n                                            return (\r\n                                                <MenuItem value={item._id}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                        \r\n                        <MDBCol md={12}>\r\n                            <br></br>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"ca2\" style={{ width: '100%', textAlign: 'left' }}>Category</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={parentId}\r\n                                    onChange={(e) => {\r\n                                        setParentId(e.target.value);\r\n\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'ca2',\r\n                                        id: 'ca2',\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                    manageSector.length && grandparentId?\r\n                                        manageSector.filter(item=>item.sector==='Category'&& item.parentId===grandparentId).map(item => {\r\n                                            return (\r\n                                                <MenuItem value={item._id}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Subcategory Name\"\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    \r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={editSubcategoryVisible}\r\n                title=\"Edit Subcategory\"\r\n                onOk={editSubcategoryHandler}\r\n                onCancel={() => { setEditSubcategoryVisible(!editSubcategoryVisible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md={12}>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"ca11\" style={{ width: '100%', textAlign: 'left' }}>Department</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={editGrandparentId}\r\n                                    onChange={(e) => {\r\n                                        setEditGrandparentId(e.target.value);\r\n\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'ca11',\r\n                                        id: 'ca11',\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Department').map(item => {\r\n                                            return (\r\n                                                <MenuItem value={item._id}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                        \r\n                        <MDBCol md={12}>\r\n                            <br></br>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"ca22\" style={{ width: '100%', textAlign: 'left' }}>Category</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={editParentId}\r\n                                    onChange={(e) => {\r\n                                        setEditParentId(e.target.value);\r\n\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'ca22',\r\n                                        id: 'ca22',\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                    manageSector.length && editGrandparentId?\r\n                                        manageSector.filter(item=>item.sector==='Category'&& item.parentId===editGrandparentId).map(item => {\r\n                                            return (\r\n                                                <MenuItem value={item._id}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Subcategory Name\"\r\n                                type=\"text\"\r\n                                value={edittitle}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setEditTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    \r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={addNewBrandVisible}\r\n                title=\"Add new Brand\"\r\n                onOk={addNewBrandHandler}\r\n                onCancel={() => { setAddNewBrandVisible(!addNewBrandVisible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Brand Name\"\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    \r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={editBrandVisible}\r\n                title=\"Edit Brand\"\r\n                onOk={editBrandHandler}\r\n                onCancel={() => { setEditBrandVisible(!editBrandVisible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Brand Name\"\r\n                                type=\"text\"\r\n                                value={edittitle}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setEditTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={addNewModelVisible}\r\n                title=\"Add new Model\"\r\n                onOk={addNewModelHandler}\r\n                onCancel={() => { setAddNewModelVisible(!addNewModelVisible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md={12}>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"mod\" style={{ width: '100%', textAlign: 'left' }}>Brand</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={parentId}\r\n                                    onChange={(e) => {\r\n                                        setParentId(e.target.value);\r\n\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'mod',\r\n                                        id: 'mod',\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Brand').map(item => {\r\n                                            return (\r\n                                                <MenuItem value={item._id}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Model Name\"\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    \r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={editModelVisible}\r\n                title=\"Edit Model\"\r\n                onOk={editModelHandler}\r\n                onCancel={() => { setEditModelVisible(!editModelVisible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBCol md={12}>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"model1\" style={{ width: '100%', textAlign: 'left' }}>Brand</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={editParentId}\r\n                                    onChange={(e) => {\r\n                                        setEditParentId(e.target.value);\r\n\r\n                                    }}\r\n                                    inputProps={{\r\n                                        name: 'model1',\r\n                                        id: 'model1',\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                    manageSector.length ?\r\n                                        manageSector.filter(item=>item.sector==='Brand').map(item => {\r\n                                            return (\r\n                                                <MenuItem value={item._id}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                    \r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Model Name\"\r\n                                type=\"text\"\r\n                                value={edittitle}\r\n                                onChange={(e) => {\r\n                                    let title = e.target.value;\r\n                                    setEditTitle(title);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                </form>\r\n            </Modal>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default ManageSector;","import React, { useState, useEffect } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { Modal } from 'antd';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst Quote = () => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [quote, setQuote] = useState('');\r\n\r\n    const [id, setId] = useState('');\r\n    const [editname, setEditName] = useState('');\r\n    const [editdes, setEditDes] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const [descModal, setdescModal] = useState(false);\r\n    const [descModalDetails, setdescModalDetails] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('name', name);\r\n        data.append('description', description);\r\n        fetch('/quote', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchQuoteData()\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your connection');\r\n            })\r\n    }\r\n\r\n    const descModalHandleCancel = () => {\r\n        setdescModal(false)\r\n    }\r\n    const edit = (id) => {\r\n        let editableArrary = quote.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', description = '', name = '' } = editable;\r\n        setId(_id);\r\n        setEditName(name);\r\n        setEditDes(description);\r\n        setVisible(!visible);\r\n    }\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        let data = new FormData();\r\n        data.append('name', editname);\r\n        data.append('description', editdes);\r\n        fetch(`/quote/${id}`, {\r\n            method: 'PATCH',\r\n            body: data,\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                setId('');\r\n                setEditName('');\r\n                setEditDes('');\r\n                setVisible(!visible);\r\n                fetchQuoteData();\r\n            }\r\n        })\r\n    }\r\n    const fetchQuoteData = () => {\r\n        setDescription('');\r\n        setName('');\r\n        fetch(`/quote`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setQuote(res.result)\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your connection..!');\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        fetchQuoteData();\r\n    }, []);\r\n    const deleteHandler = (id) => {\r\n        fetch(`/quote/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'content-type': 'application/json' }\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchQuoteData();\r\n                }\r\n            })\r\n    }\r\n    const showDeleteConfirm = (id) => {\r\n        confirm({\r\n            title: 'Do you Want to delete this item?',\r\n            onOk() {\r\n                deleteHandler(id);\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel', id);\r\n            },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <MDBContainer>\r\n            <p className=\"h4 text-center mb-4\">Quote</p>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form onSubmit={submitHandler} encType='multipart/form-data'>\r\n\r\n                        <MDBRow>\r\n                            <MDBCol md=\"12\">\r\n                                <MDBInput\r\n                                    value={description}\r\n                                    onChange={(e) => {\r\n                                        setDescription(e.target.value);\r\n                                    }}\r\n                                    type=\"textarea\" label=\" Text\" rows=\"3\" />\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                            <MDBCol md=\"12\">\r\n                                <MDBInput\r\n                                    label=\"Link\"\r\n                                    type=\"text\"\r\n                                    value={name}\r\n                                    onChange={(e) => {\r\n                                        setName(e.target.value);\r\n                                    }}\r\n                                />\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <div className=\"text-center mt-4\">\r\n                            <MDBBtn color=\"info\" outline type=\"submit\">\r\n                                Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\r\n                            </MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n                <MDBCol md=\"12\">\r\n                    <MDBTable style={{ marginTop: '25px', }}>\r\n                        <MDBTableHead >\r\n                            <tr>                            \r\n                                <th>Text</th>\r\n                                <th>Link</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {\r\n                                quote.length ?\r\n                                    quote.map(item => {\r\n                                        return (\r\n                                            <tr key={item._id}>\r\n                                                <td onClick={() => {\r\n                                                    setdescModalDetails(item)\r\n                                                    setdescModal(true)\r\n                                                }}>{item.description.substring(0, 15)}</td>\r\n                                                <td>{item.name}</td>\r\n                                                <td>\r\n                                                    <DeleteForeverIcon onClick={() => showDeleteConfirm(item._id)} />\r\n                                                    <EditIcon onClick={() => edit(item._id)} />\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                    : null\r\n                            }\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Edit\"\r\n                onOk={handleEdit}\r\n                onCancel={() => { setVisible(!visible) }}\r\n            >\r\n                <form onSubmit={submitHandler} encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                type=\"textarea\"\r\n                                label=\"Text\"\r\n                                rows=\"3\"\r\n                                value={editdes}\r\n                                onChange={(e) => {\r\n                                    setEditDes(e.target.value);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Link\"\r\n                                type=\"text\"\r\n                                value={editname}\r\n                                onChange={(e) => {\r\n                                    setEditName(e.target.value);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Text\"\r\n                visible={descModal}\r\n                footer={null}\r\n                onCancel={descModalHandleCancel}\r\n            >\r\n                <p>{descModalDetails.description}</p>\r\n            </Modal>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default Quote;","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport './editor.css';\r\nimport { Modal } from 'antd';\r\nimport Upload from './Upload';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst Setting = () => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [des, setDes] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [setting, setSetting] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [edittitle, setEditTitle] = useState('');\r\n    const [editdes, setEditDes] = useState('');\r\n    const [editimage, seteditImage] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n    const [defaultimage, setDefaultImage] = useState(undefined);\r\n\r\n    const [descModal, setdescModal] = useState(false);\r\n    const [descModalDetails, setdescModalDetails] = useState('');\r\n    const [successMsg, setSuccessMsg] = useState('');\r\n    useEffect(() => {\r\n        fetchSettingData();\r\n    }, []);\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('title', 'sociallink');\r\n        data.append('description', des);\r\n        data.append('file', image);\r\n        if(!image){\r\n            alert(\"Please enter an icon image!\");\r\n        }else{\r\n            fetch('/setting', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchSettingData();\r\n                    setSuccessMsg(\"Successfully saved!\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your connection');\r\n            })\r\n        }\r\n    }\r\n    const descModalHandleCancel = () => {\r\n        setdescModal(false)\r\n    }\r\n    const handleImage = (file) => {\r\n        setImage(file);\r\n        setSuccessMsg('');\r\n    }\r\n    const imageSelectedEditHandler = (file) => {\r\n        seteditImage(file)\r\n    }\r\n    const fetchSettingData = () => {\r\n        setDes('');\r\n        setImage('');\r\n        setTitle('');\r\n        fetch(`/setting`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                let socialarray =[];\r\n                if(!!res.result){\r\n                    let mixdata = res.result;\r\n                    for (var i = mixdata.length - 1; i >= 0; i--) {\r\n                        if(mixdata[i].title === 'sociallink') socialarray.push(mixdata[i]);\r\n                    }\r\n                }\r\n                setSetting(socialarray);\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your internet connection..!');\r\n            })\r\n    }\r\n    const edit = (id) => {\r\n        let editableArrary = setting.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', description = '',  image = '' } = editable;\r\n        setId(_id);\r\n        setEditTitle(title);\r\n        setDefaultImage(image);\r\n        setEditDes(description);\r\n        setVisible(!visible);\r\n    }\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        let data = new FormData();\r\n        data.append('title', 'sociallink');\r\n        data.append('description', editdes);\r\n        if (editimage !== '') {\r\n            data.append('file', editimage);\r\n        } else {\r\n            data.append('file', image);\r\n        }\r\n            fetch(`/setting/${id}`, {\r\n            method: 'PATCH',\r\n            body: data,\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                setId('');\r\n                setEditTitle('');\r\n                setEditDes('');\r\n                seteditImage('');\r\n                setVisible(!visible);\r\n                fetchSettingData();\r\n            }\r\n        })\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n        fetch(`/setting/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'content-type': 'application/json' }\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchSettingData();\r\n                }\r\n            })\r\n    }\r\n    const showDeleteConfirm = (id) => {\r\n        confirm({\r\n            title: 'Do you Want to delete this item?',\r\n            onOk() {\r\n                deleteHandler(id);\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel', id);\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <MDBContainer className=\"text-center\">\r\n            <p className=\"h4 text-center mb-4\">Social Links</p>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form onSubmit={submitHandler} encType='multipart/form-data'>\r\n\r\n                        <MDBRow>\r\n                            <MDBCol md=\"12\">\r\n                                <MDBInput\r\n                                    value={des}\r\n                                    onChange={(e) => {\r\n                                        setDes(e.target.value);\r\n                                        setSuccessMsg('');\r\n                                    }}\r\n                                    type=\"text\" label=\" Link\" rows=\"3\" />\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n\r\n                        <MDBRow>\r\n                            <MDBCol md=\"12\">\r\n                                <InputLabel htmlFor=\"icon\" style={{ width: '100%', textAlign: 'left' }}>Icon</InputLabel>\r\n                                <Upload name=\"icon\" handleImage={handleImage} />\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                            <MDBCol md=\"12\" style={{textAlign:'center'}}>\r\n                                <p style={{textAlign:'center',backgroundColor:'green', color:'white'}} >{successMsg}</p>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <div className=\"text-center mt-4\">\r\n                            <MDBBtn color=\"info\" outline type=\"submit\">\r\n                                Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\r\n                            </MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n                <MDBCol md=\"6\">\r\n                    <MDBTable style={{ marginTop: '25px', }}>\r\n                        <MDBTableHead >\r\n                            <tr>\r\n                                <th>Icon</th>\r\n                                <th>Link</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {\r\n                                setting.length ?\r\n                                    setting.map(item => {\r\n                                        return (\r\n                                            <tr key={item._id}>\r\n                                                <td>\r\n                                                    <img\r\n                                                        width={50}\r\n                                                        alt={item.title}\r\n                                                        src={`/${item.image}`}\r\n                                                    />\r\n                                                </td>\r\n                                                <td onClick={() => {\r\n                                                    setdescModalDetails(item)\r\n                                                    setdescModal(true)\r\n                                                }}>{item.description.substring(0, 35)}</td>\r\n                                                <td>\r\n                                                    <DeleteForeverIcon onClick={() => showDeleteConfirm(item._id)} />\r\n                                                    <EditIcon onClick={() => edit(item._id)} />\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                    : null\r\n                            }\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Edit Social Link\"\r\n                onOk={handleEdit}\r\n                onCancel={() => { setVisible(!visible) }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                value={editdes}\r\n                                onChange={(e) => {\r\n                                    let description = e.target.value;\r\n                                    setEditDes(description);\r\n\r\n                                }}\r\n                                type=\"text\" label=\" Link\" rows=\"3\" />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <Upload handleImage={imageSelectedEditHandler} defaultV={`/${defaultimage}`} />\r\n                            {/* <input\r\n                                type='file'\r\n                                onChange={imageSelectedEditHandler}\r\n                            /> */}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Description\"\r\n                visible={descModal}\r\n                footer={null}\r\n                onCancel={descModalHandleCancel}\r\n            >\r\n                <p>{descModalDetails.description}</p>\r\n            </Modal>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default Setting;","/* eslint-disable react/react-in-jsx-scope */\r\nimport { Upload, message } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\nconst { Dragger } = Upload;\r\n\r\nexport default function MyUpload({handleImage}){\r\n\r\nconst props = {\r\n  name: 'file',\r\n  //multiple: true,\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  accept:'.png, .jpeg, .jpg, .pdf',\r\n  //showUploadList:{showDownloadIcon:false},\r\n  showUploadList:false,\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    info.fileList = info.fileList.slice(-1);\r\n    if (status !== 'uploading') {\r\n      //console.log(info.fileList, info.fileList.length);\r\n      console.log(info.file);\r\n      handleImage(info.file.originFileObj);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nreturn(\r\n  <Dragger {...props}>\r\n    <p className=\"ant-upload-drag-icon\">\r\n      <InboxOutlined />\r\n    </p>\r\n    <p className=\"ant-upload-text\">Click or drag file to this area to upload(JPG,PNG,JPEG,PDF)</p>\r\n    {/* <p className=\"ant-upload-hint\">\r\n      Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n      band files\r\n    </p> */}\r\n  </Dragger>\r\n);\r\n  \r\n}","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable jsx-a11y/role-has-required-aria-props */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBIcon, MDBInput} from 'mdbreact';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport './finance.css';\r\nimport { Modal } from 'antd';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { TablePagination } from '@material-ui/core';\r\nimport { message,Button } from \"antd\";\r\nimport 'date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n  } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Upload from './Upload';\r\nimport MyUpload from \"./MyUpload\";\r\nimport { TableHeader } from \"material-ui\";\r\n\r\nconst { confirm } = Modal;\r\nconst props = {\r\n    name: 'file',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    onChange(info) {\r\n      if (info.file.status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (info.file.status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(12, 1fr)',\r\n      gridGap: theme.spacing(3),\r\n    },\r\n    paper1: {\r\n        height:'100px',\r\n        fontWeight:'bold',\r\n        color:'white',\r\n        backgroundColor:indigo[500]\r\n    },\r\n    paper2: {\r\n        height:'100px',\r\n        fontWeight:'bold',\r\n        color:'white',\r\n        backgroundColor:teal[500]\r\n    },\r\n    paper3: {\r\n        height:'100px',\r\n        fontWeight:'bold',\r\n        color:'white',\r\n        backgroundColor:pink[500]\r\n    },\r\n    divider: {\r\n      margin: theme.spacing(2, 0),\r\n    },\r\n    root: {\r\n        width: '100%',\r\n      },\r\n    container1: {\r\n        maxHeight: 600,\r\n      },\r\n  }));\r\n\r\nconst Financ = () => {\r\n    const classes = useStyles();\r\n    const [id, setId] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n    const [newVisible, setNewVisible] = useState(false);\r\n    const [oS, setOS] = useState('');\r\n    const [editOS, setEditOS] = useState('');\r\n    const [emission, setEmission] = React.useState(new Date());\r\n    const [editEmission, setEditEmission] = useState(new Date());\r\n    const [status, setStatus] = useState('');\r\n    const [editStatus, setEditStatus] = useState('');\r\n    const [client, setClient] = useState('');\r\n    const [editClient, setEditClient] = useState('');\r\n    const [paymentType, setPaymentType] = useState('');\r\n    const [editPaymentType, setEditPaymentType] = useState('');\r\n    const [collectPaymentType, setCollectPaymentType] = useState('');\r\n    const [collectAmount, setCollectAmount] = useState(0);\r\n    const [amount, setAmount] = useState(0);\r\n    const [editAmount, setEditAmount] = useState(0);\r\n    const [received, setReceived] = useState(0);\r\n    const [editReceived, setEditReceived] = useState(0);\r\n    const [balance, setBalance] = useState(0);\r\n    const [editBalance, setEditBalance] = useState(0);\r\n    const [lastPayment, setLastPayment] = React.useState(new Date());\r\n    const [editLastPayment, setEditLastPayment] = React.useState(new Date());\r\n    const [editOrderDetail, setEditOrderDetail] = React.useState('');\r\n    const [editWorkDetail, setEditWorkDetail] = useState('');\r\n    const [orderDetail, setOrderDetail] = useState('');\r\n    const [workDetail, setWorkDetail] = useState('');\r\n\r\n    const [finance, setFinance] = useState([]);\r\n\r\n    const [totalAmount, setTotalAmount] = useState(0);\r\n    const [totalReceived, setTotalReceived] = useState(0);\r\n    const [totalCollect, setTotalCollect] = useState(0);\r\n    const [visible1, setVisible1] = useState(false);\r\n    const [visibleEdit, setVisibleEdit] = useState(false);\r\n      // The first commit of Material-UI\r\n\r\n    const [from, setFrom] = React.useState(new Date('2020-01-01T00:00:00'));\r\n    const [to, setTo] = React.useState(new Date());\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  \r\n    const [oSError, setOSError] = useState('');\r\n    const [statusError, setStatusError] = useState('');\r\n    const [clientError, setClientError] = useState('');\r\n    const [paymentTypeError, setPaymentTypeError] = useState('');\r\n    const [amountError, setAmountError] = useState('');\r\n    const [receivedError, setRecivedError] = useState('');\r\n    const [image1Error, setImage1Error] = useState('');\r\n    const [image2Error, setImage2Error] = useState('');\r\n\r\n    const [searchval, setSearchval]=useState('');\r\n    const [count, setCount]=useState(0);\r\n    const [image1, setImage1]=useState('');\r\n    const [defaultimage1, setDefaultImage1] = useState(undefined);\r\n    const [image2, setImage2]=useState('');\r\n    const [defaultimage2, setDefaultImage2] = useState(undefined);\r\n    const [history, setHistory] = useState([]);\r\n    const [collectHistory, setCollectHistory] = useState([]);\r\n\r\n    const [receipt, setReceipt] = useState(undefined);\r\n    useEffect(() => {\r\n        fetchFinanceData();\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = event => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    const handleEmission = date => {\r\n        setEmission(date);\r\n    }\r\n\r\n    const handleEditEmission = date => {\r\n        setEditEmission(date);\r\n    }\r\n    const handleLastPayment = date => {\r\n        setLastPayment(date);\r\n    }\r\n\r\n    const handleEditLastPayment = date => {\r\n        setEditLastPayment(date);\r\n    }\r\n    const handleFromDateChange = date => {\r\n        setFrom(date);\r\n        let array = finance.filter(fin=> new Date(fin.emission)-date>=0 && to-new Date(fin.emission)>=0  && (fin.client.includes(searchval)===true || fin.paymentType.includes(searchval)===true || fin.status.includes(searchval)===true || fin.os.includes(searchval)===true));\r\n        let totalAmount=0;\r\n        let totalReceived=0;\r\n        for(var i=0;i<array.length;i++){\r\n            totalAmount +=Number(array[i].amount);\r\n            totalReceived += Number(array[i].received);\r\n        }\r\n        setTotalAmount(totalAmount);\r\n        setTotalReceived(totalReceived);\r\n        setTotalCollect(Number(totalAmount)-Number(totalReceived));\r\n        setCount(array.length);\r\n    };\r\n\r\n    const handleToDateChange = date => {\r\n        setTo(date);\r\n        let array = finance.filter(fin=> new Date(fin.emission)-from>=0 && date-new Date(fin.emission)>=0  && (fin.client.includes(searchval)===true || fin.paymentType.includes(searchval)===true || fin.status.includes(searchval)===true || fin.os.includes(searchval)===true));\r\n        let totalAmount=0;\r\n        let totalReceived=0;\r\n        for(var i=0;i<array.length;i++){\r\n            totalAmount +=Number(array[i].amount);\r\n            totalReceived += Number(array[i].received);\r\n        }\r\n        setTotalAmount(totalAmount);\r\n        setTotalReceived(totalReceived);\r\n        setTotalCollect(Number(totalAmount)-Number(totalReceived));\r\n        setCount(array.length);\r\n    };\r\n\r\n    const handleSearchChange = e => {\r\n        setSearchval(e.target.value);\r\n        let array = finance.filter(fin=>new Date(fin.emission)-from>=0 && to-new Date(fin.emission)>=0 && (fin.client.includes(e.target.value)===true || fin.paymentType.includes(e.target.value)===true || fin.status.includes(e.target.value)===true || fin.os.toString().includes(e.target.value)===true));\r\n\r\n        let totalAmount=0;\r\n        let totalReceived=0;\r\n        for(var i=0;i<array.length;i++){\r\n            totalAmount +=Number(array[i].amount);\r\n            totalReceived += Number(array[i].received);\r\n        }\r\n        setTotalAmount(totalAmount);\r\n        setTotalReceived(totalReceived);\r\n        setTotalCollect(Number(totalAmount)-Number(totalReceived));\r\n        setCount(array.length);\r\n    }\r\n\r\n    const handleImage1 = (file) => {\r\n        setImage1(file);\r\n        setImage1Error('');\r\n     }\r\n\r\n    const handleImage2 = (file) => {\r\n        setImage2(file);\r\n        setImage2Error('');\r\n     }\r\n    \r\n    const handleImage1Edit = (file) => {\r\n        setEditOrderDetail(file);\r\n     }\r\n\r\n    const handleReceipt = (file) => {\r\n        setReceipt(file);\r\n    }\r\n\r\n    const handleImage2Edit = (file) => {\r\n        setImage2(file);\r\n        setEditWorkDetail(file);\r\n     }\r\n    function formatNumber(num) {\r\n        return num.toFixed(2).replace('.', ',').replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.')\r\n    }\r\n\r\n    function pad(d) {\r\n        return (d < 10) ? '0' + d.toString() : d.toString();\r\n    }\r\n    //add new \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // if(oS === ''){\r\n        //     setOSError('Please fill this field.');\r\n        // }\r\n        if(client === ''){\r\n            setClientError('Please fill this field.');\r\n        }\r\n        if(paymentType === ''){\r\n            setPaymentTypeError('Please fill this field.');\r\n        }\r\n        if(Number(amount) <= 0){\r\n            setAmountError('Please fill this field.');\r\n        }\r\n        if(Number(amount)-Number(received) <0){\r\n            setRecivedError('invalid!');\r\n        }\r\n        if(image1 === ''){\r\n            setImage1Error('Please select the order detail.');\r\n        }\r\n        if(Number(received) >0 && image2 === ''){\r\n            setImage2Error('Please select the receipt image.');\r\n        }\r\n        if(client !== '' && paymentType !== '' && Number(amount)>0 && Number(amount)-Number(received)>=0 && image1 !== '' && ((image2 !== ''&& Number(received)>0) ||(Number(received)===0))){\r\n            let data = new FormData();\r\n            let stat = '';\r\n            data.append('lastPayment', lastPayment);\r\n            if(Number(received)===0){\r\n                stat = 'open';\r\n                data.append('lastPayment', '');\r\n            }\r\n            else if(Number(received)>0 && Number(received)<Number(amount)){\r\n                stat = 'partial';\r\n            }\r\n            else if(Number(received)===Number(amount)){\r\n                stat = 'paid';\r\n            }\r\n            else{\r\n                stat = 'other'\r\n            }\r\n            //data.append('os', oS);\r\n            data.append('emission', emission);\r\n            data.append('status', stat);\r\n            data.append('client', client);\r\n            data.append('paymentType', paymentType);\r\n            data.append('amount', amount);\r\n            data.append('received', Number(received));\r\n            data.append('balance', Number(amount)-Number(received));\r\n            //data.append('lastPayment', lastPayment);\r\n            data.append('orderDetail', image1);\r\n            data.append('workDetail', image2);\r\n\r\n            fetch('/finance', {\r\n                method: 'POST',\r\n                body: data\r\n            })\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        //setNewVisible(false);\r\n                        fetchFinanceData();\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log('Please check your connection');\r\n                })\r\n        }\r\n        \r\n    }\r\n\r\n    const fetchFinanceData = () => {\r\n        setFinance('');\r\n        setOS('');\r\n        setEmission(new Date());\r\n        setStatus('');\r\n        setClient('');\r\n        setPaymentType('');\r\n        setAmount(0);\r\n        setReceived(0);\r\n        setBalance(0);\r\n        setLastPayment(new Date());\r\n        setTotalAmount(0);\r\n        setTotalCollect(0);\r\n        setTotalReceived(0);\r\n        setImage1('');\r\n        setImage2('');\r\n        setHistory([]);\r\n        fetch(`/finance`)\r\n            .then(res => res.json())           \r\n            .then(res => {\r\n                if(!!res.result){\r\n                    let sortedArray = res.result.sort((a, b) => a.created_at.valueOf() - b.created_at.valueOf())\r\n                    setFinance(sortedArray);\r\n                    setCount(res.result.length);\r\n                    let finance = res.result;\r\n                    let totalAmount=0;\r\n                    let totalReceived=0;\r\n                    for(var i=0;i<finance.length;i++){\r\n                        totalAmount +=Number(finance[i].amount);\r\n                        totalReceived += Number(finance[i].received);\r\n                    }\r\n                    setTotalAmount(totalAmount);\r\n                    setTotalReceived(totalReceived);\r\n                    setTotalCollect(Number(totalAmount)-Number(totalReceived));\r\n                }               \r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your internet connection..!');\r\n            })\r\n    }\r\n    //in case of collect\r\n    const edit2 = (id) => {\r\n        let editableArrary = finance.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', os = '',  emission = '',status='',client='',paymentType='',amount='', received='',balance='',lastPayment='', imgName1='',imgName2='',history=[] } = editable;\r\n        setId(_id);\r\n        setEditOS(os);\r\n        setEditEmission(emission);\r\n        setEditStatus(status);\r\n        setEditClient(client);\r\n        setEditPaymentType(paymentType);\r\n        setEditAmount(amount);\r\n        setEditReceived(received);\r\n        setEditBalance(balance);\r\n        setEditOrderDetail(imgName1);\r\n        setEditWorkDetail(imgName2);\r\n        setDefaultImage1(imgName1);\r\n        setDefaultImage2(imgName2);\r\n        //setEditBalance(Number(amount)-Number(received));\r\n        setEditLastPayment(lastPayment);\r\n\r\n        setCollectHistory(history);\r\n        setVisible(!visible);\r\n    }\r\n    //in case of view\r\n    const edit1 = (id) => {\r\n        let editableArrary = finance.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', os = '',  emission = '',status='',client='',paymentType='',amount='', received='',balance='',lastPayment='',imgName1='', imgName2='', history=[]} = editable;\r\n        setId(_id);\r\n        setEditOS(os);\r\n        setEditEmission(emission);\r\n        setEditStatus(status);\r\n        setEditClient(client);\r\n        setEditPaymentType(paymentType);\r\n        setEditAmount(amount);\r\n        setEditReceived(received);\r\n        setEditBalance(balance);\r\n        setCollectHistory(history);\r\n        //setEditBalance(Number(amount)-Number(received));\r\n        setEditLastPayment(lastPayment);\r\n        setEditOrderDetail(imgName1);\r\n        setEditWorkDetail(imgName2);\r\n        setVisible1(!visible1);\r\n    }\r\n    //in case of edit\r\n    const edit = (id) => {\r\n        let editableArrary = finance.filter(item => item._id === id);\r\n        const [editable = {}] = editableArrary;\r\n        const { _id = '', os = '',  emission = '',status='',client='',paymentType='',amount='', received='',balance='',lastPayment='',imgName1='', imgName2='' ,history=[]} = editable;\r\n        setId(_id);\r\n        setEditOS(os);\r\n        setEditEmission(emission);\r\n        setEditStatus(status);\r\n        setEditClient(client);\r\n        setEditPaymentType(paymentType);\r\n        setEditAmount(amount);\r\n        setEditReceived(received);\r\n        setEditBalance(balance);\r\n        setEditOrderDetail(imgName1);\r\n        setEditWorkDetail(imgName2);\r\n        //setEditBalance(Number(amount)-Number(received));\r\n        setEditLastPayment(lastPayment);\r\n        setDefaultImage1(imgName1);\r\n        setDefaultImage2(imgName2);\r\n        setCollectHistory(history);\r\n        setVisibleEdit(!visibleEdit);\r\n    }\r\n    //submit collect\r\n    const submitCollectHandler = (e) => {\r\n        e.preventDefault()\r\n        let data =  new FormData();\r\n\r\n        if(collectPaymentType===''){\r\n            alert('please select payment type.');\r\n        }\r\n        else if(Number(collectAmount)<=0 || Number(collectAmount)>Number(editBalance)){\r\n            alert('AmountToCollect field is invalid');\r\n        }\r\n        else if(receipt === ''||receipt ===[] ||receipt ===undefined){\r\n            alert('please insert receipt.')\r\n        }\r\n        else{\r\n            let stat = '';\r\n            if(Number(collectAmount)===0){\r\n                stat = 'open';\r\n            }\r\n            else if(Number(collectAmount)>0 && Number(collectAmount)<Number(editBalance)){\r\n                stat = 'partial';\r\n            }\r\n            else if(Number(collectAmount)===Number(editBalance)){\r\n                stat = 'paid';\r\n            }\r\n            else{\r\n                stat = 'other'\r\n            }\r\n            data.append('paymentType', collectPaymentType);\r\n            data.append('collectAmount', Number(collectAmount));\r\n            data.append('lastPayment', editLastPayment);\r\n            data.append('receipt', receipt);\r\n            data.append('status', stat);\r\n\r\n            fetch(`/finance/collect/${id}`, {\r\n                method: 'POST',\r\n                body: data,\r\n                }).then(res => {\r\n                    if (res.status === 201) {\r\n                        setCollectAmount(0);\r\n                        setCollectPaymentType('');\r\n                        setReceipt(undefined);\r\n                        setEditLastPayment(new Date());\r\n                        setId('');\r\n                        setEditOS('');\r\n                        setEditEmission(new Date());\r\n                        setEditStatus('');\r\n                        setEditClient('');\r\n                        setEditPaymentType('');\r\n                        setEditAmount('');\r\n                        setEditReceived('');\r\n                        setEditBalance('');\r\n                        //setEditLastPayment(new Date());\r\n                        setEditOrderDetail('');\r\n                        setEditWorkDetail('');\r\n                        setVisible(false);\r\n                        setVisibleEdit(false);\r\n                        fetchFinanceData();\r\n                    }\r\n                });\r\n        }\r\n\r\n    }\r\n    //submit edit\r\n    const submitEditHandler = (e) => {\r\n        e.preventDefault()\r\n        let data = new FormData();\r\n        let stat = '';\r\n        if(Number(editReceived)===0){\r\n            stat = 'open';\r\n        }\r\n        else if(Number(editReceived)>0 && Number(editReceived)<Number(editAmount)){\r\n            stat = 'partial';\r\n        }\r\n        else if(Number(editReceived)===Number(editAmount)){\r\n            stat = 'paid';\r\n        }\r\n        else{\r\n            stat = 'other'\r\n        }\r\n        if(Number(editAmount)<0|| Number(editAmount)<Number(editReceived)+Number(editBalance)){\r\n            alert('Amount field is invalid.');\r\n        }else{\r\n            data.append('os', editOS);\r\n            data.append('emission', editEmission);\r\n            data.append('status', stat);\r\n            data.append('client', editClient);\r\n            data.append('paymentType', editPaymentType);\r\n            data.append('amount', editAmount);\r\n            data.append('received', editReceived);\r\n            data.append('balance', Number(editAmount)-Number(editReceived));\r\n            data.append('lastPayment', editLastPayment);\r\n            data.append('orderDetail', editOrderDetail);\r\n            data.append('workDetail', editWorkDetail);\r\n            fetch(`/finance/${id}`, {\r\n            method: 'PATCH',\r\n            body: data,\r\n            }).then(res => {\r\n                if (res.status === 201) {\r\n                    setId('');\r\n                    setEditOS('');\r\n                    setEditEmission(new Date());\r\n                    setEditStatus('');\r\n                    setEditClient('');\r\n                    setEditPaymentType('');\r\n                    setEditAmount('');\r\n                    setEditReceived('');\r\n                    setEditBalance('');\r\n                    setEditLastPayment(new Date());\r\n                    setEditOrderDetail('');\r\n                    setEditWorkDetail('');\r\n                    setVisible(false);\r\n                    setVisibleEdit(false);\r\n                    setCollectHistory([]);\r\n                    fetchFinanceData();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n        fetch(`/finance/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'content-type': 'application/json' }\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchFinanceData();\r\n                }\r\n            })\r\n    }\r\n    const showDeleteConfirm = (id) => {\r\n        confirm({\r\n            title: 'Do you Want to delete this item?',\r\n            onOk() {\r\n                deleteHandler(id);\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel', id);\r\n            },\r\n        });\r\n    }\r\n    const addNew=()=>{\r\n        setNewVisible(true);\r\n    }\r\n\r\n    return (\r\n        <MDBContainer className=\"text-center\">\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"h4 text-center mb-4\">Finance  Management</p>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <label style={{fontWeight:'bold'}}>Total Amount</label>\r\n                    <Paper className={classes.paper1}>\r\n                        <p style={{fontSize:'15px', textAlign:'left', paddingTop:'10px',paddingLeft:'10px',marginBottom:'0px' }}>R$</p>\r\n                        <p style={{fontSize:'40px',textAlign:'center'}}>{formatNumber(totalAmount)}</p>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <label style={{fontWeight:'bold'}}>Total Received</label>\r\n                    <Paper className={classes.paper2}>\r\n                        <p style={{fontSize:'15px', textAlign:'left', paddingTop:'10px',paddingLeft:'10px',marginBottom:'0px' }}>R$</p>\r\n                        <p style={{fontSize:'40px',textAlign:'center'}}>{formatNumber(totalReceived)}</p>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <label style={{fontWeight:'bold'}}>Total To Collect</label>\r\n                    <Paper className={classes.paper3}>\r\n                        <p style={{fontSize:'15px', textAlign:'left', paddingTop:'10px',paddingLeft:'10px',marginBottom:'0px' }}>R$</p>\r\n                        <p style={{fontSize:'40px',textAlign:'center'}}>{formatNumber(totalCollect)}</p>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <br></br>\r\n            <br></br>\r\n            <div style={{textAlign:'left'}}>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"add\" name=\"fabicon\" onClick={addNew}>\r\n                        <AddIcon />\r\n                </Fab>\r\n                <label style={{fontWeight:'bold'}}>&nbsp;&nbsp;Add New</label>\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <MDBRow md={12}>\r\n                <MDBCol md={6}>\r\n                    <MDBRow style={{textAlign:'left'}}>\r\n                        <p style={{fontWeight:'bold'}}>&nbsp;&nbsp;Select Emission Date Period</p>\r\n                    </MDBRow>\r\n                    <MDBRow>            \r\n                        <MDBCol md={6}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline1\"\r\n                                        label=\"From\"\r\n                                        value={from}\r\n                                        onChange={handleFromDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                        <MDBCol md={6}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline2\"\r\n                                        label=\"To\"\r\n                                        value={to}\r\n                                        onChange={handleToDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBCol>\r\n                <MDBCol md={6} style={{textAlign:'right'}}>\r\n                    <MDBRow>\r\n                        <p style={{fontWeight:'bold'}}>Select O.S#, Status, Client or Payment type</p>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBInput label=\"search key\" value={searchval} onChange={handleSearchChange}></MDBInput>\r\n                    </MDBRow>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow>   \r\n                <MDBCol md=\"12\">\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={count}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                    <Paper className={classes.root}>\r\n                    <TableContainer className={classes.container1}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead style={{backgroundColor:blue[500], color:'white'}}>\r\n                            <TableRow>\r\n                                <TableCell>O.S #</TableCell>\r\n                                <TableCell>Emission</TableCell>\r\n                                <TableCell>Status</TableCell>\r\n                                <TableCell>Client</TableCell>\r\n                                <TableCell>Payment type</TableCell>\r\n                                <TableCell>Amount</TableCell>\r\n                                <TableCell>Received</TableCell>\r\n                                <TableCell>Balance</TableCell>\r\n                                <TableCell>Last Payment</TableCell>\r\n                                <TableCell>Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        \r\n                            {\r\n                                finance.length ?\r\n                                    finance.filter(fin=> new Date(fin.emission)-from>=0 && to-new Date(fin.emission)>=0 && (fin.client.includes(searchval)===true || fin.paymentType.includes(searchval)===true || fin.status.includes(searchval)===true || fin.os.toString().includes(searchval)===true) ).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(item => {\r\n                                        var emissiondate = new Date(item.emission);\r\n                                        var lastPaymentdate = new Date(item.lastPayment);\r\n                                        var editlink = item.balance===0?<a style={{color:'blue'}} onClick={()=>edit1(item._id)}>View</a>:\r\n                                                                        <a style={{color:'green'}} onClick={()=>edit2(item._id)}>Collect</a>;\r\n                                        return (\r\n                                            <TableBody>\r\n                                            <TableRow key={item._id} hover role=\"checkbox\" tabIndex={-1}>\r\n                                                <TableCell>{item.os}</TableCell>\r\n                                                <TableCell>{pad(emissiondate.getDate())}/{pad(emissiondate.getMonth()+1)}/{emissiondate.getFullYear()}</TableCell>\r\n                                                <TableCell>{item.status}</TableCell>\r\n                                                <TableCell>{item.client}</TableCell>\r\n                                                <TableCell>{item.paymentType}</TableCell>\r\n                                                <TableCell>{item.amount}</TableCell>\r\n                                                <TableCell>{item.received}</TableCell>\r\n                                                <TableCell>{item.balance}</TableCell>\r\n                                                {Number(item.received)>0?(<TableCell>{pad(lastPaymentdate.getDate())}/{pad(lastPaymentdate.getMonth()+1)}/{lastPaymentdate.getFullYear()}</TableCell>):<TableCell></TableCell>}\r\n                                                <TableCell>\r\n                                                    {/* <DeleteForeverIcon onClick={() => showDeleteConfirm(item._id)} /> */}\r\n                                                    {editlink}\r\n                                                    &nbsp;&nbsp;\r\n                                                    <a style={{color:'brown'}} onClick={()=>edit(item._id)}>Edit</a>\r\n                                                    &nbsp;&nbsp;\r\n                                                    <a style={{color:'red'}} onClick={()=>showDeleteConfirm(item._id)}>Delete</a>\r\n                                                    {/* <EditIcon onClick={() => edit(item._id)} /> */}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                            </TableBody>\r\n                                        )\r\n                                    })\r\n                                    : null\r\n                            }\r\n                        \r\n                    </Table>\r\n                    </TableContainer>\r\n                    </Paper>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={count}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <Modal\r\n                visible={newVisible}\r\n                title=\"Add New \"\r\n                onOk={submitHandler}\r\n                onCancel={() => { \r\n                    setOS('');\r\n                    setEmission(new Date());\r\n                    setStatus('');\r\n                    setClient('');\r\n                    setPaymentType('');\r\n                    setAmount(0);\r\n                    setReceived(0);\r\n                    setBalance(0);\r\n                    setLastPayment(new Date());\r\n                    setOSError('');\r\n                    setStatusError('');\r\n                    setClientError('');\r\n                    setPaymentTypeError('');\r\n                    setAmountError('');\r\n                    setRecivedError('');\r\n                    setImage1Error('');\r\n                    setImage2Error('');\r\n                    setNewVisible(!newVisible); }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\"  style={{textAlign:'left'}}>\r\n                            <label>Order Detail</label>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"12\"  style={{textAlign:'left'}}>\r\n                            <MyUpload handleImage={handleImage1}/>\r\n                            <p style={{color:'red'}}>{image1Error}</p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    {/* <MDBRow>\r\n                        <MDBCol md=\"6\"  style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Service Order Number\"\r\n                                type=\"number\"\r\n                                value={oS}\r\n                                onChange={(e) => {\r\n                                    let os = e.target.value;\r\n                                    setOS(os);\r\n                                    setOSError('');\r\n                                }}\r\n                                />\r\n                            <p style={{color:'red'}}>{oSError}</p>\r\n                        </MDBCol>\r\n                    </MDBRow> */}\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline3\"\r\n                                        label=\"Emission Date\"\r\n                                        value={emission}\r\n                                        onChange={handleEmission}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Client\" \r\n                                type=\"text\"\r\n                                value={client}\r\n                                onChange={(e) => {\r\n                                    let cl = e.target.value;\r\n                                    setClient(cl);\r\n                                    setClientError('');\r\n                                }}\r\n                                />\r\n                            <p style={{color:'red'}}>{clientError}</p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                        <br></br>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"PaymentType\" style={{ width: '100%', textAlign: 'left' }}>Payment Type</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={paymentType}\r\n                                    inputProps={{\r\n                                        name: 'PaymentType',\r\n                                        id: 'PaymentType',\r\n                                    }}\r\n                                    onChange={(e) => {\r\n                                        let pt = e.target.value;\r\n                                        setPaymentType(pt);\r\n                                        setPaymentTypeError('');\r\n                                    }}\r\n                                    >\r\n                                    <MenuItem value=\"cash\">cash</MenuItem>\r\n                                    <MenuItem value=\"check\">check</MenuItem>\r\n                                    <MenuItem value=\"deposit\">deposit</MenuItem>\r\n                                    <MenuItem value=\"transfer\">transfer</MenuItem>\r\n                                    <MenuItem value=\"credit card\">credit card</MenuItem>\r\n                                    <MenuItem value=\"debit card\">debit card</MenuItem>\r\n                                    <MenuItem value=\"other\">other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <p style={{color:'red'}}><br></br>{paymentTypeError}</p>\r\n                        </MDBCol>\r\n                    \r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                value={amount}\r\n                                onChange={(e) => {\r\n                                    let amount = e.target.value;\r\n                                    setAmount(amount);\r\n                                    setAmountError('');\r\n                                }}\r\n                                />\r\n                            <p style={{color:'red'}}>{amountError}</p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Received\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                max={amount}\r\n                                value={received}\r\n                                onChange={(e) => {\r\n                                    let received = e.target.value;\r\n                                    setReceived(received);\r\n                                }}\r\n                                />\r\n                            <p style={{color:'red'}}>{receivedError}</p>\r\n                        </MDBCol>\r\n                    \r\n                    <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Balance\"\r\n                                type=\"number\"\r\n                                disabled\r\n                                value={Number(amount)-Number(received)}\r\n                                \r\n                                />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    {\r\n                        Number(received) > 0 ?\r\n                        <div>\r\n                        <MDBRow>\r\n                        <MDBCol md=\"6\" >\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline4\"\r\n                                        label=\"Last Payment Date\"\r\n                                        value={lastPayment}\r\n                                        onChange={handleLastPayment}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    \r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                        <br></br>\r\n                            <label>Receipt</label>\r\n                            <Upload handleImage={handleImage2}/>\r\n                            <p style={{color:'red'}}>{image2Error}</p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    </div>\r\n                    :null\r\n                    }\r\n                    \r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Collect Payment \"\r\n                onOk={submitCollectHandler}\r\n                onCancel={() => { \r\n                    setEditOS('');\r\n                    setEditEmission(new Date());\r\n                    setEditStatus('');\r\n                    setEditClient('');\r\n                    setEditPaymentType('');\r\n                    setEditAmount(0);\r\n                    setEditReceived(0);\r\n                    setEditBalance(0);\r\n                    setEditLastPayment(new Date());\r\n                    setVisible(!visible); \r\n                    setCollectAmount(0);\r\n                    setCollectHistory([]);\r\n                    setCollectPaymentType('');\r\n                }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>             \r\n                        <MDBCol md=\"6\">\r\n                            <br></br>\r\n                            <a href={editOrderDetail}>Order Detail</a>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\"  style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Service Order Number\"\r\n                                type=\"number\"\r\n                                disabled\r\n                                value={editOS}\r\n                                onChange={(e) => {\r\n                                    let os = e.target.value;\r\n                                    setOS(os);\r\n                                }}\r\n                                />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline5\"\r\n                                        label=\"Emission Date\"\r\n                                        value={editEmission}\r\n                                        disabled\r\n                                        onChange={handleEditEmission}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                    \r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Client\"\r\n                                type=\"text\"\r\n                                value={editClient}\r\n                                disabled\r\n                                onChange={(e) => {\r\n                                    let cl = e.target.value;\r\n                                    setClient(cl);\r\n                                }}\r\n                                />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Balance\"\r\n                                type=\"number\"\r\n                                value={editBalance}\r\n                                disabled\r\n                                />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md={12}>\r\n                            Collect History\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md={12}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>PaymentType</TableCell>\r\n                                        <TableCell>CollectAmount</TableCell>\r\n                                        <TableCell>PaymentDate</TableCell>\r\n                                        <TableCell>Receipt</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {\r\n                                    collectHistory.length?\r\n                                        collectHistory.map(item=>{\r\n                                            return(\r\n                                                <TableRow>\r\n                                                    <TableCell>{item.paymentType?item.paymentType:null}</TableCell>\r\n                                                    <TableCell>{item.collectAmount?item.collectAmount:0}</TableCell>\r\n                                                    <TableCell>{item.paymentDate?pad((new Date(item.paymentDate)).getDate())+'/'+pad((new Date(item.paymentDate)).getMonth()+1)+'/'+(new Date(item.paymentDate)).getFullYear():null}</TableCell>\r\n                                                    <TableCell>{item.receipt?<a href={item.receipt}>view</a>:null}</TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                                \r\n                                    :null\r\n                                }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <br></br>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"PaymentType\" style={{ width: '100%', textAlign: 'left' }}>Payment Type</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={collectPaymentType}\r\n                                    inputProps={{\r\n                                        name: 'PaymentType',\r\n                                        id: 'PaymentType',\r\n                                    }}\r\n                                    onChange={(e) => {\r\n                                        let pt = e.target.value;\r\n                                        setCollectPaymentType(pt);\r\n                                        //setPaymentTypeError('');\r\n                                    }}\r\n                                    >\r\n                                    <MenuItem value=\"cash\">cash</MenuItem>\r\n                                    <MenuItem value=\"check\">check</MenuItem>\r\n                                    <MenuItem value=\"deposit\">deposit</MenuItem>\r\n                                    <MenuItem value=\"transfer\">transfer</MenuItem>\r\n                                    <MenuItem value=\"credit card\">credit card</MenuItem>\r\n                                    <MenuItem value=\"debit card\">debit card</MenuItem>\r\n                                    <MenuItem value=\"other\">other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                    \r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Amount to collect\"\r\n                                type=\"number\"\r\n                                \r\n                                value={collectAmount}\r\n                                onChange={(e) => {\r\n                                    let amount = e.target.value;\r\n                                    setCollectAmount(amount);\r\n                                }}\r\n                                />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    {Number(collectAmount)>0?\r\n                    <div>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" >\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline6\"\r\n                                        label=\"Payment Date\"\r\n                                        value={editLastPayment}\r\n                                        onChange={handleEditLastPayment}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                        <br></br>\r\n                            <label>Receipt</label>\r\n                            <Upload handleImage={handleReceipt}/>\r\n                            {/* <p style={{color:'red'}}>{image2Error}</p> */}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    </div>:null}\r\n                    \r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={visibleEdit}\r\n                title=\"Edit\"\r\n                onOk={submitEditHandler}\r\n                onCancel={() => { \r\n                    setEditOS('');\r\n                    setEditEmission(new Date());\r\n                    setEditStatus('');\r\n                    setEditClient('');\r\n                    setEditPaymentType('');\r\n                    setEditAmount(0);\r\n                    setEditReceived(0);\r\n                    setEditBalance(0);\r\n                    setEditLastPayment(new Date());\r\n                    setEditWorkDetail('');\r\n                    setEditOrderDetail('');\r\n                    setVisibleEdit(!visibleEdit); \r\n                    setCollectHistory([]);\r\n                }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <br></br>\r\n                            <a href={editOrderDetail}>Order Detail</a>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\"  style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Service Order Number\"\r\n                                type=\"number\"\r\n                                value={editOS}\r\n                                disabled\r\n                                onChange={(e) => {\r\n                                    let os = e.target.value;\r\n                                    setEditOS(os);\r\n                                }}\r\n                                />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline5\"\r\n                                        label=\"Emission Date\"\r\n                                        value={editEmission}\r\n                                        onChange={handleEditEmission}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                    \r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Client\"\r\n                                type=\"text\"\r\n                                value={editClient}\r\n                                onChange={(e) => {\r\n                                    let cl = e.target.value;\r\n                                    setEditClient(cl);\r\n                                }}\r\n                                />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md={12}>\r\n                            Collect History\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md={12}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>PaymentType</TableCell>\r\n                                        <TableCell>CollectAmount</TableCell>\r\n                                        <TableCell>PaymentDate</TableCell>\r\n                                        <TableCell>Receipt</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {\r\n                                    collectHistory.length?\r\n                                        collectHistory.map(item=>{\r\n                                            return(\r\n                                                <TableRow>\r\n                                                    <TableCell>{item.paymentType?item.paymentType:null}</TableCell>\r\n                                                    <TableCell>{item.collectAmount?item.collectAmount:0}</TableCell>\r\n                                                    <TableCell>{item.paymentDate?pad((new Date(item.paymentDate)).getDate())+'/'+pad((new Date(item.paymentDate)).getMonth()+1)+'/'+(new Date(item.paymentDate)).getFullYear():null}</TableCell>\r\n                                                    <TableCell>{item.receipt?<a href={item.receipt}>view</a>:null}</TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                                \r\n                                    :null\r\n                                }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            {/* <MDBInput\r\n                                label=\"Payment Type\"\r\n                                type=\"text\"\r\n                                value={editPaymentType}\r\n                                onChange={(e) => {\r\n                                    let pt = e.target.value;\r\n                                    setEditPaymentType(pt);\r\n                                }}\r\n                                /> */}\r\n                                <br></br>\r\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\r\n                                <InputLabel htmlFor=\"PaymentType\" style={{ width: '100%', textAlign: 'left' }}>Payment Type</InputLabel>\r\n                                <Select\r\n                                    style={{ width: '100%', textAlign: 'left' }}\r\n                                    value={editPaymentType}\r\n                                    inputProps={{\r\n                                        name: 'PaymentType',\r\n                                        id: 'PaymentType',\r\n                                    }}\r\n                                    onChange={(e) => {\r\n                                        let pt = e.target.value;\r\n                                        setEditPaymentType(pt);\r\n                                        //setPaymentTypeError('');\r\n                                    }}\r\n                                    >\r\n                                    <MenuItem value=\"cash\">cash</MenuItem>\r\n                                    <MenuItem value=\"check\">check</MenuItem>\r\n                                    <MenuItem value=\"deposit\">deposit</MenuItem>\r\n                                    <MenuItem value=\"transfer\">transfer</MenuItem>\r\n                                    <MenuItem value=\"credit card\">credit card</MenuItem>\r\n                                    <MenuItem value=\"debit card\">debit card</MenuItem>\r\n                                    <MenuItem value=\"other\">other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </MDBCol>\r\n                    \r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Amount\"\r\n                                type=\"number\"\r\n                                \r\n                                value={editAmount}\r\n                                onChange={(e) => {\r\n                                    let amount = e.target.value;\r\n                                    setEditAmount(amount);\r\n                                }}\r\n                                />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Received\"\r\n                                type=\"number\"\r\n                                value={editReceived}\r\n                                disabled\r\n                                onChange={(e) => {\r\n                                    let received = e.target.value;\r\n                                    setEditReceived(received);\r\n                                }}\r\n                                />\r\n                        </MDBCol>\r\n                    \r\n                    <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <MDBInput\r\n                                label=\"Balance\"\r\n                                type=\"number\"\r\n                                value={Number(editAmount)-Number(editReceived)}\r\n                                disabled\r\n                                onChange={(e) => {\r\n                                    let balance = e.target.value;\r\n                                    setEditBalance(balance);\r\n                                }}\r\n                                />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    {Number(editReceived)>0?<MDBRow>\r\n                        <MDBCol md=\"6\" >\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline6\"\r\n                                        label=\"Last Payment Date\"\r\n                                        value={editLastPayment}\r\n                                        onChange={handleEditLastPayment}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </MDBCol>\r\n                    </MDBRow>:null}\r\n                    {/* <MDBRow>\r\n                        \r\n                        <MDBCol md=\"6\">\r\n                            <br></br>\r\n                            <a href={editWorkDetail}>Receipt</a>\r\n                        </MDBCol>\r\n                    </MDBRow> */}\r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                visible={visible1}\r\n                title=\"View Payment \"\r\n                footer={null}\r\n                onCancel={() => { \r\n                    setEditOS('');\r\n                    setEditEmission(new Date());\r\n                    setEditStatus('');\r\n                    setEditClient('');\r\n                    setEditPaymentType('');\r\n                    setEditAmount(0);\r\n                    setEditReceived(0);\r\n                    setEditBalance(0);\r\n                    setEditLastPayment(new Date());\r\n                    setEditWorkDetail('');\r\n                    setEditOrderDetail('');\r\n                    setCollectHistory([]);\r\n                    setVisible1(!visible1); }}\r\n            >\r\n                <form encType='multipart/form-data'>\r\n\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\"  style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>Order Detail:</label>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <a href={editOrderDetail}>view</a>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\"  style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>Service Order Number:</label>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\"  style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>{editOS}</label>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <label style={{fontSize:'larger'}}>Emission:</label>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\">\r\n                            <label style={{fontSize:'larger'}}>{pad((new Date(editEmission)).getDate())}/{pad((new Date(editEmission)).getMonth()+1)}/{(new Date(editEmission)).getFullYear()}</label>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>Status:</label>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>{editStatus}</label>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>Client</label>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>{editClient}</label>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    {/* <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>Payment Type:</label>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>{editPaymentType}</label>\r\n                        </MDBCol>\r\n                    </MDBRow> */}\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>Amount:</label>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>{editAmount}</label>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>Received Amount:</label>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\" style={{textAlign:'left'}}>\r\n                            <label style={{fontSize:'larger'}}>{editReceived}</label>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" >\r\n                            <label style={{fontSize:'larger'}}>Last Payment Date:</label>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\" >\r\n                            <label style={{fontSize:'larger'}}>{pad((new Date(editLastPayment)).getDate())}/{pad((new Date(editLastPayment)).getMonth()+1)}/{(new Date(editLastPayment)).getFullYear()}</label>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\" >\r\n                            <label style={{fontSize:'larger'}}>Payment History:</label>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md={12}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>PaymentType</TableCell>\r\n                                        <TableCell>CollectAmount</TableCell>\r\n                                        <TableCell>PaymentDate</TableCell>\r\n                                        <TableCell>Receipt</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {\r\n                                    collectHistory.length?\r\n                                        collectHistory.map(item=>{\r\n                                            return(\r\n                                                <TableRow>\r\n                                                    <TableCell>{item.paymentType?item.paymentType:null}</TableCell>\r\n                                                    <TableCell>{item.collectAmount?item.collectAmount:0}</TableCell>\r\n                                                    <TableCell>{item.paymentDate?pad((new Date(item.paymentDate)).getDate())+'/'+pad((new Date(item.paymentDate)).getMonth()+1)+'/'+(new Date(item.paymentDate)).getFullYear():null}</TableCell>\r\n                                                    <TableCell>{item.receipt?<a href={item.receipt}>view</a>:null}</TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                                \r\n                                    :null\r\n                                }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </form>\r\n            </Modal>\r\n\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default Financ;","import React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport './editor.css';\nimport { Modal } from 'antd';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Upload from './Upload'\nconst { confirm } = Modal;\n\nconst Portfolio = () => {\n    // detail, sector\n    const [sector, setSector] = useState('');\n    const [detail, setDetail] = useState('');\n    const [image, setImage] = useState('');\n    const [portfolios, setPortfolios] = useState('');\n\n    const [id, setId] = useState('');\n    const [editsector, setEditSector] = useState('');\n    const [editdetail, setEditdetail] = useState('');\n    const [editimage, seteditImage] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [defaultimage, setDefaultImage] = useState(undefined);\n\n    const [descModal, setdescModal] = useState(false);\n    const [descModalDetails, setdescModalDetails] = useState('');\n\n    const [optionData, setOptionData] = useState('');\n    const [successMsg, setSuccessMsg] = useState('');\n    useEffect(() => {\n        fetchPortfolioData();\n        fetch('/managesector', {\n              method: 'GET',\n            }).then(res => res.json())\n              .then((res) => {\n                if (!!res.result) {\n                let data = res.result;      \n                let categorydata = [];\n                for (var i = data.length - 1; i >= 0; i--) {\n                  if(data[i].sector === 'Category') categorydata.push(data[i]);\n                }\n                let optionItems_category = categorydata.map((data) =>\n                        <MenuItem value={data.title}>{data.title}</MenuItem>\n                    );\n                setOptionData(optionItems_category);\n        }\n      });\n    }, []);\n    \n    \n    const submitHandler = (e) => {\n        e.preventDefault();\n        let data = new FormData();\n        data.append('detail', detail);\n        data.append('sector', sector);\n        data.append('file', image);\n        if(!image || !detail || !sector){\n            alert(\"Please enter details, sector and image correctly!\");\n        }else{\n            fetch('/portfolio', {\n            method: 'POST',\n            body: data\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    fetchPortfolioData();\n                    setSuccessMsg(\"Successfully saved!\");\n                }\n            })\n            .catch(error => {\n                console.log('Please check your connection');\n            })\n        }\n    }\n\n    const descModalHandleCancel = () => {\n        setdescModal(false)\n    }\n\n    const handleImage = (file) => {\n        setSuccessMsg('');\n        setImage(file)\n    }\n    const imageSelectedEditHandler = (file) => {\n        seteditImage(file)\n    }\n    const fetchPortfolioData = () => {\n        setDetail('');\n        setSector('');\n        setImage('');\n        fetch(`/portfolio`)\n            .then(res => res.json())\n            .then(res => {\n                setPortfolios(res.result)\n            })\n            .catch(error => {\n                console.log('Please check your connection..!');\n            })\n    }\n    const edit = (id) => {\n        let editableArrary = portfolios.filter(item => item._id === id);\n        const [editable = {}] = editableArrary;\n        const { _id = '', detail = '', sector = '', image = '' } = editable;\n        setId(_id);\n        setEditSector(sector);\n        setDefaultImage(image);\n        setEditdetail(detail);\n        setVisible(!visible);\n    }\n    const handleEdit = (e) => {\n        e.preventDefault()\n        let data = new FormData();\n        data.append('detail', editdetail);\n        data.append('sector', editsector);\n        if (editimage !== '') {\n            data.append('file', editimage);\n        } else {\n            data.append('file', image);\n        }\n\n            fetch(`/portfolio/${id}`, {\n            method: 'PATCH',\n            body: data,\n        }).then(res => {\n            if (res.status === 201) {\n                setId('');\n                setEditSector('');\n                setEditdetail('');\n                seteditImage('');\n                setVisible(!visible);\n                fetchPortfolioData();\n            }\n        })\n\n    }\n    const deleteHandler = (id) => {\n        fetch(`/portfolio/${id}`, {\n            method: 'DELETE',\n            headers: { 'content-type': 'application/json' }\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    fetchPortfolioData();\n                }\n            })\n    }\n    const showDeleteConfirm = (id) => {\n        confirm({\n            title: 'Do you Want to delete this item?',\n            onOk() {\n                deleteHandler(id);\n            },\n            onCancel() {\n                console.log('Cancel', id);\n            },\n        });\n    }\n\n    return (\n        <MDBContainer>\n            <p className=\"h4 text-center mb-4\">Portfolio</p> \n            <MDBRow>\n                <MDBCol md=\"6\">\n                    <form onSubmit={submitHandler} encType='multipart/form-data'>\n\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <MDBInput\n                                    label=\"Details\"\n                                    type=\"text\"\n                                    value={detail}\n                                    onChange={(e) => {\n                                        setDetail(e.target.value);\n                                        setSuccessMsg('');\n                                    }}\n                                />\n                            </MDBCol>\n                        </MDBRow>\n\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <FormControl style={{ width: '100%', textAlign: 'left' }}>\n                                    <InputLabel htmlFor=\"Sector\" style={{ width: '100%', textAlign: 'left' }}>Sector</InputLabel>\n                                    <Select\n                                        style={{ width: '100%', textAlign: 'left' }}\n                                        value={sector}\n                                        onChange={(e) => {\n                                            setSector(e.target.value);\n                                            setSuccessMsg('');\n                                        }}\n                                        inputProps={{\n                                            name: 'Sector',\n                                            id: 'Sector',\n                                        }}\n                                    >\n                                        {optionData}\n                                    </Select>\n                                </FormControl>\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <Upload handleImage={handleImage} />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\" style={{textAlign:'center'}}>\n                                <p style={{textAlign:'center',backgroundColor:'green', color:'white'}} >{successMsg}</p>\n                            </MDBCol>\n                            \n                        </MDBRow>\n                        <div className=\"text-center mt-4\">\n                            <MDBBtn color=\"info\" outline type=\"submit\">\n                                Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n                            </MDBBtn>\n                        </div>\n                    </form>\n                </MDBCol>\n                <MDBCol md=\"6\">\n                    <MDBTable style={{ marginTop: '25px', }}>\n                        <MDBTableHead >\n                            <tr>\n                                <th>Image</th>\n                                <th>Details</th>\n                                <th>Sector</th>\n                                <th>Actions</th>\n                            </tr>\n                        </MDBTableHead>\n                        <MDBTableBody>\n                            {\n                                portfolios.length ?\n                                    portfolios.map(item => {\n                                        return (\n                                            <tr key={item._id}>\n                                                <td>\n                                                    <img\n                                                        width={50}\n                                                        alt={item._id}\n                                                        src={`/${item.image}`}\n                                                    />\n                                                </td>\n                                                <td onClick={() => {\n                                                    setdescModalDetails(item)\n                                                    setdescModal(true)\n                                                }}>{item.detail.substring(0, 35)}</td>\n                                                <td>{item.sector}</td>\n                                                <td>\n                                                    <DeleteForeverIcon onClick={() => showDeleteConfirm(item._id)} />\n                                                    <EditIcon onClick={() => edit(item._id)} />\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                    : null\n                            }\n                        </MDBTableBody>\n                    </MDBTable>\n                </MDBCol>\n            </MDBRow>\n            <Modal\n                visible={visible}\n                title=\"Edit \"\n                onOk={handleEdit}\n                onCancel={() => { setVisible(!visible) }}\n            >\n                <form encType='multipart/form-data'>\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <MDBInput\n                                label=\"Detail\"\n                                type=\"text\"\n                                value={editdetail}\n                                onChange={(e) => {\n                                    let editdetail = e.target.value;\n                                    setEditdetail(editdetail);\n                                }}\n                            />\n                        </MDBCol>\n                    </MDBRow>\n\n                    <MDBRow style={{ marginTop: '2%' }}>\n                        <MDBCol md={12}>\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\n                                <InputLabel htmlFor=\"Sector\" style={{ width: '100%', textAlign: 'left' }}>Sector</InputLabel>\n                                <Select\n                                    style={{ width: '100%', textAlign: 'left' }}\n                                    value={editsector}\n                                    onChange={(e) => {\n                                        let editsector = e.target.value;\n                                        setEditSector(editsector);\n\n                                    }}\n                                    inputProps={{\n                                        name: 'Sector',\n                                        id: 'Sector',\n                                    }}\n                                >\n                                    {optionData}\n                                </Select>\n                            </FormControl>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <Upload handleImage={imageSelectedEditHandler} defaultV={`/${defaultimage}`} />\n                        </MDBCol>\n                    </MDBRow>\n                </form>\n            </Modal>\n            <Modal\n                title=\"Description\"\n                visible={descModal}\n                footer={null}\n                onCancel={descModalHandleCancel}\n            >\n                <p>{descModalDetails.detail}</p>\n            </Modal>\n        </MDBContainer>\n    );\n};\n\nexport default Portfolio;","import React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Rating from '@material-ui/lab/Rating';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { Modal } from 'antd';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Upload from './Upload'\n\nconst { confirm } = Modal;\n\nconst OurTeam = () => {\n    // name, rating, description\n    const [rating, setRating] = useState(0);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [teams, setTeams] = useState('');\n\n    const [id, setId] = useState('');\n    const [editrating, setEditrating] = useState('');\n    const [editname, setEditName] = useState('');\n    const [editdes, setEditDes] = useState('');\n    const [editimage, seteditImage] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [defaultimage, setDefaultImage] = useState(undefined);\n\n    const [descModal, setdescModal] = useState(false);\n    const [descModalDetails, setdescModalDetails] = useState('');\n    const [successMsg, setSuccessMsg] = useState('');\n    const submitHandler = (e) => {\n        e.preventDefault();\n        let data = new FormData();\n        data.append('name', name);\n        data.append('rating', rating);\n        data.append('description', description);\n        data.append('file', image);\n        if(!image){\n            alert(\"Please enter an image!\");\n        }else{\n            fetch('/team', {\n            method: 'POST',\n            body: data\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    setSuccessMsg(\"Successfully saved!\");\n                    fetchTeamData();   \n                }\n            })\n            .catch(error => {\n                console.log('Please check your connection');\n            })\n        }\n    }\n\n    const handleImage = (file) => {\n        setImage(file);\n        setSuccessMsg('');\n    }\n    const imageSelectedEditHandler = (file) => {\n        seteditImage(file)\n    }\n    const descModalHandleCancel = () => {\n        setdescModal(false)\n    }\n    const edit = (id) => {\n        let editableArrary = teams.filter(item => item._id === id);\n        const [editable = {}] = editableArrary;\n        const { _id = '', description = '', name = '', rating = '', image = '' } = editable;\n        setId(_id);\n        setEditrating(rating);\n        setEditName(name);\n        setDefaultImage(image);\n        seteditImage(image);\n        setEditDes(description);\n        setVisible(!visible);\n    }\n    const handleEdit = (e) => {\n        e.preventDefault()\n        let data = new FormData();\n        data.append('name', editname);\n        data.append('rating', editrating);\n        data.append('description', editdes);\n        if (editimage !== '') {\n            data.append('file', editimage);\n        } else {\n            data.append('file', image);\n        }\n            fetch(`/team/${id}`, {\n            method: 'PATCH',\n            body: data,\n        }).then(res => {\n            if (res.status === 201) {\n                setId('');\n                setEditrating('');\n                setEditName('');\n                setEditDes('');\n                seteditImage('');\n                setVisible(!visible);\n                fetchTeamData();\n            }\n        })\n    }\n    const fetchTeamData = () => {\n        setRating(0);\n        setDescription('');\n        setName('');\n        setImage('');\n        fetch(`/team`)\n            .then(res => res.json())\n            .then(res => {\n                setTeams(res.result)\n            })\n            .catch(error => {\n                console.log('Please check your connection..!');\n            })\n    }\n    useEffect(() => {\n        fetchTeamData();\n    }, []);\n    const deleteHandler = (id) => {\n        fetch(`/team/${id}`, {\n            method: 'DELETE',\n            headers: { 'content-type': 'application/json' }\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    fetchTeamData();\n                }\n            })\n    }\n    const showDeleteConfirm = (id) => {\n        confirm({\n            title: 'Do you Want to delete this item?',\n            onOk() {\n                deleteHandler(id);\n            },\n            onCancel() {\n                console.log('Cancel', id);\n            },\n        });\n    }\n\n    return (\n        <MDBContainer>\n            <p className=\"h4 text-center mb-4\">Team</p>\n            <MDBRow>\n                <MDBCol md=\"6\">\n                    <form onSubmit={submitHandler} encType='multipart/form-data'>\n\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <MDBInput\n                                    label=\"Name\"\n                                    type=\"text\"\n                                    value={name}\n                                    onChange={(e) => {\n                                        setName(e.target.value);\n                                        setSuccessMsg('');\n                                    }}\n                                />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <Rating name='rating' value={rating} precision={0.5} onChange={(e) => {\n                                    setRating(parseFloat(e.target.value));\n                                    setSuccessMsg('');\n                                }} />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <MDBInput\n                                    type=\"textarea\"\n                                    label=\"Description\"\n                                    rows=\"3\"\n                                    value={description}\n                                    onChange={(e) => {\n                                        setDescription(e.target.value);\n                                        setSuccessMsg('');\n                                    }}\n                                />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <Upload handleImage={handleImage} />\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\" style={{textAlign:'center'}}>\n                                <p style={{textAlign:'center',backgroundColor:'green', color:'white'}} >{successMsg}</p>\n                            </MDBCol>\n                        </MDBRow>                       \n                        <div className=\"text-center mt-4\">\n                            <MDBBtn color=\"info\" outline type=\"submit\">\n                                Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n                            </MDBBtn>\n                        </div>\n                    </form>\n                </MDBCol>\n                <MDBCol md=\"6\">\n                    <MDBTable style={{ marginTop: '25px', }}>\n                        <MDBTableHead >\n                            <tr>\n                                <th>Image</th>\n                                <th>Name</th>\n                                <th>Rating</th>\n                                <th>Description</th>\n                                <th>Actions</th>\n                            </tr>\n                        </MDBTableHead>\n                        <MDBTableBody>\n                            {\n                                teams.length ?\n                                    teams.map(item => {\n                                        return (\n                                            <tr key={item._id}>\n                                                <td>\n                                                    <img\n                                                        width={50}\n                                                        alt={item._id}\n                                                        src={`/${item.image}`}\n                                                    />\n                                                </td>\n                                                <td>{item.name}</td>\n                                                <td>{item.rating}</td>\n                                                <td onClick={() => {\n                                                    setdescModalDetails(item)\n                                                    setdescModal(true)\n                                                }}>{item.description.substring(0, 15)}</td>\n                                                <td>\n                                                    <DeleteForeverIcon onClick={() => showDeleteConfirm(item._id)} />\n                                                    <EditIcon onClick={() => edit(item._id)} />\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                    : null\n                            }\n                        </MDBTableBody>\n                    </MDBTable>\n                </MDBCol>\n            </MDBRow>\n            <Modal\n                visible={visible}\n                title=\"Edit\"\n                onOk={handleEdit}\n                onCancel={() => { setVisible(!visible) }}\n            >\n                <form onSubmit={submitHandler} encType='multipart/form-data'>\n\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <MDBInput\n                                label=\"Name\"\n                                type=\"text\"\n                                value={editname}\n                                onChange={(e) => {\n                                    setEditName(e.target.value);\n                                }}\n                            />\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <Rating name='rating' value={editrating} precision={0.5} onChange={(e) => {\n                                setEditrating(parseFloat(e.target.value));\n                            }} />\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <MDBInput\n                                type=\"textarea\"\n                                label=\"Description\"\n                                rows=\"3\"\n                                value={editdes}\n                                onChange={(e) => {\n                                    setEditDes(e.target.value);\n                                }}\n                            />\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <Upload handleImage={imageSelectedEditHandler} defaultV={`/${defaultimage}`} />\n                        </MDBCol>\n                    </MDBRow>\n                </form>\n            </Modal>\n            <Modal\n                title=\"Description\"\n                visible={descModal}\n                footer={null}\n                onCancel={descModalHandleCancel}\n            >\n                <p>{descModalDetails.description}</p>\n            </Modal>\n        </MDBContainer>\n    );\n};\n\nexport default OurTeam;","import React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport './editor.css';\nimport { Modal } from 'antd';\nimport Upload from './Upload';\n\nconst { confirm } = Modal;\n\nconst News = () => {\n\n    const [sector, setSector] = useState('');\n    const [title, setTitle] = useState('');\n    const [des, setDes] = useState('');\n    const [image, setImage] = useState('');\n    const [news, setNews] = useState('');\n    const [id, setId] = useState('');\n    const [editsector, setEditSector] = useState('');\n    const [edittitle, setEditTitle] = useState('');\n    const [editdes, setEditDes] = useState('');\n    const [editimage, seteditImage] = useState('');\n    const [visible, setVisible] = useState(false);\n    const [defaultimage, setDefaultImage] = useState(undefined);\n\n    const [descModal, setdescModal] = useState(false);\n    const [descModalDetails, setdescModalDetails] = useState('');\n    const [optionData, setOptionData] = useState('');\n    const [successMsg, setSuccessMsg] = useState('');\n    useEffect(() => {\n        fetchNewsData();\n        fetch('/managesector', {\n          method: 'GET',\n        }).then(res => res.json())\n          .then((res) => {\n            if (!!res.result) {\n            let data = res.result;      \n            let categorydata = [];\n            for (var i = data.length - 1; i >= 0; i--) {\n              if(data[i].sector === 'Category') categorydata.push(data[i]);\n            }\n            let optionItems_category = categorydata.map((data) =>\n                    <MenuItem value={data.title}>{data.title}</MenuItem>\n                );\n            setOptionData(optionItems_category);\n        }\n      });\n    }, []);\n    const submitHandler = (e) => {\n        e.preventDefault();\n        let data = new FormData();\n        data.append('title', title);\n        data.append('description', des);\n        data.append('sector', sector);\n        data.append('file', image);\n        if(!title || !des || !sector || !image){\n            alert(\"Please enter title, description, sector and image correctly!\")\n        }else{\n            fetch('/news', {\n            method: 'POST',\n            body: data\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    fetchNewsData();\n                    setSuccessMsg(\"Successfully saved!\");\n                }\n            })\n            .catch(error => {\n                console.log('Please check your connection');\n            })\n        }\n    }\n    const descModalHandleCancel = () => {\n        setdescModal(false)\n    }\n    const handleImage = (file) => {\n        setSuccessMsg('');\n        setImage(file)\n    }\n    const imageSelectedEditHandler = (file) => {\n        seteditImage(file)\n    }\n    const fetchNewsData = () => {\n        setDes('');\n        setImage('');\n        setSector('');\n        setTitle('');\n        fetch(`/news`)\n            .then(res => res.json())\n            .then(res => {\n                setNews(res.result)\n            })\n            .catch(error => {\n                console.log('Please check your internet connection..!');\n            })\n    }\n    const edit = (id) => {\n        let editableArrary = news.filter(item => item._id === id);\n        const [editable = {}] = editableArrary;\n        const { _id = '', description = '', title = '', sector = '', image = '' } = editable;\n        setId(_id);\n        setEditSector(sector);\n        setEditTitle(title);\n        setDefaultImage(image);\n        setEditDes(description);\n        setVisible(!visible);\n    }\n    const handleEdit = (e) => {\n        e.preventDefault()\n        let data = new FormData();\n        data.append('title', edittitle);\n        data.append('description', editdes);\n        data.append('sector', editsector);\n        if (editimage !== '') {\n            data.append('file', editimage);\n        } else {\n            data.append('file', image);\n        }\n            fetch(`/news/${id}`, {\n            method: 'PATCH',\n            body: data,\n        }).then(res => {\n            if (res.status === 201) {\n                setId('');\n                setEditSector('');\n                setEditTitle('');\n                setEditDes('');\n                seteditImage('');\n                setVisible(!visible);\n                fetchNewsData();\n            }\n        })\n    }\n\n    const deleteHandler = (id) => {\n        fetch(`/news/${id}`, {\n            method: 'DELETE',\n            headers: { 'content-type': 'application/json' }\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    fetchNewsData();\n                }\n            })\n    }\n    const showDeleteConfirm = (id) => {\n        confirm({\n            title: 'Do you Want to delete this item?',\n            onOk() {\n                deleteHandler(id);\n            },\n            onCancel() {\n                console.log('Cancel', id);\n            },\n        });\n    }\n\n\n    return (\n        <MDBContainer className=\"text-center\">\n            <p className=\"h4 text-center mb-4\">News</p>\n            <MDBRow>\n                <MDBCol md=\"6\">\n                    <form onSubmit={submitHandler} encType='multipart/form-data'>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <MDBInput\n                                    label=\"Title\"\n                                    type=\"text\"\n                                    value={title}\n                                    onChange={(e) => {\n                                        setTitle(e.target.value);\n                                        setSuccessMsg('');\n                                    }}\n                                />\n                            </MDBCol>\n                        </MDBRow>\n\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <MDBInput\n                                    value={des}\n                                    onChange={(e) => {\n                                        setDes(e.target.value);\n                                        setSuccessMsg('');\n                                    }}\n                                    type=\"textarea\" label=\" News Description\" rows=\"3\" />\n                            </MDBCol>\n                        </MDBRow>\n\n\n                        <MDBRow style={{ marginTop: '2%' }}>\n                            <MDBCol md={12}>\n                                <FormControl style={{ width: '100%', textAlign: 'left' }}>\n                                    <InputLabel htmlFor=\"Sector\" style={{ width: '100%', textAlign: 'left' }}>Sector</InputLabel>\n                                    <Select\n                                        style={{ width: '100%', textAlign: 'left' }}\n                                        value={sector}\n                                        onChange={(e) => {\n                                            setSector(e.target.value);\n                                            setSuccessMsg('');\n                                        }}\n                                        inputProps={{\n                                            name: 'Sector',\n                                            id: 'Sector', \n                                        }}\n                                    >\n                                        {optionData}\n                                    </Select>\n                                </FormControl>\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\">\n                                <Upload handleImage={handleImage} />\n                                {/* <input\n                                    type='file'\n                                    onChange={handleImage}\n                                /> */}\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                            <MDBCol md=\"12\" style={{textAlign:'center'}}>\n                                <p style={{textAlign:'center',backgroundColor:'green', color:'white'}} >{successMsg}</p>\n                            </MDBCol>\n                        </MDBRow> \n                        <div className=\"text-center mt-4\">\n                            <MDBBtn color=\"info\" outline type=\"submit\">\n                                Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n                            </MDBBtn>\n                        </div>\n                    </form>\n                </MDBCol>\n                <MDBCol md=\"6\">\n                    <MDBTable style={{ marginTop: '25px', }}>\n                        <MDBTableHead >\n                            <tr>\n                                <th>Image</th>\n                                <th>Title</th>\n                                <th>Details</th>\n                                <th>Sector</th>\n                                <th>Actions</th>\n                            </tr>\n                        </MDBTableHead>\n                        <MDBTableBody>\n                            {\n                                news.length ?\n                                    news.map(item => {\n                                        return (\n                                            <tr key={item._id}>\n                                                <td>\n                                                    <img\n                                                        width={50}\n                                                        alt={item.title}\n                                                        src={`/${item.image}`}\n                                                    />\n                                                </td>\n                                                <td>{item.title}</td>\n                                                <td onClick={() => {\n                                                    setdescModalDetails(item)\n                                                    setdescModal(true)\n                                                }}>{item.description.substring(0, 35)}</td>\n                                                <td>{item.sector}</td>\n                                                <td>\n                                                    <DeleteForeverIcon onClick={() => showDeleteConfirm(item._id)} />\n                                                    <EditIcon onClick={() => edit(item._id)} />\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                    : null\n                            }\n                        </MDBTableBody>\n                    </MDBTable>\n                </MDBCol>\n            </MDBRow>\n            <Modal\n                visible={visible}\n                title=\"Edit\"\n                onOk={handleEdit}\n                onCancel={() => { setVisible(!visible) }}\n            >\n                <form encType='multipart/form-data'>\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <MDBInput\n                                label=\"Title\"\n                                type=\"text\"\n                                value={edittitle}\n                                onChange={(e) => {\n                                    let title = e.target.value;\n                                    setEditTitle(title);\n                                }}\n                            />\n                        </MDBCol>\n                    </MDBRow>\n\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <MDBInput\n                                value={editdes}\n                                onChange={(e) => {\n                                    let description = e.target.value;\n                                    setEditDes(description);\n\n                                }}\n                                type=\"textarea\" label=\" News Description\" rows=\"3\" />\n                        </MDBCol>\n                    </MDBRow>\n\n\n                    <MDBRow style={{ marginTop: '2%' }}>\n                        <MDBCol md={12}>\n                            <FormControl style={{ width: '100%', textAlign: 'left' }}>\n                                <InputLabel htmlFor=\"Sector\" style={{ width: '100%', textAlign: 'left' }}>Sector</InputLabel>\n                                <Select\n                                    style={{ width: '100%', textAlign: 'left' }}\n                                    value={editsector}\n                                    onChange={(e) => {\n                                        let editsector = e.target.value;\n                                        setEditSector(editsector);\n\n                                    }}\n                                    inputProps={{\n                                        name: 'Sector',\n                                        id: 'Sector',\n                                    }}\n                                >\n                                    <MenuItem value='A'>Sector A</MenuItem>\n                                    <MenuItem value='B'>Sector B</MenuItem>\n                                    <MenuItem value='C'>Sector C</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <Upload handleImage={imageSelectedEditHandler} defaultV={`/${defaultimage}`} />\n                            {/* <input\n                                type='file'\n                                onChange={imageSelectedEditHandler}\n                            /> */}\n                        </MDBCol>\n                    </MDBRow>\n                </form>\n            </Modal>\n            <Modal\n                title=\"Description\"\n                visible={descModal}\n                footer={null}\n                onCancel={descModalHandleCancel}\n            >\n                <p>{descModalDetails.description}</p>\n            </Modal>\n        </MDBContainer>\n    );\n};\n\nexport default News;","import React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\nimport Upload from './Upload';\n\nexport default () => {\n    const [title, setTitle] = useState('How We Are');\n    const [image, setImage] = useState('');\n    const [description, setDescription] = useState('');\n    const [mix, setMix] = useState([]);\n    const [defaultimage, setDefaultImage] = useState(undefined);\n    const [successMsg, setSuccessMsg]= useState('');\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log({ title, image, description });\n\n        let data = new FormData();\n        data.append('title', title);\n        data.append('description', description); \n        if(image !== ''){\n            data.append('file', image);\n        }\n            fetch('/mix', {\n            method: 'POST',\n            body: data \n        }).then(res => res.json())\n            .then((res) => {\n                //console.log(res);\n                setSuccessMsg(\"Successfully saved!\");\n            })\n              \n    }\n    const handleImage = (file) => {\n        setSuccessMsg('');\n        setImage(file);\n    }\n    const setValues = (value) => {\n        let defaultValues = mix.find(item => item.title === value);\n        if (!!defaultValues) {\n            const { title = '', description = '', image = ''  } = defaultValues;\n            setTitle(title);\n            setDefaultImage(image);\n            setDescription(description);\n        }\n    }\n    useEffect(() => {\n        fetch('/mix', {\n            method: 'GET',\n        }).then(res => res.json())\n            .then((res) => {\n                if (!!res.info) {\n                    setMix(res.info);\n                    let defaultValues = res.info.find(item => item.title === 'How We Are');\n                    if (!!defaultValues) {\n                        const { title, description, image = '' } = defaultValues;\n                        setTitle(title);\n                        setDefaultImage(image);\n                        setDescription(description);\n                    }\n                }\n            })\n    }, []);\n    return (\n        <MDBContainer>\n            <form className='about-form' onSubmit={handleSubmit}>\n                <p className=\"h4 text-center mb-4\">About</p>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{ margin: 'auto' }}>\n                        <div className=\"custom-control custom-radio custom-control-inline\">\n                            <input\n                                defaultChecked={(title === 'How We Are')}\n                                type=\"radio\"\n                                className=\"custom-control-input\"\n                                id=\"radio1\"\n                                name=\"about\" onClick={(e) => {\n                                    setValues('How We Are')\n                                    setTitle('How We Are');\n                                    setSuccessMsg('');\n                                }}\n                            />\n                            <label className=\"custom-control-label\" htmlFor=\"radio1\">How We Are</label>\n                        </div>\n                        <div className=\"custom-control custom-radio custom-control-inline\">\n                            <input\n                                defaultChecked={(title === 'Our Mission')}\n                                type=\"radio\" className=\"custom-control-input\" id=\"radio2\" name=\"about\" onClick={(e) => {\n                                    setValues('Our Mission')\n                                    setTitle('Our Mission');\n                                    setSuccessMsg('');\n                                }} />\n                            <label className=\"custom-control-label\" htmlFor=\"radio2\">Our Mission</label>\n                        </div>\n                        <div className=\"custom-control custom-radio custom-control-inline\">\n                            <input\n                                defaultChecked={(title === 'Our Values')}\n                                type=\"radio\" className=\"custom-control-input\" id=\"radio3\" name=\"about\" onClick={(e) => {\n                                    setValues('Our Values')\n                                    setTitle('Our Values');\n                                    setSuccessMsg('');\n                                }} />\n                            <label className=\"custom-control-label\" htmlFor=\"radio3\">Our Values</label>\n                        </div>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\">\n                        <MDBInput\n                            type=\"textarea\"\n                            label=\"Description\"\n                            rows=\"3\"\n                            value={description}\n                            onChange={(e) => {\n                                setDescription(e.target.value);\n                                setSuccessMsg('');\n                            }}\n                        />\n                    </MDBCol>\n                </MDBRow>\n                \n                <MDBRow>\n                    <MDBCol md=\"12\">\n                        <Upload handleImage={handleImage}   defaultV = {`/${defaultimage}`}/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"12\" style={{textAlign:'center'}}>\n                        <p style={{textAlign:'center',backgroundColor:'green', color:'white'}} >{successMsg}</p>\n                    </MDBCol>\n                </MDBRow>\n                <div className=\"text-center mt-4\">\n                    <MDBBtn color=\"info\" outline type=\"submit\">\n                        Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n                    </MDBBtn>\n                </div>\n            </form>\n\n        </MDBContainer>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\nimport Upload from './Upload';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nexport default () => {\n    const [title, setTitle] = useState('');\n    const [image, setImage] = useState('');\n    const [description, setDescription] = useState('');\n    const [mix, setMix] = useState([]);\n    const [defaultimage, setDefaultImage] = useState(undefined);\n    const [optionData, setOptionData] = useState('');\n    const [successMsg, setSuccessMsg]=useState('');\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log({ title, image, description });\n        let data = new FormData();\n        data.append('title', title);\n        data.append('description', description);\n        data.append('file', image);\n        if(!title){\n            alert(\"Please select sector!\");\n        }else{\n            fetch('/mix', {\n            method: 'POST',\n            body: data\n        }).then(res => res.json())\n            .then(() => {\n                setSuccessMsg(\"Successfully saved!\");\n            })\n        }\n    }\n\n    const handleImage = (file) => {\n       setImage(file);\n       setSuccessMsg('');\n    }\n\n    const setValues = (value) => {\n        let defaultValues = mix.find(item => item.title === value);\n        if (!!defaultValues) {\n            const { description = '', image = ''  } = defaultValues;\n            setDefaultImage(image);\n            setDescription(description);\n        }else{\n            setDescription('');\n            setDefaultImage('');\n        }\n    }\n    useEffect(() => {\n        fetch('/mix', {\n            method: 'GET',\n        }).then(res => res.json())\n            .then((res) => {\n                if (!!res.info) {\n                    setMix(res.info);\n                }\n            })\n        fetch('/managesector', {\n              method: 'GET',\n            }).then(res => res.json())\n              .then((res) => {\n                if (!!res.result) {\n                let data = res.result;      \n                let categorydata = [];\n                for (var i = data.length - 1; i >= 0; i--) {\n                  if(data[i].sector === 'Category') categorydata.push(data[i]);\n                }\n                let optionItems_category = categorydata.map((data) =>\n                        <MenuItem value={data.title}>{data.title}</MenuItem>\n                    );\n                setOptionData(optionItems_category);\n            }\n          });\n    }, []);\n    return (\n        <MDBContainer>\n            <form className='sectors-form' onSubmit={handleSubmit}>\n                <p className=\"h4 text-center mb-4\">Sectors</p>\n                        <MDBRow >\n                            <MDBCol md=\"6\" style={{ margin: 'auto' }}>\n                                <FormControl style={{ width: '100%', textAlign: 'left' }}>\n                                    <InputLabel htmlFor=\"Sector\" style={{ width: '100%', textAlign: 'left' }}>Sector</InputLabel>\n                                    <Select\n                                        style={{ width: '100%', textAlign: 'left' }}\n                                        value={title}\n                                        onChange={(e) => {\n                                            setTitle(e.target.value);\n                                            setValues(e.target.value);\n                                            setSuccessMsg('');\n                                        }}\n                                        inputProps={{\n                                            name: 'Sector',\n                                            id: 'Sector', \n                                        }}\n                                    >\n                                        {optionData}\n                                    </Select>\n                                </FormControl>\n                            </MDBCol>\n                        </MDBRow>        \n                <MDBRow>\n                    <MDBCol md=\"6\" style={{ margin: 'auto' }}>\n                        <MDBInput\n                            type=\"textarea\"\n                            label=\"Description\"\n                            rows=\"3\"\n                            value={description}\n                            onChange={(e) => {\n                                setDescription(e.target.value);\n                                setSuccessMsg('');\n                            }}\n                        />\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"6\" style={{ margin: 'auto' }}>\n                        <Upload handleImage={handleImage}  defaultV = {`/${defaultimage}`}/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol md=\"6\" style={{ margin: 'auto' }}>\n                        <p style={{textAlign:'center',backgroundColor:'green', color:'white'}} >{successMsg}</p>\n                    </MDBCol>\n                </MDBRow>\n                <div className=\"text-center mt-4\">\n                    <MDBBtn color=\"info\" outline type=\"submit\">\n                        Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n                    </MDBBtn>\n                </div>\n            </form>\n        </MDBContainer>\n    );\n};","import React, { useState, useEffect } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { Modal } from 'antd';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst Message = () => {\r\n    const [rating, setRating] = useState(0);\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const [id, setId] = useState('');\r\n    const [editrating, setEditrating] = useState('');\r\n    const [editname, setEditName] = useState('');\r\n    const [editdes, setEditDes] = useState('');\r\n    const [editEmail, setEditEmail] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const [descModal, setdescModal] = useState(false);\r\n    const [descModalDetails, setdescModalDetails] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = new FormData();\r\n        data.append('name', name);\r\n        data.append('rating', rating);\r\n        data.append('description', description);\r\n        data.append('email', email);\r\n        fetch('/message', {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchMessageData()\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your connection');\r\n            })\r\n    }\r\n\r\n    const descModalHandleCancel = () => {\r\n        setdescModal(false)\r\n    }\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        let data = new FormData();\r\n        data.append('name', editname);\r\n        data.append('rating', editrating);\r\n        data.append('description', editdes);\r\n        data.append('email',editEmail);\r\n        fetch(`/message/${id}`, {\r\n            method: 'PATCH',\r\n            body: data,\r\n        }).then(res => {\r\n            if (res.status === 201) {\r\n                setId('');\r\n                setEditrating('');\r\n                setEditName('');\r\n                setEditDes('');\r\n                setEditEmail('');\r\n                setVisible(!visible);\r\n                fetchMessageData();\r\n            }\r\n        })\r\n    }\r\n    const fetchMessageData = () => {\r\n        setRating(0);\r\n        setDescription('');\r\n        setName('');\r\n        setEmail('');\r\n        fetch(`/message`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setMessage(res.result)\r\n            })\r\n            .catch(error => {\r\n                console.log('Please check your connection..!');\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        fetchMessageData();\r\n    }, []);\r\n    const deleteHandler = (id) => {\r\n        fetch(`/message/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'content-type': 'application/json' }\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    fetchMessageData();\r\n                }\r\n            })\r\n    }\r\n    const showDeleteConfirm = (id) => {\r\n        confirm({\r\n            title: 'Do you Want to delete this item?',\r\n            onOk() {\r\n                deleteHandler(id);\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel', id);\r\n            },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <MDBContainer>\r\n            <p className=\"h4 text-center mb-4\">Messages from customers</p>\r\n            <MDBRow>\r\n                \r\n                <MDBCol md=\"12\">\r\n                    <MDBTable style={{ marginTop: '25px', }}>\r\n                        <MDBTableHead >\r\n                            <tr>                            \r\n                                <th>Name</th>\r\n                                <th>Email Address</th>\r\n                                {/*<th>Rating</th>*/}\r\n                                <th>Description</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {\r\n                                message.length ?\r\n                                    message.map(item => {\r\n                                        return (\r\n                                            <tr key={item._id}>\r\n                                                <td>{item.name}</td>\r\n                                                <td>{item.email}</td>\r\n                                                {/*<td>{item.rating}</td>*/}\r\n                                                <td onClick={() => {\r\n                                                    setdescModalDetails(item)\r\n                                                    setdescModal(true)\r\n                                                }}>{item.description.substring(0, 15)}</td>\r\n                                                <td>\r\n                                                    <DeleteForeverIcon onClick={() => showDeleteConfirm(item._id)} />\r\n                                                    {/*<EditIcon onClick={() => edit(item._id)} />*/}\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                    : null\r\n                            }\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Edit\"\r\n                onOk={handleEdit}\r\n                onCancel={() => { setVisible(!visible) }}\r\n            >\r\n                <form onSubmit={submitHandler} encType='multipart/form-data'>\r\n\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Name\"\r\n                                type=\"text\"\r\n                                value={editname}\r\n                                onChange={(e) => {\r\n                                    setEditName(e.target.value);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                label=\"Email\"\r\n                                type=\"text\"\r\n                                value={editEmail}\r\n                                onChange={(e) => {\r\n                                    setEditEmail(e.target.value);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <Rating name='rating' value={editrating} precision={0.5} onChange={(e) => {\r\n                                setEditrating(parseFloat(e.target.value));\r\n                            }} />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBInput\r\n                                type=\"textarea\"\r\n                                label=\"Description\"\r\n                                rows=\"3\"\r\n                                value={editdes}\r\n                                onChange={(e) => {\r\n                                    setEditDes(e.target.value);\r\n                                }}\r\n                            />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Description\"\r\n                visible={descModal}\r\n                footer={null}\r\n                onCancel={descModalHandleCancel}\r\n            >\r\n                <p>{descModalDetails.description}</p>\r\n            </Modal>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from \"react\";\nimport { Modal } from \"antd\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBIcon } from \"mdbreact\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Upload from \"./Upload\";\nimport { Switch } from \"antd\";\nimport { Input } from \"antd\";\nimport { Button } from \"antd\";\n\nexport default class ProductpopUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      provisible: false,\n      image: \"\",\n      soldby: \"unit\",\n      soldbyswt: \"normal \",\n      volumeswt: \"liter\",\n      weightswt: \"kg\",\n      portion: \"volume\",\n      measurementswt: \"cm\",\n      description: \"\",\n      swch: true,\n      barcode: \"\",\n      name: \"\",\n      price: \"\",\n      discount: \"\",\n      category: \"\",\n      subCategory: \"\",\n      model: \"\",\n      brand: \"\",\n      volumeValue: \"\",\n      weightValue: \"\",\n      lenght: \"\",\n      width: \"\",\n      depth: \"\",\n      height: \"\",\n      portionName: \"\",\n      portionswt: \"\",\n      portionValue: \"\",\n      data:[],\n      department:\"\"\n    };\n  }\n\n  componentDidMount(){\n    //let initialPlanets = [];\n    fetch('/managesector', {\n      method: 'GET',\n    }).then(res => res.json())\n      .then((res) => {\n        if (!!res.result) {\n          this.setState({data:res.result});\n\n        }\n      });\n  }\n  handleImage = file => {\n    this.setState({ image: file });\n  };\n  showProModal = e => { \n    e.preventDefault();\n    this.setState({ provisible: true });\n  };\n  handleCancel = e => {\n    this.setState({ provisible: false });\n    this.setState({nameError:''});\n    this.setState({priceError:''});\n    this.setState({discountError:''});\n  };\n\n  onChangeSoldBy = checked => {\n    checked === true\n      ? this.setState({ soldbyswt: \"normal\" })\n      : this.setState({ soldbyswt: \"m2\" });\n  };\n  onChangeVolume = checked => {\n    checked === true\n      ? this.setState({ volumeswt: \"liter\" })\n      : this.setState({ volumeswt: \"ml\" });\n  };\n  onChangeWeight = checked => {\n    checked === true\n      ? this.setState({ weightswt: \"kg\" })\n      : this.setState({ weightswt: \"grm\" });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    let data = new FormData();\n\n    let portionn = JSON.stringify({\n      portion: this.state.portion,\n      portionValue:\n        this.state.portion === \"volume\"\n          ? this.state.volumeValue\n          : this.state.weightValue,\n      portionswt:\n        this.state.portion === \"volume\"\n          ? this.state.volumeswt\n          : this.state.weightswt\n    });\n    let soldByObject = JSON.stringify({\n      soldBy: this.state.soldby,\n      soldbyswt:\n        this.state.soldby === \"measurement\" ? this.state.soldbyswt : \" \"\n    });\n    let measurement = JSON.stringify({\n      unit: this.state.measurementswt,\n      height: this.state.height,\n      width: this.state.width,\n      depth: this.state.depth,\n      lenght: this.state.length\n    });\n    if(this.state.name ===''){\n      this.setState({nameError:'please input product name!'})\n    }\n    if(this.state.price===''){\n      this.setState({priceError:'please input price!'})\n    }\n    if(100<=Number(this.state.discount)){\n      this.setState({discountError:'This field can not be large than 100%!'})\n    }\n    if(this.state.department===''||this.state.category===''||this.state.subCategory===''||this.state.model===''||this.state.brand===''){\n      alert(\"Please enter  department, category, sub_categoy, model and brand correctly!\");\n    }\n    if(this.state.name !==''&&this.state.price!==''&&100>Number(this.state.discount)&&this.state.department!==''\n    &&this.state.category!==''&&this.state.subCategory!==''&&this.state.model!==''&& this.state.brand!==''){\n      data.append(\"soldByObject\", soldByObject);\n      data.append(\"barcode\", this.state.barcode);\n      data.append(\"name\", this.state.name);\n      data.append(\"price\", this.state.price);\n      if(this.state.discount===''){\n        data.append(\"discount\", 0);\n      }else{\n        data.append(\"discount\", this.state.discount);\n      }\n      \n      data.append(\"department\", this.state.department);\n      data.append(\"category\", this.state.category);\n      data.append(\"subCategory\",this.state.subCategory);\n      data.append(\"model\", this.state.model);\n      data.append(\"brand\", this.state.brand);\n      data.append(\"description\", this.state.description);\n      data.append(\"portionn\", portionn);\n      data.append(\"measurement\", measurement);\n      data.append(\"file\", this.state.image);\n\n      if(!this.state.image){\n        alert(\"Please enter an image!\");\n      }else{\n        fetch(\"/product\", {\n        method: \"POST\",\n        body: data\n      })\n        .then(res => {\n          if (res.status === 200) {\n            this.props.fetchProductsHandler();\n            this.handleCancel();\n            this.setState({\n              description: \"\",\n              price: \"\",\n              name: \"\",\n              model: \"\",\n              subCategory: \"\",\n              department:\"\",\n              category: \"\",\n              brand: \"\",\n              barcode: \"\",\n              discount: \"\",\n              image: \"\",\n              weightValue: \"\",\n              volumeValue: \"\",\n              length: \"\",\n              width: \"\",\n              depth: \"\",\n              height: \"\"\n            });\n          }\n        })\n        .catch(error => {\n          console.log(\"Please check your connection\", error);\n        });\n      }\n    }\n  };\n\n  render() {\n        let data = this.state.data;\n        \n        \n        let categorydata = [];\n        let subcategorydata = [];\n        let branddata = [];\n        let brandmodeldata = [];\n        let departmentdata =[];\n        for (var i = data.length - 1; i >= 0; i--) {\n          if(data[i].sector === 'Department') departmentdata.push(data[i]);\n          if(data[i].sector === 'Category') categorydata.push(data[i]);\n          if(data[i].sector === 'Subcategory') subcategorydata.push(data[i]);\n          if(data[i].sector === 'Brand') branddata.push(data[i]);\n          if(data[i].sector === 'Model') brandmodeldata.push(data[i]);\n        }\n\n    return (\n      <>\n        <Button type=\"primary\" onClick={this.showProModal}>\n          <MDBIcon icon=\"plus\" /> Product\n        </Button>\n        <Modal\n          width=\"700px\"\n          visible={this.state.provisible}\n          title=\"Product\"\n          onCancel={this.handleCancel}\n          footer={null}\n        >\n          <form encType=\"multipart/form-data\">\n            <MDBRow>\n              <MDBCol md=\"8\">\n                <h6>\n                  <b>Product Sold By:</b>\n                </h6>\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    defaultChecked={this.state.soldby}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    id=\"radio1\"\n                    name=\"soldby\"\n                    onChange={e => {\n                      console.log(e);\n                      this.setState({\n                        soldby: \"unit\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio1\">\n                    Unit\n                  </label>\n                </div>\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    defaultChecked={this.state.soldby === \"portion\"}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    id=\"radio2\"\n                    name=\"soldby\"\n                    onClick={e => {\n                      this.setState({\n                        soldby: \"portion\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio2\">\n                    Portion\n                  </label>\n                </div>\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    defaultChecked={this.state.soldby === \"measurement\"}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    id=\"radio3\"\n                    name=\"soldby\"\n                    onClick={e => {\n                      this.setState({\n                        soldby: \"measurement\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio3\">\n                    Measurement\n                  </label>\n\n                  <div style={{ paddingLeft: \"13px\" }}>\n                    {\" \"}\n                    m<sup>2</sup>\n                    <Switch\n                      defaultChecked\n                      onChange={this.onChangeSoldBy}\n                      style={{ margin: \"0px 4px 0px 4px\" }}\n                    />\n                    Normal\n                  </div>\n                </div>\n              </MDBCol>\n              <MDBCol md=\"4\">\n                <Upload handleImage={this.handleImage} />\n              </MDBCol>\n            </MDBRow>\n\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <MDBInput\n                  label=\"Product Barcode\"\n                  type=\"text\"\n                  value={this.state.barcode}\n                  onChange={e => {\n                    let barcode = e.target.value;\n                    this.setState({ barcode });\n                  }}\n                />\n\n                <MDBInput\n                  label=\"Product Name\"\n                  type=\"text\"\n                  value={this.state.name}\n                  onChange={e => {\n                    let name = e.target.value;\n                    this.setState({ name });\n                    this.setState({nameError:''});\n                  }}\n                />\n                <p style={{color:'red'}}>{this.state.nameError}</p>\n                <MDBInput\n                  label=\"Product Price\"\n                  type=\"number\"\n                  min=\"0\"\n                  value={this.state.price}\n                  onChange={e => {\n                    let price = e.target.value;\n                    this.setState({ price });\n                    this.setState({priceError:''});\n                  }}\n                />\n                <p style={{color:'red'}}>{this.state.priceError}</p>\n                <MDBInput\n                  label=\"Product Discount in %\"\n                  type=\"number\"\n                  min=\"0\"\n                  max={this.state.price}\n                  value={this.state.discount}\n                  onChange={e => {\n                    this.setState({ discount: e.target.value });\n                    this.setState({discountError:''});\n                  }}\n                />\n                <p style={{color:'red'}}>{this.state.discountError}</p>\n              </MDBCol>\n            </MDBRow>\n            {\n              this.state.soldby === 'portion'?\n            <div>\n                <h6>\n              <b>Product Portion:</b>\n            </h6>\n            <br></br>\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    defaultChecked={this.state.portion === \"volume\"}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    id=\"radio4\"\n                    name=\"portion\"\n                    onClick={e => {\n                      this.setState({\n                        portion: \"volume\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio4\">\n                    Volume\n                  </label>\n                </div>\n\n                <div className=\"custom-control  custom-control-inline\">\n                  <span> ml</span>\n                  <Switch\n                    defaultChecked\n                    onChange={this.onChangeVolume}\n                    style={{ margin: \"0px 4px 0px 4px\" }}\n                  />\n                  <span> liter </span>\n                </div>\n                <Input\n                  defaultValue=\"00\"\n                  style={{ width: \"60px\", marginLeft: \"20px\" }}\n                  value={this.state.volumeValue}\n                  onChange={e => {\n                    e.preventDefault();\n                    this.setState({ volumeValue: e.target.value });\n                  }}\n                />\n              </MDBCol>\n              <MDBCol md=\"12\" style={{ marginTop: \"3%\" }}>\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    defaultChecked={this.state.portion === \"weight\"}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    id=\"radio5\"\n                    name=\"portion\"\n                    onClick={e => {\n                      this.setState({\n                        portion: \"weight\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio5\">\n                    Weight\n                  </label>\n                </div>\n                <div className=\"custom-control  custom-control-inline\">\n                  <span> grms</span>\n                  <Switch\n                    defaultChecked\n                    onChange={this.onChangeWeight}\n                    style={{ margin: \"0px 4px 0px 4px\", marginLeft: \"23px\" }}\n                  />\n                  <span> kg</span>\n                </div>\n                <Input\n                  defaultValue=\"00\"\n                  value={this.state.weightValue}\n                  onChange={e => {\n                    e.preventDefault();\n                    this.setState({\n                      weightValue: e.target.value\n                    });\n                  }}\n                  style={{ width: \"60px\", marginLeft: \"28px\" }}\n                />\n              </MDBCol>\n            </MDBRow>\n            </div>  :null\n            }\n            {this.state.soldby === 'measurement'?\n            <div>\n            <h6 style={{ marginTop: \"2%\" }}>\n              <b>Product Measurement:</b>\n            </h6>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    defaultChecked={this.state.measurementswt === \"cm\"}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    id=\"radio6\"\n                    name=\"measurementswt\"\n                    onClick={e => {\n                      this.setState({\n                        measurementswt: \"cm\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio6\">\n                    cm\n                  </label>\n                </div>\n                <div\n                  className=\"custom-control custom-radio custom-control-inline\"\n                  style={{ marginLeft: \"6%\" }}\n                >\n                  <input\n                    defaultChecked={this.state.measurementswt === \"meters\"}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    id=\"radio7\"\n                    name=\"measurementswt\"\n                    onClick={e => {\n                      this.setState({\n                        measurementswt: \"meters\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio7\">\n                    meters\n                  </label>\n                </div>\n              </MDBCol>\n              <MDBRow style={{ marginTop: \"4%\" }}>\n                <MDBCol md=\"12\">\n                  <div className=\"custom-control  custom-control-inline\">\n                    <Input\n                      defaultValue=\"00\"\n                      style={{ width: \"60px\" }}\n                      prefix=\"L:\"\n                      value={this.state.length}\n                      onChange={e => {\n                        e.preventDefault();\n                        this.setState({\n                          length: e.target.value\n                        });\n                      }}\n                    />\n                  </div>\n                  <div className=\"custom-control  custom-control-inline\">\n                    <Input\n                      defaultValue=\"00\"\n                      style={{ width: \"60px\" }}\n                      prefix=\"W:\"\n                      value={this.state.width}\n                      onChange={e => {\n                        e.preventDefault();\n                        this.setState({\n                          width: e.target.value\n                        });\n                      }}\n                    />\n                  </div>\n                  <div className=\"custom-control  custom-control-inline\">\n                    <Input\n                      defaultValue=\"00\"\n                      style={{ width: \"60px\" }}\n                      prefix=\"D:\"\n                      value={this.state.depth}\n                      onChange={e => {\n                        e.preventDefault();\n                        this.setState({\n                          depth: e.target.value\n                        });\n                      }}\n                    />\n                  </div>\n                  <div className=\"custom-control  custom-control-inline\">\n                    <Input\n                      defaultValue=\"00\"\n                      style={{ width: \"60px\" }}\n                      prefix=\"H:\"\n                      value={this.state.height}\n                      onChange={e => {\n                        e.preventDefault();\n                        this.setState({\n                          height: e.target.value\n                        });\n                      }}\n                    />\n                  </div>\n                </MDBCol>\n              </MDBRow>\n            </MDBRow>\n            </div>:null}          \n            <MDBRow style={{ marginTop: \"5%\" }}>\n              <MDBCol md={12}>\n                <FormControl style={{ width: \"100%\", textAlign: \"left\" }}>\n                  <InputLabel style={{ width: \"100%\", textAlign: \"left\" }}>\n                    Select a Department\n                  </InputLabel>\n                  <Select\n                    value={this.state.department}\n                    onChange={e => {\n                      this.setState({ department: e.target.value });\n                    }}\n                    style={{ width: \"100%\", textAlign: \"left\" }}\n                  >\n                    \n                    {this.state.data.length ? \n                      this.state.data.filter(it=>it.sector==='Department').map(item=>{return(\n                        <MenuItem value={item._id}>{item.title}</MenuItem>\n                      )})\n                    :null}\n                  </Select>\n                </FormControl>\n                <FormControl style={{ width: \"100%\", textAlign: \"left\" }}>\n                  <InputLabel style={{ width: \"100%\", textAlign: \"left\" }}>\n                    Select a Category\n                  </InputLabel>\n                  <Select\n                    value={this.state.category}\n                    onChange={e => {\n                      this.setState({ category: e.target.value });\n                    }}\n                    style={{ width: \"100%\", textAlign: \"left\" }}\n                  >\n                    {this.state.data.length && this.state.department? \n                      this.state.data.filter(it=>it.sector==='Category'&& it.parentId===this.state.department).map(item=>{return(\n                        <MenuItem value={item._id}>{item.title}</MenuItem>\n                      )})\n                    :null}\n                    {/* {optionItems_category} */}\n                  </Select>\n                </FormControl>\n                <FormControl style={{ width: \"100%\", textAlign: \"left\" }}>\n                  <InputLabel style={{ width: \"100%\", textAlign: \"left\" }}>\n                    Select a Sub Category\n                  </InputLabel>\n                  <Select\n                    value={this.state.subCategory}\n                    onChange={e => {\n                      this.setState({ subCategory: e.target.value });\n                    }}\n                    style={{ width: \"100%\", textAlign: \"left\" }}\n                  >\n                    {this.state.data.length && this.state.category? \n                      this.state.data.filter(it=>it.sector==='Subcategory'&& it.parentId===this.state.category).map(item=>{return(\n                        <MenuItem value={item._id}>{item.title}</MenuItem>\n                      )})\n                    :null}\n                    {/* {optionItems_subcategory} */}\n                  </Select>\n                </FormControl>\n                <FormControl style={{ width: \"100%\", textAlign: \"left\" }}>\n                  <InputLabel style={{ width: \"100%\", textAlign: \"left\" }}>\n                    Select a Brand\n                  </InputLabel>\n                  <Select\n                    value={this.state.model}\n                    onChange={e => {\n                      this.setState({ model: e.target.value });\n                    }}\n                    style={{ width: \"100%\", textAlign: \"left\" }}\n                  >\n                    {this.state.data.length?\n                      this.state.data.filter(it=>it.sector==='Brand').map(item=>{\n                        return(<MenuItem value={item._id}>{item.title}</MenuItem>)\n                      })\n                    :null}\n                  </Select>\n                </FormControl>\n                <FormControl style={{ width: \"100%\", textAlign: \"left\" }}>\n                  <InputLabel style={{ width: \"100%\", textAlign: \"left\" }}>\n                    Select a Model\n                  </InputLabel>\n                  <Select\n                    value={this.state.brand}\n                    onChange={e => {\n                      this.setState({ brand: e.target.value });\n                    }}\n                    style={{ width: \"100%\", textAlign: \"left\" }}\n                  >\n                    {this.state.data.length && this.state.model?\n                      this.state.data.filter(it=>it.sector==='Model' && it.parentId === this.state.model).map(item=>{\n                        return(<MenuItem value={item._id}>{item.title}</MenuItem>)\n                      })\n                    :null}\n                    {/* {optionItems_brand} */}\n                  </Select>\n                </FormControl>{\" \"}\n                \n              </MDBCol>\n            </MDBRow>\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <MDBInput\n                  type=\"textarea\"\n                  label=\" Product Description\"\n                  rows=\"2\"\n                  value={this.state.description}\n                  onChange={e => {\n                    this.setState({ description: e.target.value });\n                  }}\n                />\n              </MDBCol>\n            </MDBRow>\n\n            <div className=\"text-center mt-4\">\n              <MDBBtn color=\"info\" outline onClick={this.submitHandler}>\n                Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n              </MDBBtn>\n            </div>\n          </form>\n        </Modal>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Modal } from \"antd\";\nimport { MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from \"mdbreact\";\nimport { Button } from \"antd\";\nimport Upload from './Upload';\n\nexport default class ServicepopUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      servisible: false,\n      name: \"\",\n      description: \"\",\n      type: \"\",\n      price: \"\",\n      image: \"\"\n    };\n  }\n  submitHandler = e => {\n    e.preventDefault();\n    let data = new FormData();\n    data.append(\"type\", this.state.type);\n    data.append(\"description\", this.state.description);\n    data.append(\"price\", this.state.price);\n    data.append(\"name\", this.state.name);\n    data.append(\"file\", this.state.image);\n      fetch(\"/service\", {\n      method: \"POST\",\n      body: data\n    })\n      .then(res => {\n        if (res.status === 200) {\n          this.props.fetchServicesHandler();\n          this.setState({\n            type: \" \",\n            name: \"\",\n            price: \" \",\n            description: \" \",\n            image: \"\"\n          })\n          this.handleCancel();\n        }\n      })\n      .catch(error => {\n        console.log(\"Please check your connection\");\n      });\n    \n  };\n\n  showSerModal = e => {\n    e.preventDefault();\n    this.setState({ servisible: true });\n  };\n  handleCancel = e => {\n    this.setState({ servisible: false });\n  };\n\n  handleImage = file => {\n    this.setState({ image: file });\n  };\n  render() {\n    return (\n      <>\n        <Button type=\"primary\" onClick={this.showSerModal}>\n          <MDBIcon icon=\"plus\" /> Services\n        </Button>\n        <Modal\n          visible={this.state.servisible}\n          title=\"addService\"\n          onCancel={this.handleCancel}\n          footer={null}\n        >\n          <form>\n            <Upload handleImage={this.handleImage} />\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <MDBInput\n                  label=\"Type\"\n                  type=\"text\"\n                  name=\"type\"\n                  value={this.state.type}\n                  onChange={e => {\n                    this.setState({ type: e.target.value });\n                  }}\n                />\n\n                <MDBInput\n                  label=\"Name\"\n                  type=\"text\"\n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={e => {\n                    this.setState({ name: e.target.value });\n                  }}\n                />\n                <MDBInput\n                  label=\"Price\"\n                  type=\"text\"\n                  name=\"price\"\n                  value={this.state.price}\n                  onChange={e => {\n                    this.setState({ price: e.target.value });\n                  }}\n                />\n              </MDBCol>\n            </MDBRow>\n\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <MDBInput\n                  type=\"textarea\"\n                  label=\" Product Description\"\n                  rows=\"2\"\n                  name=\"des\"\n                  value={this.state.description}\n                  onChange={e => {\n                    this.setState({ description: e.target.value });\n                  }}\n                />\n              </MDBCol>\n            </MDBRow>\n            <div className=\"text-center mt-4\">\n              <MDBBtn color=\"info\" outline type=\"submit\" onClick={this.submitHandler}>\n                Save <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n              </MDBBtn>\n            </div>\n          </form>\n        </Modal>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBIcon,\n  MDBRow,\n  MDBInput,\n  MDBBtn,\n  MDBCol\n} from \"mdbreact\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Modal } from \"antd\";\nimport Upload from './Upload';\n\n\nconst { confirm } = Modal;\nexport default class FetchService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      services: [],\n      type: \"\",\n      name: \"\",\n      price: \"\",\n      description: \"\",\n      id: \"\",\n      servisible: false,\n      descModal: false,\n      descModalDetails: '',\n      image: \"\"\n      // service:\"\"\n    };\n  }\n\n  deleteHandler = id => {\n    fetch(`/service/${id}`, {\n      method: \"DELETE\",\n      headers: { \"content-type\": \"application/json\" }\n    }).then(res => {\n      if (res.status === 200) {\n        this.props.fetchServicesHandler();\n      }\n    });\n  };\n  showDeleteConfirm = id => {\n    const state = this;\n    confirm({\n      title: \"Do you Want to delete this item?\",\n      onOk() {\n        state.deleteHandler(id);\n      },\n      onCancel() {\n        console.log(\"Cancel\", id);\n      }\n    });\n  };\n\n  edit = id => {\n    let editableArrary = this.props.services.filter(item => item._id === id);\n    const [editable = {}] = editableArrary;\n    const { _id = \"\", description = \"\", type = \"\", name = \"\", price = \"\",image = \"\" } = editable;\n    this.setState({\n      id: _id,\n      description,\n      type,\n      name,\n      price,\n      image\n    });\n\n    this.setState({ servisible: true });\n  };\n\n  handleEdit = e => {\n    e.preventDefault();\n    let data = new FormData();\n    data.append(\"type\", this.state.type);\n    data.append(\"description\", this.state.description);\n    data.append(\"name\", this.state.name);\n    data.append(\"price\", this.state.price);\n    data.append(\"file\", this.state.image);\n    if(!this.state.image){\n      alert(\"Please enter an image!\");\n    }else{\n      fetch(`/service/${this.state.id}`, {\n      method: \"PATCH\",\n      body: data\n    }).then(res => {\n      if (res.status === 201) {\n        this.setState({\n          id: \"\",\n          description: \"\",\n          type: \"\",\n          name: \"\",\n          price: \"\"\n        });\n        this.setState({ servisible: false });\n        this.props.fetchServicesHandler();\n      }\n    });\n    }\n  };\n\n  descModalHandleCancel = () => {\n    this.setState({ descModal: false })\n  }\n\n  handleImage = file => {\n    this.setState({ image: file });\n  };\n\n  render() {\n    const { services } = this.props;\n    const { descModalDetails } = this.state;\n    return (\n      <div>\n        <MDBCol md=\"8\" style={{ margin: \"auto\" }}>\n          <MDBTable>\n            <MDBTableHead>\n              <tr>\n                <th>Image</th>\n                <th>Type</th>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Description</th>\n                <th>Actions</th>\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n              {services.length &&\n                services.map(item => {\n                  return (\n                    <tr key={item._id}>\n                      <td><img\n                          width={50} \n                          alt={item.name}\n                          src={`/${item.image}`}\n                        /></td>\n                      <td>{item.type}</td>\n                      <td>{item.name}</td>\n                      <td>{item.price}</td>\n                      <td onClick={() => this.setState({ descModal: true, descModalDetails: item })}>{item.description.substring(0, 35)}</td>\n                      <td>\n                        <DeleteForeverIcon\n                          onClick={() => {\n                            this.showDeleteConfirm(item._id);\n                          }}\n                        />\n                        <EditIcon\n                          onClick={() => {\n                            this.edit(item._id);\n                          }}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n            </MDBTableBody>\n          </MDBTable>\n        </MDBCol>\n        <Modal\n          visible={this.state.servisible}\n          title=\" Update Service\"\n          //  onOk={this.handleEdit}\n          onCancel={() => {\n            this.setState({ servisible: false });\n          }}\n          footer={null}\n        >\n          <form>\n            <Upload handleImage={this.handleImage} defaultV={`/${this.state.image}`}/>\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <MDBInput\n                  label=\"Type\"\n                  type=\"text\"\n                  name=\"type\"\n                  value={this.state.type}\n                  onChange={e => {\n                    this.setState({ type: e.target.value });\n                  }}\n                />\n\n                <MDBInput\n                  label=\"Name\"\n                  type=\"text\"\n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={e => {\n                    this.setState({ name: e.target.value });\n                  }}\n                />\n                <MDBInput\n                  label=\"Price\"\n                  type=\"text\"\n                  name=\"price\"\n                  value={this.state.price}\n                  onChange={e => {\n                    this.setState({ price: e.target.value });\n                  }}\n                />\n              </MDBCol>\n            </MDBRow>\n\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <MDBInput\n                  type=\"textarea\"\n                  label=\" Product Description\"\n                  rows=\"2\"\n                  name=\"des\"\n                  value={this.state.description}\n                  onChange={e => {\n                    this.setState({ description: e.target.value });\n                  }}\n                />\n              </MDBCol>\n            </MDBRow>\n            <div className=\"text-center mt-4\">\n              <MDBBtn\n                color=\"info\"\n                outline\n                type=\"submit\"\n                onClick={this.handleEdit}\n              >\n                update <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n              </MDBBtn>\n            </div>\n          </form>\n        </Modal>\n        <Modal\n          title=\"Description\"\n          visible={this.state.descModal}\n          footer={null}\n          onCancel={this.descModalHandleCancel}\n        >\n          <p>{descModalDetails.description}</p>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Modal } from \"antd\";\nimport {\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBIcon\n} from \"mdbreact\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Upload from \"./Upload\";\nimport { Switch } from \"antd\";\nimport { Input } from \"antd\";\n\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst { confirm } = Modal;\nexport default class FetchProducts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      id: \"\",\n      provisible: false,\n      image: \"\",\n      soldby: \" \",\n      portion: \"\",\n      measurementswt: \"\",\n      description: \"\",\n      swch: true,\n      barcode: \"\",\n      name: \"\",\n      price: \"\",\n      discount: \"\",\n      department:\"\",\n      category: \"\",\n      subCategory: \"\",\n      model: \"\",\n      brand: \"\",\n      weightValue: \"\",\n      volumeValue: \"\",\n      lenght: \"\",\n      width: \"\",\n      depth: \"\",\n      height: \" \",\n      soldbyswt: \" \",\n      volumeswt: \"\",\n      weightswt: \"\",\n      descModal: false,\n      descModalDetails: '',\n      data:[],\n\n      nameError:'',\n      priceError:'',\n      discountError:''\n    };\n  }\n  componentDidMount(){\n    //let initialPlanets = [];\n    fetch('/managesector', {\n      method: 'GET',\n    }).then(res => res.json())\n      .then((res) => {\n        if (!!res.result) {\n          this.setState({data:res.result});\n\n        }\n      });\n  }\n  descModalHandleCancel = () => {\n    this.setState({ descModal: false })\n  }\n  handleImage = (file)=>{\n    this.setState({image: file});\n\n  }\n  showDeleteConfirm = id => {\n    const state = this;\n    confirm({\n      title: \"Do you Want to delete this item?\",\n      onOk() {\n        state.deleteHandler(id);\n      },\n      onCancel() {\n        console.log(\"Cancel\", id);\n      }\n    });\n  };\n  deleteHandler = id => {\n    fetch(`/product/${id}`, {\n      method: \"DELETE\",\n      headers: { \"content-type\": \"application/json\" }\n    }).then(res => {\n      if (res.status === 200) {\n        this.props.fetchProductsHandler();\n      }\n    });\n  };\n  edit = id => {\n    let editableArrary = this.props.products.filter(item => item._id === id);\n    const [editable = {}] = editableArrary;\n    const {\n      _id = \"\",\n      description = \"\",\n      discount = \"\",\n      name = \"\",\n      price = \"\",\n      barcode = \"\",\n      department = \"\",\n      category = \"\",\n      subCategory = \"\",\n      model = \" \",\n      brand = \" \",\n      measurement = \" \",\n      soldByObject = \" \",\n      portionn = \" \",\n      image = \" \"\n    } = editable;\n    const {\n      unit = \" \",\n      lenght = \" \",\n      width = \" \",\n      height = \" \",\n      depth = \" \"\n    } = measurement;\n    const { soldBy = \" \", soldbyswt = \" \" } = soldByObject;\n    const { portion = \" \", portionswt = \" \", portionValue = \" \" } = portionn;\n    this.setState({\n      id: _id,\n      description,\n      price,\n      name,\n      model,\n      subCategory,\n      category,\n      department,\n      brand,\n      barcode,\n      discount,\n      length: lenght,\n      soldby: soldBy,\n      soldbyswt,\n      measurementswt: unit,\n      height,\n      width,\n      portion,\n      depth,\n      image,\n      provisible: true,\n      //portion\n    });\n\n    portion === \"volume\"\n      ? this.setState({ volumeswt: portionswt })\n      : this.setState({ weightswt: portionswt });\n    portion === \"volume\"\n      ? this.setState({ volumeValue: portionValue })\n      : this.setState({ weightValue: portionValue });\n  };\n\n  handleEdit = e => {\n    e.preventDefault();\n    let data = new FormData();\n    let portionn = JSON.stringify({\n      portion: this.state.portion,\n      portionValue:\n        this.state.portion === \"volume\"\n          ? this.state.volumeValue\n          : this.state.weightValue,\n      portionswt:\n        this.state.portion === \"volume\"\n          ? this.state.volumeswt\n          : this.state.weightswt\n    });\n\n    let soldByObject = JSON.stringify({\n      soldBy: this.state.soldby,\n      soldbyswt: this.state.soldby === \"measurement\" ? this.state.soldbyswt : \"\"\n    });\n    let measurement = JSON.stringify({\n      unit: this.state.measurementswt,\n      height: this.state.height,\n      weight: this.state.width,\n      depth: this.state.depth,\n      lenght: this.state.length\n    });\n    if(this.state.name ===''){\n      this.setState({nameError:'please input product name!'})\n    }\n    if(this.state.price===''){\n      this.setState({priceError:'please input price!'})\n    }\n    if(100<=Number(this.state.discount)){\n      this.setState({discountError:'This field can not be large than 100%!'})\n    }\n    if(this.state.department===''||this.state.category===''||this.state.subCategory===''||this.state.model===''||this.state.brand===''){\n      alert(\"Please enter  department, category, sub_categoy, model and brand correctly!\");\n    }\n    if(this.state.name !==''&&this.state.price!==''&& 100 > Number(this.state.discount)&&this.state.department!==''\n    &&this.state.category!==''&&this.state.subCategory!==''&&this.state.model!==''&& this.state.brand!==''){\n      data.append(\"soldByObject\", soldByObject);\n      data.append(\"barcode\", this.state.barcode);\n      data.append(\"name\", this.state.name);\n      data.append(\"price\", this.state.price);\n      if(this.state.discount===''){\n        data.append(\"discount\", 0);\n      }else{\n        data.append(\"discount\", this.state.discount);\n      }\n      data.append(\"department\",this.state.department);\n      data.append(\"category\", this.state.category);\n      data.append(\"subCategory\", this.state.subCategory);\n      data.append(\"brand\", this.state.brand);\n      data.append(\"model\", this.state.model);\n      data.append(\"description\", this.state.description);\n      data.append(\"portionn\", portionn);\n      data.append(\"measurement\", measurement);\n      data.append(\"file\", this.state.image);\n      if(!this.state.image){\n        alert(\"Please enter an image!\");\n      }else{\n        fetch(`/product/${this.state.id}`, {\n        method: \"PATCH\",\n        body: data\n      }).then(res => {\n        if (res.status === 201) {\n          this.setState({\n            id: \" \",\n            description: \"\",\n            price: \"\",\n            name: \"\",\n            model: \"\",\n            subCategory: \"\",\n            category: \"\",\n            department:\"\",\n            brand: \"\",\n            barcode: \"\",\n            discount: \"\",\n            image: \"\",\n            weightValue: \"\",\n            volumeValue: \"\",\n            length: \"\",\n            width: \"\",\n            depth: \"\",\n            height: \"\",\n            measurementswt: \"\"\n          });\n          this.setState({ provisible: false });\n          this.props.fetchProductsHandler();\n          this.setState({nameError:''});\n          this.setState({priceError:''});\n          this.setState({discountError:''});\n        }\n      });\n      }\n    }\n\n  };\n  onChangeSoldBy = checked => {\n    checked === true\n      ? this.setState({ soldbyswt: \"normal\" })\n      : this.setState({ soldbyswt: \"m2\" });\n  };\n  onChangeVolume = checked => {\n    checked === true\n      ? this.setState({ volumeswt: \"liter\" })\n      : this.setState({ volumeswt: \"ml\" });\n  };\n  onChangeWeight = checked => {\n    checked === true\n      ? this.setState({ weightswt: \"kg\" })\n      : this.setState({ weightswt: \"grm\" });\n  };\n\n  render() {\n    const { products } = this.props;\n    const { descModalDetails } = this.state;\n    let data = this.state.data;\n\n    let categorydata = [];\n    let subcategorydata = []; \n    let branddata = [];\n    let brandmodeldata = [];\n    for (var i = data.length - 1; i >= 0; i--) {\n      if(data[i].sector === 'Category') categorydata.push(data[i]);\n      if(data[i].sector === 'Subcategory') subcategorydata.push(data[i]);\n      if(data[i].sector === 'Brand') branddata.push(data[i]);\n      if(data[i].sector === 'Brandmodel') brandmodeldata.push(data[i]);\n    }\n\n    return ( \n      <div>\n        <MDBTable style={{ margin: \"auto\" }}>\n          <MDBTableHead>\n            <tr>\n              <th>Image</th>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Discount</th>\n              <th>Barcode</th>\n              <th>Department</th>\n              <th>Category</th>\n              <th>Sub_Category</th>\n              <th>Brand</th>\n              <th>Model</th>\n              <th>Sold_By</th>\n              <th>Product_Portion</th>\n              <th>Measurement</th>\n              <th>Description</th>\n              <th>Actions</th>\n            </tr>\n          </MDBTableHead>\n          <MDBTableBody>\n            {products.length &&\n              // eslint-disable-next-line array-callback-return\n              products.map(product => {\n                let dep=this.state.data.filter(item=>item._id===product.department);\n                if (\n                  !!product.portionn &&\n                  !!product.soldByObject &&\n                  !!product.measurement\n                ) {\n                  //console.log(product.portionn.portion);\n                  return (\n                    <tr key={product._id}>\n                      <td>\n                        {\" \"}\n                        <img\n                          width={50} \n                          alt={product.name}\n                          src={`/${product.image}`}\n                        />\n                      </td>\n                      <td>{product.name}</td>\n                      <td>{product.price}</td>\n                      <td>{product.discount}</td>\n                      <td>{product.barcode}</td>\n                      <td>{dep.length?dep[0].title:\"\"}</td>\n                      <td>{this.state.data.filter(item=>item._id===product.category).map(item=>item.title)}</td>\n                      <td>{this.state.data.filter(item=>item._id===product.subCategory).map(item=>item.title)}</td>\n                      <td>{this.state.data.filter(item=>item._id===product.model).map(item=>item.title)}</td>\n                      <td>{this.state.data.filter(item=>item._id===product.brand).map(item=>item.title)}</td>\n                      <td>\n                        {product.soldByObject.soldBy}/\n                        {product.soldByObject.soldbyswt}\n                      </td>\n                      <td>\n                        {product.portionn.portion}:\n                        {product.portionn.portionValue}\n                        {product.portionn.portionswt}\n                      </td>\n                      <td>\n                        {product.measurement.unit}/<br />\n                        {product.measurement.height}H,\n                        {product.measurement.width}W<br />\n                        {product.measurement.lenght}L,\n                        {product.measurement.depth}D\n                      </td>\n                      <td onClick={() => this.setState({ descModal: true, descModalDetails: product })}>{product.description}</td>\n                      <td>\n                        <DeleteForeverIcon\n                          onClick={() => {\n                            this.showDeleteConfirm(product._id);\n                          }}\n                        />\n                        <EditIcon\n                          onClick={() => {\n                            this.edit(product._id);\n                          }}\n                        />\n                      </td>\n                    </tr>\n                  );\n                }\n              })}\n          </MDBTableBody>\n        </MDBTable>\n\n        <Modal\n          width=\"700px\"\n          visible={this.state.provisible}\n          title=\"Update Products\"\n          onCancel={() => {\n            this.setState({ provisible: false });\n            this.setState({nameError:''});\n            this.setState({priceError:''});\n            this.setState({discountError:''});\n          }}\n          footer={null}\n        >\n          <form encType=\"multipart/form-data\">\n            <MDBRow>\n              <MDBCol md=\"8\">\n                <h6>\n                  <b>Product Sold By:</b>\n                </h6>\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    value={this.state.soldby}\n                    type=\"radio\"\n                    checked={this.state.soldby === \"unit\"}\n                    className=\"custom-control-input\"\n                    id=\"radio1\"\n                    name=\"soldby\"\n                    onClick={() => {\n                      this.setState({\n                        soldby: \"unit\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio1\">\n                    Unit\n                  </label>\n                </div>\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    value={this.state.soldby}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    checked={this.state.soldby === \"portion\"}\n                    id=\"radio2\"\n                    name=\"soldby\"\n                    onClick={() => {\n                      this.setState({\n                        soldby: \"portion\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio2\">\n                    Portion\n                  </label>\n                </div>\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    value={this.state.soldby}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    checked={this.state.soldby === \"measurement\"}\n                    id=\"radio3\"\n                    name=\"soldby\"\n                    onClick={() => {\n                      this.setState({\n                        soldby: \"measurement\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio3\">\n                    Measurement\n                  </label>\n\n                  <div style={{ paddingLeft: \"13px\" }}>\n                    {\" \"}\n                    m<sup>2</sup>\n                    <Switch\n                      checked={this.state.soldbyswt === \"normal\"}\n                      onChange={this.onChangeSoldBy}\n                      style={{ margin: \"0px 4px 0px 4px\" }}\n                    />\n                    Normal\n                  </div>\n                </div>\n              </MDBCol>\n              <MDBCol md=\"4\">\n                <Upload\n                  handleImage={this.handleImage}\n                  defaultV={`/${this.state.image}`}\n                />\n              </MDBCol>\n            </MDBRow>\n\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <MDBInput\n                  label=\"Product Barcode\"\n                  type=\"text\"\n                  value={this.state.barcode}\n                  onChange={e => {\n                    let barcode = e.target.value;\n                    this.setState({ barcode });\n                  }}\n                />\n\n                <MDBInput\n                  label=\"Product Name\"\n                  type=\"text\"\n                  value={this.state.name}\n                  onChange={e => {\n                    let name = e.target.value;\n                    this.setState({ name });\n                    this.setState({nameError:''})\n                  }}\n                />\n                <p style={{color:'red'}}>{this.state.nameError}</p>\n                <MDBInput\n                  label=\"Product Price\"\n                  type=\"number\"\n                  min=\"0\"\n                  value={this.state.price}\n                  onChange={e => {\n                    let price = e.target.value;\n                    this.setState({ price });\n                    this.setState({priceError:''});\n                  }}\n                />\n                <p style={{color:'red'}}>{this.state.priceError}</p>\n                <MDBInput\n                  label=\"Product Discount in %\"\n                  type=\"number\"\n                  min=\"0\"\n                  max={this.state.price}\n                  value={this.state.discount}\n                  onChange={e => {\n                    this.setState({ discount: e.target.value });\n                    this.setState({discountError:''});\n                  }}\n                />\n                <p style={{color:'red'}}>{this.state.discountError}</p>\n              </MDBCol>\n            </MDBRow>\n            \n            {this.state.soldby==='portion'?\n            <div>\n              <h6>\n              <b>Product Portion:</b>\n            </h6>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    value={this.state.portion}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    checked={this.state.portion === \"volume\"}\n                    id=\"radio4\"\n                    name=\"portion\"\n                    onClick={() => {\n                      this.setState({\n                        portion: \"volume\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio4\">\n                    Volume\n                  </label>\n                </div>\n\n                <div className=\"custom-control  custom-control-inline\">\n                  <span> ml</span>\n                  <Switch\n                    checked={this.state.volumeswt === \"liter\"}\n                    onChange={this.onChangeVolume}\n                    style={{ margin: \"0px 4px 0px 4px\" }}\n                  />\n                  <span> liter </span>\n                </div>\n                <Input\n                  defaultValue=\"00\"\n                  value={this.state.volumeValue}\n                  onChange={e => {\n                    e.preventDefault();\n                    this.setState({ volumeValue: e.target.value });\n                  }}\n                  style={{ width: \"60px\", marginLeft: \"20px\" }}\n                />\n              </MDBCol>\n              <MDBCol md=\"12\" style={{ marginTop: \"3%\" }}>\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    value={this.state.portion}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    checked={this.state.portion === \"weight\"}\n                    id=\"radio5\"\n                    name=\"portion\"\n                    onClick={() => {\n                      this.setState({\n                        portion: \"weight\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio5\">\n                    Weight\n                  </label>\n                </div>\n                <div className=\"custom-control  custom-control-inline\">\n                  <span> grms</span>\n                  <Switch\n                    checked={this.state.weightswt === \"kg\"}\n                    onChange={this.onChangeWeight}\n                    style={{ margin: \"0px 4px 0px 4px\", marginLeft: \"23px\" }}\n                  />\n                  <span> kg</span>\n                </div>\n                <Input\n                  defaultValue=\"00\"\n                  value={this.state.weightValue}\n                  onChange={e => {\n                    e.preventDefault();\n                    this.setState({\n                      weightValue: e.target.value\n                    });\n                  }}\n                  style={{ width: \"60px\", marginLeft: \"28px\" }}\n                />\n              </MDBCol>\n            </MDBRow>\n            </div>\n            :null\n            }\n            {this.state.soldby ==='measurement'?\n            <div>\n              <h6 style={{ marginTop: \"2%\" }}>\n              <b>Product Measurement:</b>\n            </h6>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <div className=\"custom-control custom-radio custom-control-inline\">\n                  <input\n                    defaultChecked={this.state.measurementswt}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    checked={this.state.measurementswt === \"cm\"}\n                    id=\"radio6\"\n                    name=\"measurementswt\"\n                    onClick={() => {\n                      this.setState({\n                        measurementswt: \"cm\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio6\">\n                    cm\n                  </label>\n                </div>\n                <div\n                  className=\"custom-control custom-radio custom-control-inline\"\n                  style={{ marginLeft: \"6%\" }}\n                >\n                  <input\n                    defaultChecked={this.state.measurementswt}\n                    type=\"radio\"\n                    className=\"custom-control-input\"\n                    checked={this.state.measurementswt === \"meters\"}\n                    id=\"radio7\"\n                    name=\"measurementswt\"\n                    onClick={() => {\n                      this.setState({\n                        measurementswt: \"meters\"\n                      });\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"radio7\">\n                    meters\n                  </label>\n                </div>\n              </MDBCol>\n              <MDBRow style={{ marginTop: \"4%\" }}>\n                <MDBCol md=\"12\">\n                  <div className=\"custom-control  custom-control-inline\">\n                    <Input\n                      defaultValue=\"00\"\n                      style={{ width: \"60px\" }}\n                      prefix=\"L:\"\n                      value={this.state.length}\n                      onChange={e => {\n                        e.preventDefault();\n                        this.setState({\n                          length: e.target.value\n                        });\n                      }}\n                    />\n                  </div>\n                  <div className=\"custom-control  custom-control-inline\">\n                    <Input\n                      defaultValue=\"00\"\n                      style={{ width: \"60px\" }}\n                      prefix=\"W:\"\n                      value={this.state.width}\n                      onChange={e => {\n                        e.preventDefault();\n                        this.setState({\n                          width: e.target.value\n                        });\n                      }}\n                    />\n                  </div>\n                  <div className=\"custom-control  custom-control-inline\">\n                    <Input\n                      defaultValue=\"00\"\n                      style={{ width: \"60px\" }}\n                      prefix=\"D:\"\n                      value={this.state.depth}\n                      onChange={e => {\n                        e.preventDefault();\n                        this.setState({\n                          depth: e.target.value\n                        });\n                      }}\n                    />\n                  </div>\n                  <div className=\"custom-control  custom-control-inline\">\n                    <Input\n                      defaultValue=\"00\"\n                      style={{ width: \"60px\" }}\n                      prefix=\"H:\"\n                      value={this.state.height}\n                      onChange={e => {\n                        e.preventDefault();\n                        this.setState({\n                          height: e.target.value\n                        });\n                      }}\n                    />\n                  </div>\n                </MDBCol>\n              </MDBRow>\n            </MDBRow>\n            </div>\n            :null}\n\n            \n            <MDBRow style={{ marginTop: \"5%\" }}>\n              <MDBCol md={12}>\n                <FormControl style={{ width: \"100%\", textAlign: \"left\" }}>\n                  <InputLabel style={{ width: \"100%\", textAlign: \"left\" }}>\n                    Select a Department\n                  </InputLabel>\n                  <Select\n                    value={this.state.department}\n                    onChange={e => {\n                      this.setState({ department: e.target.value });\n                    }}\n                    style={{ width: \"100%\", textAlign: \"left\" }}\n                  >\n                    {this.state.data.length ? \n                      this.state.data.filter(it=>it.sector==='Department').map(item=>{return(\n                        <MenuItem value={item._id}>{item.title}</MenuItem>\n                      )})\n                    :null}\n                  </Select>\n                </FormControl>\n                <FormControl style={{ width: \"100%\", textAlign: \"left\" }}>\n                  <InputLabel style={{ width: \"100%\", textAlign: \"left\" }}>\n                    Select a Category\n                  </InputLabel>\n                  <Select\n                    value={this.state.category}\n                    onChange={e => {\n                      this.setState({ category: e.target.value });\n                    }}\n                    style={{ width: \"100%\", textAlign: \"left\" }}\n                  >\n                    {this.state.data.length && this.state.department? \n                      this.state.data.filter(it=>it.sector==='Category'&& it.parentId===this.state.department).map(item=>{return(\n                        <MenuItem value={item._id}>{item.title}</MenuItem>\n                      )})\n                    :null}\n                    {/* {optionItems_category} */}\n                  </Select>\n                </FormControl>\n                <FormControl style={{ width: \"100%\", textAlign: \"left\" }}>\n                  <InputLabel style={{ width: \"100%\", textAlign: \"left\" }}>\n                    Select a Sub Category\n                  </InputLabel>\n                  <Select\n                    value={this.state.subCategory}\n                    onChange={e => {\n                      this.setState({ subCategory: e.target.value });\n                    }}\n                    style={{ width: \"100%\", textAlign: \"left\" }}\n                  >\n                    {this.state.data.length && this.state.category? \n                      this.state.data.filter(it=>it.sector==='Subcategory'&& it.parentId===this.state.category).map(item=>{return(\n                        <MenuItem value={item._id}>{item.title}</MenuItem>\n                      )})\n                    :null}\n                    {/* {optionItems_subcategory} */}\n                  </Select>\n                </FormControl>{\" \"}\n                \n                <FormControl style={{ width: \"100%\", textAlign: \"left\" }}>\n                  <InputLabel style={{ width: \"100%\", textAlign: \"left\" }}>\n                    Select a Brand\n                  </InputLabel>\n                  <Select\n                    value={this.state.model}\n                    onChange={e => {\n                      this.setState({ model: e.target.value });\n                    }}\n                    style={{ width: \"100%\", textAlign: \"left\" }}\n                  >\n                    {this.state.data.length?\n                      this.state.data.filter(it=>it.sector==='Brand').map(item=>{\n                        return(<MenuItem value={item._id}>{item.title}</MenuItem>)\n                      })\n                    :null}\n                    {/* {optionItems_brandmodel} */}\n                  </Select>\n                </FormControl>\n                <FormControl style={{ width: \"100%\", textAlign: \"left\" }}>\n                  <InputLabel style={{ width: \"100%\", textAlign: \"left\" }}>\n                    Select a Model\n                  </InputLabel>\n                  <Select\n                    value={this.state.brand}\n                    onChange={e => {\n                      this.setState({ brand: e.target.value });\n                    }}\n                    style={{ width: \"100%\", textAlign: \"left\" }}\n                  >\n                    {this.state.data.length && this.state.model?\n                      this.state.data.filter(it=>it.sector==='Model' && it.parentId === this.state.model).map(item=>{\n                        return(<MenuItem value={item._id}>{item.title}</MenuItem>)\n                      })\n                    :null}\n                    {/* {optionItems_brand} */}\n                  </Select>\n                </FormControl>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <MDBInput\n                  type=\"textarea\"\n                  label=\" Product Description\"\n                  rows=\"2\"\n                  value={this.state.description}\n                  onChange={e => {\n                    this.setState({ description: e.target.value });\n                  }}\n                />\n              </MDBCol>\n            </MDBRow>\n\n            <div className=\"text-center mt-4\">\n              <MDBBtn color=\"info\" outline onClick={this.handleEdit}>\n                update <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n              </MDBBtn>\n            </div>\n          </form>\n        </Modal>\n        <Modal\n          title=\"Description\"\n          visible={this.state.descModal}\n          footer={null}\n          onCancel={this.descModalHandleCancel}\n        >\n          <p>{descModalDetails.description}</p>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport ProductpopUp from \"./ProductpopUp\";\nimport ServicepopUp from \"./ServicepopUp\";\nimport FatchService from \"./FatchService\";\nimport FatchProducts from \"./FatchProduct\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    \"aria-controls\": `nav-tabpanel-${index}`\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={event => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\n\n\nexport default function ProductService() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const [products, setProducts] = React.useState([]);\n  const [services, setServices] = React.useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  React.useEffect(() => {\n    fetchProductsHandler();\n    fetchServicesHandler();\n  }, []);\n\n  const fetchProductsHandler = () => {\n    fetch(`/product`)\n      .then(res => res.json())\n      .then(res => {\n        setProducts(res.result);\n      })\n      .catch(error => {\n        console.log(\"Please check your internet connection..!\", error);\n      });\n  };\n\n  const fetchServicesHandler = () => {\n    fetch(`/service`)\n      .then(res => res.json())\n      .then(res => {\n        setServices(res.result)\n      })\n      .catch(error => {\n        console.log(\"Please check your internet connection..!\", error);\n      });\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        style={{\n          zIndex: \"0\",\n          color: \"#0dc835\",\n          width: \"32%\",\n          margin: \"auto\",\n          background: \"transparent\",\n          marginTop: \"3%\",\n          boxShadow: \"none\"\n        }}\n      >\n        <Tabs\n          value={value}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n          id=\"textcolor\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          <LinkTab label=\"Product\" {...a11yProps(0)} />\n          <LinkTab label=\"Services\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <ProductpopUp products={products} fetchProductsHandler={fetchProductsHandler} />\n        <FatchProducts products={products} fetchProductsHandler={fetchProductsHandler} />\n\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <ServicepopUp services={services} fetchServicesHandler={fetchServicesHandler} />\n        <FatchService services={services} fetchServicesHandler={fetchServicesHandler} />\n      </TabPanel>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport { Router, Switch } from 'react-router-dom';\nimport { createBrowserHistory as createHistory } from 'history';\nimport EditorRoutes from './EditorRoutes';\n//import PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport Main from '../Components/Layouts/Pages/Main';\nimport EditorLogin from '../Components/Layouts/Pages/EditorLogin';\nimport EditorReg from '../Components/Layouts/Pages/EditorReg';\nimport Products from '../Components/Layouts/Pages/Products';\nimport Services from '../Components/Layouts/Pages/Services';\nimport NotFoundPage from '../Components/Layouts/Pages/NotFoundPage';\nimport EditorDasboard from '../Components/Dashboard/Editor/Dashboard';\n\nimport EditorSlide from '../Components/Dashboard/Editor/Slide';\nimport ManageSector from '../Components/Dashboard/Editor/ManageSector';\nimport Quote from '../Components/Dashboard/Editor/Quote';\nimport Setting from '../Components/Dashboard/Editor/Setting';\nimport Finance from '../Components/Dashboard/Editor/Financ';\n\nimport Portfolio from '../Components/Dashboard/Editor/Portfolio';\nimport OurTeam from '../Components/Dashboard/Editor/OurTeam';\nimport News from '../Components/Dashboard/Editor/News';\nimport About from '../Components/Dashboard/Editor/About';\nimport Sectors from '../Components/Dashboard/Editor/Sectors';\nimport Message from '../Components/Dashboard/Editor/Message';\nimport ProductService from '../Components/Dashboard/Editor/ProductService';\n\nexport const history = createHistory();\nclass AppRouter extends React.Component {\n\n  render() {\n    return (\n      <Router history={history} > \n        <div>\n          <Switch>\n            <PublicRoute path=\"/\" component={Main} exact={true} />\n            <PublicRoute path=\"/editor-login\" component={EditorLogin} exact={true} />\n            <PublicRoute path=\"/editor-reg\" component={EditorReg} exact={true} />\n            <PublicRoute path=\"/products\" component={Products} exact={true} />\n            <PublicRoute path=\"/services\" component={Services} exact={true} />\n            <EditorRoutes path=\"/editor-dasboard\" component={EditorDasboard} exact={true} />\n\n            <EditorRoutes path=\"/editor-slide\" component={EditorSlide} exact={true} />\n            <EditorRoutes path=\"/editor-managesector\" component={ManageSector} exact={true} />\n            <EditorRoutes path=\"/editor-message\" component={Message} exact={true} />\n            <EditorRoutes path=\"/editor-quote\" component={Quote} exact={true} />\n            <EditorRoutes path=\"/editor-setting\" component={Setting} exact={true} />\n            <EditorRoutes path=\"/editor-finance\" component={Finance} exact={true} />\n\n\n            <EditorRoutes path=\"/editor-portfolio\" component={Portfolio} exact={true} />\n            <EditorRoutes path=\"/editor-ourteam\" component={OurTeam} exact={true} />\n            <EditorRoutes path=\"/editor-news\" component={News} exact={true} />\n            <EditorRoutes path=\"/editor-about\" component={About} exact={true} />\n            <EditorRoutes path=\"/editor-sectors\" component={Sectors} exact={true} />\n            <EditorRoutes path=\"/editor-product-service\" component={ProductService} exact={true} />\n\n            <PublicRoute component={NotFoundPage} />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n};\nexport default AppRouter;\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport { red, blue } from '@material-ui/core/colors'\nimport AppRouter from './routers/AppRouters';\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./Components/Layouts/index.css\"\nconst theme = createMuiTheme({\n  palette: {\n    primary:{\n    main: blue[500]\n},\n    secondary: red,\n    type: 'light'\n  },\n  spacing: 10\n})\n\nrender(\n  <MuiThemeProvider theme={theme}>\n    <AppRouter />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}